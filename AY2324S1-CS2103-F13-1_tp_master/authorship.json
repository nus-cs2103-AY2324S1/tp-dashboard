[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103-F13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103-F13-1/tp/actions)","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"**Connexion** is a desktop application for undergraduate students to manage their networking connections in the Tech industry.","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"* It is optimized for text UI usage via a Command Line Interface (CLI).","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"* Users can view their connections on a neat Graphical User Interface (GUI).","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"If you:","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"1. are a **fast** typer","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"2. prefer a **lightweight** user interface instead of fancy graphics","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"**Connexion** will get your connections sorted out in no time.","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"### Documentation","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"* **[Connexion Product Website](https://ay2324s1-cs2103-f13-1.github.io/tp/)**","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"* **[User Guide](https://ay2324s1-cs2103-f13-1.github.io/tp/UserGuide.html)**","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"* **[Developer Guide](https://ay2324s1-cs2103-f13-1.github.io/tp/DeveloperGuide.html)**","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"### Acknowledgement","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"imkwokyong":19,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"mainClassName \u003d \u0027connexion.Main\u0027","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"    dependsOn test","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"run {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"    archiveFileName \u003d \u0027connexion.jar\u0027","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"imkwokyong":6,"-":70,"geoffong11":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"### Angel Lee","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"\u003cimg src\u003d\"images/angelyxx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"[[github](https://github.com/angelyxx)]","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"[[portfolio](team/angelyxx.md)]","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"* Role: Developer","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"* Responsibilities: Testing, Code Quality, Git Expert","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"### Kuan Kwok Yong","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"\u003cimg src\u003d\"images/imkwokyong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"[[github](http://github.com/imkwokyong)]","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"[[portfolio](team/imkwokyong.md)]","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"* Responsibilities : Deliverables \u0026 Deadlines, Scheduling \u0026 Tracking","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"### Geoff Ong","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"\u003cimg src\u003d\"images/geoffong11.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"[[github](http://github.com/geoffong11)]","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"[[portfolio](team/geoffong11.md)]","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"* Role: Developer, Team Lead","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"### Xavier Pok","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"\u003cimg src\u003d\"images/xavierpok.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"[[github](http://github.com/xavierpok)]","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"[[portfolio](team/xavierpok.md)]","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"* Responsibilities: Testing, Code Quality, IDE Expert","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"xavierpok":23,"-":29,"geoffong11":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"As another example that is sensitive to a `Clock` object (as per the Java API) for timekeeping, a second sequence diagram for `add {ARGS}`","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":", where `{ARGS}` is some valid set of arguments, is also below.","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"![Interactions Inside the Logic Component for the `add {ARGS}` Command](images/AddSequenceDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"xavierpok"},"content":"**For the sake of brevity, where the `Clock` object is irrelevant, the call to `AddressBookParser#withClock` will be omitted in subsequent diagrams.**","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"xavierpok"},"content":"As an example of when the `Clock` object is irrelevant, the sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"xavierpok"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"Angelyxx"},"content":"* All `XYZCommandParser` classes that further need to be aware of the current time (i.e. `AddCommandParser` \u0026 `EditCommandParser`) further inherit from the `ClockDependentParser` interface.","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"xavierpok"},"content":"* Any command that needs to be aware of the current time takes the current time during parsing. (I.e. `add` \u0026 `edit`)","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"imkwokyong"},"content":"Classes used by multiple components are in the `connexion.commons` package.","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"imkwokyong"},"content":"### Filter feature (implemented by Kwok Yong)","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"imkwokyong"},"content":"The user can filter contacts based on a specified field and keywords.","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"imkwokyong"},"content":"Each field has its own predicate, `{Field}ContainsKeywordsPredicate` or `{Is/Not}MarkedPredicate`. ","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"imkwokyong"},"content":"For example, `JobContainsKeywordsPredicate` represents the predicate for Job. ","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"imkwokyong"},"content":"Through `FilterCommandParser`, a field prefix is detected to recognize the field to filter for. Then, depending","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"imkwokyong"},"content":"on the field, the parser will determine whether to parse keywords as a list. Then, the parser will construct the corresponding predicate, ","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"imkwokyong"},"content":"which in turn is used to construct a `FilterCommand`.","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"imkwokyong"},"content":"Through `FilterCommand#execute()`, the predicate is then passed as an argument to `Model#updateFilteredPersonList()`, causing the UI to only show contacts who satisfy the predicate.","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"imkwokyong"},"content":"The sequence diagram below shows the interaction between Logic and Model components after the API call `execute(\"filter c/Google\")`","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"imkwokyong"},"content":"![Interactions Inside the Logic and Model Components for the `filter c/Google` Command](images/FilterSequenceDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"imkwokyong"},"content":"The reason behind implementing the feature this way is that this feature is partly inspired","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"imkwokyong"},"content":"by the prior implementation of the find feature in AB3. This is just an enhancement of the feature, in which the target","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"imkwokyong"},"content":"user is more likely to find filtering contacts via a specified field, especially company and job, useful.","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"imkwokyong"},"content":"An ongoing discussion is to merge the separate predicates into one but it takes low precedence.","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"xavierpok"},"content":"### LastModified (implemented by Xavier)","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"xavierpok"},"content":"Each `Person` has a last modified detailing when it was last modified.","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"xavierpok"},"content":"The information below has also been briefly integrated into the detailing of [parsing \u0026 logic](#logic-component), but with less-relevant details excluded above.","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"xavierpok"},"content":"The `Model` has a `Clock` object (as described in the [Java time API](https://docs.oracle.com/javase/8/docs/api/java/time/Clock.html)), which is set to","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"xavierpok"},"content":"the current system time on instantiation. The methods `setClock` and `getClock` are exposed to modify the clock used, for testing or for extension.","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"xavierpok"},"content":"The `Logic` object reads the `Model`\u0027s clock to reference what clock operations should use, and instantiates a version of `AddressBookParser` that uses that clock via chained method `withClock`.","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"Angelyxx"},"content":"The new `AddressBookParser` then further passes the clock via method chaining to any `ClockDependentParser`s, or ignores the clock for commands that do not need to care about the clock.","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"Angelyxx"},"content":"Currently, the only `ClockDependentParser`s are `AddCommandParser` and `EditCommandParser`.","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"xavierpok"},"content":"Finally, the relevant parsers read the clock via `LocalDateTime.now(clock)` to extract the correct `LocalDateTime` object as needed.","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"xavierpok"},"content":"This `LocalDateTime` is passed into the `LastModifiedDateTime` constructor for further use as a field in relevant objects.","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"xavierpok"},"content":"Furthermore, `LastModifiedDateTime` truncates the `LocalDateTime` to precision of seconds.","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"xavierpok"},"content":"Of note, this means that :","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"xavierpok"},"content":"* `LastModifiedDateTime` will have its notion of \"current\" time set to some time during parsing","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"Angelyxx"},"content":"* It is possible to inject `Clock` objects for testing/extension into the following objects : `Logic`, `Model`, all `ClockDependentParsers` (including `AddressBookParser`)","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"xavierpok"},"content":"* `LastModifiedDateTime`s that vary by milliseconds will evaluate to be the same object","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"Angelyxx"},"content":"### Schedule feature (implemented by Geoff)","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"Angelyxx"},"content":"The user can schedule meetings with contacts.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"Angelyxx"},"content":"Through `ScheduleCommandParser`, the index of the person in the list and the field prefixes `i/` and `a/` (if there is) are read. Keywords are then parsed and read into a `ScheduleDescripter`","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"Angelyxx"},"content":"object, where it is used construct a `ScheduleCommand` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"Angelyxx"},"content":"Through `ScheduleCommand#execute()`, the `scheduleDescriptor` is then used to create a `Person` object with the added or edited schedule and schedule name.","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"Angelyxx"},"content":"Through `model#setPerson()`, the `Person` object created then replaces the original `Person` object in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"Angelyxx"},"content":"The sequence diagram below shows the interaction between Logic and Model components after the API call `execute(\"schedule 1 i/2023-12-27-07-00 a/Seminar\")`","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"Angelyxx"},"content":"![Interactions Between Logic and Model Components for the `schedule 1 i/2023-12-27-07-00 a/Seminar` Command](images/ScheduleSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"Angelyxx"},"content":"The reason behind implementing this feature this way is partly inspired by the prior implementation of edit feature in AB3.","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"Angelyxx"},"content":"By using ScheduleDescriptor object, we are able to keep the same level of abstraction.","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"Angelyxx"},"content":"An alternative is to create a ClearSchedule feature that clears the schedule and scheduleName, as the schedule feature can only","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"Angelyxx"},"content":"write and override, but not remove.","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"Angelyxx"},"content":"### Mark Feature (implemented by Angel)","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"Angelyxx"},"content":"The user can mark contacts of interest through the Mark Command respectively.","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"Angelyxx"},"content":"The `Mark` attribute has been added to the `Person` Model, and the boolean value of `markStatus` in the `Mark` Class is set to true via the method `mark()`.","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"Angelyxx"},"content":"When the `MarkCommand` is executed, `markPerson()` is called to the model object with the person chosen by index from the displayed person list.","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"Angelyxx"},"content":"When a new `person` is created via the `AddCommand`, the markStatus is set to false by default.","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"Angelyxx"},"content":"If a contact has been marked, the UI will display \"★\" as the string representation for the `Mark` attribute, otherwise, it represents the attribute as \"☆\".","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"Angelyxx"},"content":"The following sequence diagram shows how the mark operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"Angelyxx"},"content":"![MarkSequenceDiagram](images/MarkSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"Angelyxx"},"content":"### Unmark Feature (implemented by Angel)","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"Angelyxx"},"content":"The user can un-mark contacts of interest through the UnMark Command.","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"Angelyxx"},"content":"The `Mark` attribute has been added to the `Person` Model, and the boolean value of `markStatus` in the `Mark` Class is set to false via the method `unmark()`.","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"Angelyxx"},"content":"When a new `person` is created via the `AddCommand`, the markStatus is set to false by default.","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"Angelyxx"},"content":"If a contact has been un-marked, the UI will display \"☆\" as the string representation for the `Mark` attribute.","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"Angelyxx"},"content":"The following sequence diagram shows how the un-mark operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"Angelyxx"},"content":"![UnMarkSequenceDiagram](images/UnMarkSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"xavierpok"},"content":"* undergraduate student interested in managing networking connections in Tech","lastModifiedDate":"2023-09-30"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"xavierpok"},"content":"**Value proposition**: Lightweight, fast interface for experienced users that want to manage their networking connections in the Tech industry quickly.","lastModifiedDate":"2023-09-30"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"xavierpok"},"content":"| Priority | As a(n) …​      | I want to …​                                            | So that I can…​                                            |","lastModifiedDate":"2023-09-29"},{"lineNumber":377,"author":{"gitId":"imkwokyong"},"content":"|----------|-----------------|---------------------------------------------------------|------------------------------------------------------------|","lastModifiedDate":"2023-10-16"},{"lineNumber":378,"author":{"gitId":"xavierpok"},"content":"| `* * *`  | user            | get text feedback for each line                         | know when the command is received                          |","lastModifiedDate":"2023-09-29"},{"lineNumber":379,"author":{"gitId":"xavierpok"},"content":"| `* * *`  | user            | get error feedback on a wrong command                   | know what went wrong                                       |","lastModifiedDate":"2023-09-29"},{"lineNumber":380,"author":{"gitId":"xavierpok"},"content":"| `* * *`  | user            | delete a contact                                        | remove entries that I no longer need                       |","lastModifiedDate":"2023-09-29"},{"lineNumber":381,"author":{"gitId":"xavierpok"},"content":"| `* * *`  | user            | enter a new contact \u0026 their info                        |                                                            |","lastModifiedDate":"2023-09-29"},{"lineNumber":382,"author":{"gitId":"xavierpok"},"content":"| `* * *`  | user            | tag contacts                                            | organise contacts better                                   |","lastModifiedDate":"2023-09-29"},{"lineNumber":383,"author":{"gitId":"xavierpok"},"content":"| `* * *`  | user            | view contacts                                           |                                                            |","lastModifiedDate":"2023-09-29"},{"lineNumber":384,"author":{"gitId":"xavierpok"},"content":"| `* *`    | user            | be able to setup the app quickly                        |                                                            |","lastModifiedDate":"2023-09-29"},{"lineNumber":385,"author":{"gitId":"xavierpok"},"content":"| `* *`    | impatient user  | have desired information viewable right on my screen    | avoid having to search for what I\u0027m looking for            |","lastModifiedDate":"2023-09-29"},{"lineNumber":386,"author":{"gitId":"xavierpok"},"content":"| `* *`    | user            | mark companies/contacts I\u0027ve applied to                 | avoid applying to the same company/contact twice           |","lastModifiedDate":"2023-09-29"},{"lineNumber":387,"author":{"gitId":"xavierpok"},"content":"| `* *`    | impatient user  | filter/search for contacts                              | narrow down to just contacts I want to look at immediately |","lastModifiedDate":"2023-09-29"},{"lineNumber":388,"author":{"gitId":"xavierpok"},"content":"| `* *`    | impatient user  | easily view the user guide                              | reference how to use the app                               |","lastModifiedDate":"2023-09-29"},{"lineNumber":389,"author":{"gitId":"imkwokyong"},"content":"| `*`      | user            | view the date/time of when a contact was added/modified | know when I added/edited the contact to the list           |","lastModifiedDate":"2023-10-16"},{"lineNumber":390,"author":{"gitId":"xavierpok"},"content":"| `*`      | TBA             | TBA                                                     | TBA                                                        |","lastModifiedDate":"2023-09-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"geoffong11"},"content":"(For all use cases below, the **System** is the `Connexion` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-09-27"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"geoffong11"},"content":"**Use case: UC01 - List persons**","lastModifiedDate":"2023-09-30"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"geoffong11"},"content":"2.  Connexion shows a list of persons","lastModifiedDate":"2023-09-27"},{"lineNumber":404,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":405,"author":{"gitId":"geoffong11"},"content":"    Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":406,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":407,"author":{"gitId":"geoffong11"},"content":"**Use case: UC02 - Delete a person**","lastModifiedDate":"2023-09-30"},{"lineNumber":408,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":409,"author":{"gitId":"geoffong11"},"content":"**MSS**","lastModifiedDate":"2023-09-30"},{"lineNumber":410,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":411,"author":{"gitId":"geoffong11"},"content":"1.  User lists the person (UC01)","lastModifiedDate":"2023-09-30"},{"lineNumber":412,"author":{"gitId":"geoffong11"},"content":"2.  User requests to delete a specific person","lastModifiedDate":"2023-09-30"},{"lineNumber":413,"author":{"gitId":"geoffong11"},"content":"3.  Connexion deletes the person","lastModifiedDate":"2023-09-30"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"geoffong11"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-09-30"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"geoffong11"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2023-09-30"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"geoffong11"},"content":"    * 2a1. Connexion shows an error message.","lastModifiedDate":"2023-09-30"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"geoffong11"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-09-30"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"geoffong11"},"content":"**Use case: UC03 - Add a person**","lastModifiedDate":"2023-09-30"},{"lineNumber":430,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":431,"author":{"gitId":"geoffong11"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":432,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":433,"author":{"gitId":"geoffong11"},"content":"1.  User lists the person (UC01)","lastModifiedDate":"2023-09-30"},{"lineNumber":434,"author":{"gitId":"geoffong11"},"content":"2.  User requests to add a person","lastModifiedDate":"2023-09-30"},{"lineNumber":435,"author":{"gitId":"geoffong11"},"content":"3.  Connexion adds the person","lastModifiedDate":"2023-09-30"},{"lineNumber":436,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":437,"author":{"gitId":"geoffong11"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":438,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":439,"author":{"gitId":"geoffong11"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":440,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":441,"author":{"gitId":"geoffong11"},"content":"* 2a. Connexion detects an error in the entered details","lastModifiedDate":"2023-09-30"},{"lineNumber":442,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":443,"author":{"gitId":"geoffong11"},"content":"    * 2a1. Connexion shows an error message.","lastModifiedDate":"2023-09-30"},{"lineNumber":444,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":445,"author":{"gitId":"geoffong11"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-09-30"},{"lineNumber":446,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":447,"author":{"gitId":"imkwokyong"},"content":"**Use case: UC04 - Filter for person via a specified field**","lastModifiedDate":"2023-10-23"},{"lineNumber":448,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":449,"author":{"gitId":"geoffong11"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":450,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":451,"author":{"gitId":"imkwokyong"},"content":"1.  User enters field name and keywords","lastModifiedDate":"2023-10-23"},{"lineNumber":452,"author":{"gitId":"imkwokyong"},"content":"2.  Connexion shows all persons whose field containing the keywords","lastModifiedDate":"2023-10-23"},{"lineNumber":453,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":454,"author":{"gitId":"geoffong11"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":455,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":456,"author":{"gitId":"imkwokyong"},"content":"**Use case: UC05 - Update a person**","lastModifiedDate":"2023-10-23"},{"lineNumber":457,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":458,"author":{"gitId":"geoffong11"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":459,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":460,"author":{"gitId":"geoffong11"},"content":"1.  User lists the person (UC01)","lastModifiedDate":"2023-09-30"},{"lineNumber":461,"author":{"gitId":"geoffong11"},"content":"2.  User requests to update a person","lastModifiedDate":"2023-09-30"},{"lineNumber":462,"author":{"gitId":"geoffong11"},"content":"3.  Connexion updates person\u0027s information","lastModifiedDate":"2023-09-30"},{"lineNumber":463,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":464,"author":{"gitId":"geoffong11"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":465,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":466,"author":{"gitId":"geoffong11"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":467,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":468,"author":{"gitId":"geoffong11"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-09-30"},{"lineNumber":469,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":470,"author":{"gitId":"geoffong11"},"content":"  Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":471,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":472,"author":{"gitId":"geoffong11"},"content":"* 2a.  The given index is invalid.","lastModifiedDate":"2023-09-30"},{"lineNumber":473,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":474,"author":{"gitId":"geoffong11"},"content":"    * 2a1.  Connexion shows an error message.","lastModifiedDate":"2023-09-30"},{"lineNumber":475,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":476,"author":{"gitId":"geoffong11"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-09-30"},{"lineNumber":477,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":478,"author":{"gitId":"geoffong11"},"content":"* 2b. Connexion detects an error in the entered details","lastModifiedDate":"2023-09-30"},{"lineNumber":479,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":480,"author":{"gitId":"geoffong11"},"content":"    * 2b1. Connexion shows an error message.","lastModifiedDate":"2023-09-30"},{"lineNumber":481,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":482,"author":{"gitId":"geoffong11"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-09-30"},{"lineNumber":483,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":484,"author":{"gitId":"imkwokyong"},"content":"**Use case: UC06 - Mark a person**","lastModifiedDate":"2023-10-23"},{"lineNumber":485,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":486,"author":{"gitId":"geoffong11"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":487,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":488,"author":{"gitId":"geoffong11"},"content":"1.  User lists the person (UC01)","lastModifiedDate":"2023-09-30"},{"lineNumber":489,"author":{"gitId":"geoffong11"},"content":"2.  User requests to mark a person","lastModifiedDate":"2023-09-30"},{"lineNumber":490,"author":{"gitId":"geoffong11"},"content":"3.  Connexion marks the person","lastModifiedDate":"2023-09-30"},{"lineNumber":491,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":492,"author":{"gitId":"geoffong11"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":493,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":494,"author":{"gitId":"geoffong11"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":495,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":496,"author":{"gitId":"geoffong11"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-09-30"},{"lineNumber":497,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":498,"author":{"gitId":"geoffong11"},"content":"  Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":499,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":500,"author":{"gitId":"geoffong11"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2023-09-30"},{"lineNumber":501,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":502,"author":{"gitId":"geoffong11"},"content":"    * 2a1. Connexion shows an error message.","lastModifiedDate":"2023-09-30"},{"lineNumber":503,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":504,"author":{"gitId":"geoffong11"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-09-30"},{"lineNumber":505,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":506,"author":{"gitId":"geoffong11"},"content":"* 2b. The person is already marked.","lastModifiedDate":"2023-09-30"},{"lineNumber":507,"author":{"gitId":"geoffong11"},"content":"    * 2b1. Connexion tells the user the person is already marked.","lastModifiedDate":"2023-09-30"},{"lineNumber":508,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":509,"author":{"gitId":"geoffong11"},"content":"      Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":511,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"xavierpok"},"content":"2. Setup should be possible without configuration (should just be running binaries)","lastModifiedDate":"2023-09-29"},{"lineNumber":515,"author":{"gitId":"xavierpok"},"content":"3. Should respond to all inputs within approx. 2 seconds maximum","lastModifiedDate":"2023-09-30"},{"lineNumber":516,"author":{"gitId":"xavierpok"},"content":"4. Final size of application should be under 50MB","lastModifiedDate":"2023-09-30"},{"lineNumber":517,"author":{"gitId":"xavierpok"},"content":"5. Should retain all core functionality without access to internet","lastModifiedDate":"2023-09-30"},{"lineNumber":518,"author":{"gitId":"xavierpok"},"content":"6. Should NOT crash under recoverable circumstances, excepting irrecoverable errors like a `OutOfMemoryError`, application being killed, etc.","lastModifiedDate":"2023-09-30"},{"lineNumber":519,"author":{"gitId":"xavierpok"},"content":"7. Should be similar to other shell-like / terminal-like CLI for familiarity for tech field users","lastModifiedDate":"2023-09-30"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"geoffong11"},"content":"* **Private contact detail**:  A contact detail that is not meant to be shared with others","lastModifiedDate":"2023-09-28"},{"lineNumber":527,"author":{"gitId":"geoffong11"},"content":"* **Tag**: A fixed label that is meant for easier searching and organisation","lastModifiedDate":"2023-09-28"},{"lineNumber":528,"author":{"gitId":"geoffong11"},"content":"*  **Index**: A number that references the position of person in the list","lastModifiedDate":"2023-09-28"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xavierpok":56,"imkwokyong":29,"Angelyxx":48,"-":352,"geoffong11":96}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"   1. Run the `connexion.Main` and try a few commands.","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"imkwokyong":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"   e.g. `connexion.commons.StringUtilTest`","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"   e.g. `connexion.storage.StorageManagerTest`","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"   e.g. `connexion.logic.LogicManagerTest`","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"imkwokyong":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"**C**onnexion is a desktop application for undergraduate students to manage their networking connections in the Tech industry.","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"  * [Quick start](#quick-start)","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"  * [Features](#features)","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    * [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"    * [Adding a new contact : `add`](#adding-a-new-contact--add)","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    * [Listing all contacts : `list`](#listing-all-contacts--list)","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    * [Editing existing contact details : `edit`](#editing-existing-contact-details--edit)","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    * [Marking contacts of interest : `mark`](#marking-contacts-of-interest--mark)","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    * [Un-marking contacts of interest : `unmark`](#un-marking-contacts-of-interest--unmark)","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    * [Filtering a contact via a specified field : `filter`](#filtering-a-contact-via-a-specified-field--filter)","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    * [Schedule a meeting with a specific person : `schedule`](#schedule-a-meeting-with-a-specific-person--schedule)","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"    * [Clearing a scheduled meeting with a specific person : `clearschedule`](#clearing-a-scheduled-meeting-with-a-specific-person--clearschedule)","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"    * [Adds a note to a specific person : `note`](#adds-a-note-to-a-specific-person--note)","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"    * [Deleting a contact : `delete`](#deleting-a-contact--delete)","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    * [Clearing all entries : `clear`](#clearing-all-entries--clear)","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"    * [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"  * [Known issues](#known-issues)","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"  * [Command summary](#command-summary)","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"  * [Command FIELD Summary](#command-field-summary)","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"2. Download the latest `.jar` and run as shown from [here](https://docs.oracle.com/javase/tutorial/deployment/jar/run.html).","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"3. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"* Items with `...​` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"  e.g. `[t/TAG]...​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"* Commands that modify contacts\u0027 detail or create contacts, i.e. `add` and `edit`, time-stamp the contact with a last modified field.","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"  * `mark` is not considered as modifying contact\u0027s detail and hence does not change the last modified date.","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"### Adding a new contact : `add`","lastModifiedDate":"2023-09-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"Creates a new contact and adds it to the app.","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Angelyxx"},"content":"Format: ```add n/NAME p/PHONE_NUMBER e/EMAIL c/COMPANY j/JOB [t/TAG]...```","lastModifiedDate":"2023-09-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"A person can have any number of tags (including 0).","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"Tags cannot include spaces or non-alphanumeric characters. ","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"We suggest using **PascalCase** or **camelCase** if you want multiple words in a single tag.","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"imkwokyong"},"content":"* Does not allow contacts with duplicate full names to be added. (case-sensitive)","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"imkwokyong"},"content":"  * Eg. Persons with name \"A\" and \"a\" can co-exist in the address book, but not \"A\" and \"A\"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"imkwokyong"},"content":"* `add n/John Wick p/12345678 e/johnwick@gmail.com c/Google j/Software Engineer t/NUS t/metInHackathon`","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Angelyxx"},"content":"* `add n/Aiken Duit p/88888888 e/aikenduit@hotmail.com c/Meta j/Data Engineer`","lastModifiedDate":"2023-09-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"Angelyxx"},"content":"### Listing all contacts : `list`","lastModifiedDate":"2023-09-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"imkwokyong"},"content":"Gives the list of all contacts.","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Angelyxx"},"content":"### Editing existing contact details : `edit`","lastModifiedDate":"2023-09-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"Angelyxx"},"content":"Edits an existing person\u0027s contact details via index.","lastModifiedDate":"2023-09-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Angelyxx"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [c/COMPANY] [j/JOB] [t/TAG]...​`","lastModifiedDate":"2023-09-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"Angelyxx"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** starting from 1.","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"Angelyxx"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"imkwokyong"},"content":"* Same as `add`, no duplicate names (case-sensitive) are allowed.","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"Angelyxx"},"content":"*  `edit 1 n/John Sick p/87654321 t/` edits the 1st person’s name, phone number and clears the tags in the current displayed list.","lastModifiedDate":"2023-09-29"},{"lineNumber":118,"author":{"gitId":"Angelyxx"},"content":"*  `edit 2 n/Betsy Crower t/` edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-09-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"Angelyxx"},"content":"### Marking contacts of interest : `mark`","lastModifiedDate":"2023-09-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"Angelyxx"},"content":"Marks a contact of interest.","lastModifiedDate":"2023-09-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":124,"author":{"gitId":"Angelyxx"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":126,"author":{"gitId":"imkwokyong"},"content":"* Marks the person at the specified `INDEX`, which is shown by a yellow filled star.","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"Angelyxx"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2023-09-29"},{"lineNumber":128,"author":{"gitId":"Angelyxx"},"content":"* The index **must be a positive integer** starting from 1.","lastModifiedDate":"2023-09-29"},{"lineNumber":129,"author":{"gitId":"imkwokyong"},"content":"* When a new contact is created, the contact is un-marked by default.","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"Angelyxx"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":132,"author":{"gitId":"Angelyxx"},"content":"* `list` followed by `mark 2` marks the 2nd person in the address book as contact of interest.","lastModifiedDate":"2023-09-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Angelyxx"},"content":"### Un-marking contacts of interest : `unmark`","lastModifiedDate":"2023-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"Angelyxx"},"content":"Un-marks a contact of interest.","lastModifiedDate":"2023-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"Angelyxx"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":140,"author":{"gitId":"imkwokyong"},"content":"* Marks the person at the specified `INDEX`, which is shown by a yellow hollow star.","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"Angelyxx"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2023-09-29"},{"lineNumber":142,"author":{"gitId":"Angelyxx"},"content":"* The index **must be a positive integer** starting from 1.","lastModifiedDate":"2023-09-29"},{"lineNumber":143,"author":{"gitId":"imkwokyong"},"content":"* When a new contact is created, the contact is un-marked by default.","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":145,"author":{"gitId":"Angelyxx"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":146,"author":{"gitId":"Angelyxx"},"content":"* `unmark 1` un-marks the 1st person in the current displayed list.","lastModifiedDate":"2023-09-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":148,"author":{"gitId":"imkwokyong"},"content":"### Filtering a contact via a specified field : `filter`","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"imkwokyong"},"content":"Displays all entries filtered via a specified field.","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"imkwokyong"},"content":"Supports 2 formats:","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"imkwokyong"},"content":"1. Format 1: `filter FIELD_PREFIX_1 KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"imkwokyong"},"content":"2. Format 2: `filter FIELD_PREFIX_2`","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"imkwokyong"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"imkwokyong"},"content":"* FIELD_PREFIX: represents the field to filter by.","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"imkwokyong"},"content":"    * Example: if filter by company, FIELD_PREFIX \u003d “c/”.","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"imkwokyong"},"content":"    * FIELD_PREFIX_1: one of \"n/\", \"p/\", \"e/\", \"c/\", \"j/\", \"t/\"","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"imkwokyong"},"content":"    * FIELD_PREFIX_2: one of \"m/\", \"u/\"","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"imkwokyong"},"content":"    * Refer to [Command FIELD Summary](#command-field-summary) for more information about the prefixes.","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"imkwokyong"},"content":"* Only supports filtering via ONE field.","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"imkwokyong"},"content":"    * Everything after FIELD_PREFIX_1 will be recognized as keywords, including field prefixes!","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"imkwokyong"},"content":"    * Any keywords behind FIELD_PREFIX_2 will be ignored but the command is still valid.","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"imkwokyong"},"content":"* The search is case-insensitive. e.g. `google` will match `Google`.","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"imkwokyong"},"content":"* The order of the keywords does not matter. e.g. `Google Meta` will match `Meta Google`.","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"Angelyxx"},"content":"* Only returns results with FULL matching keywords to the field.","lastModifiedDate":"2023-09-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"imkwokyong"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":170,"author":{"gitId":"Angelyxx"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":171,"author":{"gitId":"Angelyxx"},"content":"* `filter c/Google` returns all entries with company fields “Google”, “google” “Google Inc.”.","lastModifiedDate":"2023-09-30"},{"lineNumber":172,"author":{"gitId":"Angelyxx"},"content":"* `filter t/friends` returns all entries with the tag “friends”.","lastModifiedDate":"2023-09-30"},{"lineNumber":173,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":174,"author":{"gitId":"geoffong11"},"content":"### Schedule a meeting with a specific person : `schedule`","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"imkwokyong"},"content":"Schedules a meeting with an existing person contact via index.","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"geoffong11"},"content":"Format: `schedule INDEX i/SCHEDULE_TIME [a/SCHEDULE_NAME]`","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"geoffong11"},"content":"* Adds a schedule to the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** starting from 1.","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"geoffong11"},"content":"* Schedule name is an optional field. If no schedule name is given, the default is `Meeting`.","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"geoffong11"},"content":"* Input schedule time must be in the format `YYYY-DD-MM-HH-MM`.","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"geoffong11"},"content":"* If there are existing schedules or schedule names, it will be updated to the input schedule and schedule name. If schedule name is not given, it will still be set to `Meeting`.","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"geoffong11"},"content":"Examples:","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"geoffong11"},"content":"*  `schedule 1 i/2023-12-07-13-45` edits or adds the 1st person\u0027s schedule time and name, where the schedule time is `7 Dec 2023, 13:45:00`, and the schedule name is the default name, `Meeting`.","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"geoffong11"},"content":"*  `schedule 3 i/2024-05-06-18-00 a/Evening seminar` edits or adds the 3rd person\u0027s schedule time and name, where the schedule time is `6 May 2024, 18:00:00`, and the schedule name is `Evening seminar`.","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":189,"author":{"gitId":"xavierpok"},"content":"### Clearing a scheduled meeting with a specific person : `clearschedule`","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"xavierpok"},"content":"Clears the scheduled meeting with an existing person contact via index","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"xavierpok"},"content":"Format : `clearschedule INDEX`","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"imkwokyong"},"content":"* Clears a schedule to the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** starting from 1.","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"xavierpok"},"content":"* Clears both the scheduled date \u0026 time, and the schedule name.","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"xavierpok"},"content":"Example : ","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"xavierpok"},"content":"* `clearschedule 1` removes both the name and time of schedule associated with the 1st person.","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"imkwokyong"},"content":"### Adds a note to a specific person : `note`","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"imkwokyong"},"content":"Adds a note with an existing person contact via index.","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"imkwokyong"},"content":"Format: `note INDEX o/[NOTE]`","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"imkwokyong"},"content":"* Adds a note to the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** starting from 1.","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"imkwokyong"},"content":"* If there are existing notes, it will be updated to the input note.","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"imkwokyong"},"content":"    * Note is an optional field. If left blank, it will clear any existing note that the person has.","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"imkwokyong"},"content":"* By default, note is empty when a person is added to the address book.","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"imkwokyong"},"content":"* Note has a character limit of **1000**.","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"imkwokyong"},"content":"* Note can contain any alphanumeric character, punctuation marks and whitespaces in between.","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"imkwokyong"},"content":"* Any changes to a person\u0027s note is not immediately seen in the UI.","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"imkwokyong"},"content":"    * Do `detail INDEX`, where INDEX refers to the index of the person noted, to view the changes.","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"imkwokyong"},"content":"* `note 1 o/CS2103 is pain!` edits or adds the 1st person\u0027s note to be `CS2103 is pain!`.","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"imkwokyong"},"content":"* `note 2 o/` clears 2nd person\u0027s note.","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"Angelyxx"},"content":"### Deleting a contact : `delete`","lastModifiedDate":"2023-09-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":222,"author":{"gitId":"Angelyxx"},"content":"Deletes a person\u0027s contact via index.","lastModifiedDate":"2023-09-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2023-09-29"},{"lineNumber":227,"author":{"gitId":"Angelyxx"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2023-09-29"},{"lineNumber":228,"author":{"gitId":"Angelyxx"},"content":"* The index **must be a positive integer** starting from 1.","lastModifiedDate":"2023-09-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":231,"author":{"gitId":"Angelyxx"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the contact list.","lastModifiedDate":"2023-09-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2023-09-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-09-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2023-09-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-09-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-09-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2023-09-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2023-09-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":250,"author":{"gitId":"Angelyxx"},"content":"1. When using multiple screens, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the preferences.json file created by the application before running the application again.","lastModifiedDate":"2023-09-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"Angelyxx"},"content":"| Action             | Format, Examples                                                                                                                                                               |","lastModifiedDate":"2023-09-30"},{"lineNumber":257,"author":{"gitId":"imkwokyong"},"content":"|--------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"imkwokyong"},"content":"| **Add**            | `add n/NAME p/PHONE_NUMBER e/EMAIL c/COMPANY j/JOB [t/TAG]...​`\u003cbr\u003ee.g., `add n/John Wick p/12345678 e/johnwick@gmail.com c/Google j/Software Engineer t/NUS t/metInHackathon` |","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"Angelyxx"},"content":"| **Clear**          | `clear`                                                                                                                                                                        |","lastModifiedDate":"2023-09-30"},{"lineNumber":260,"author":{"gitId":"Angelyxx"},"content":"| **Delete**         | `delete INDEX`\u003cbr\u003e e.g., `delete 2`                                                                                                                                            |","lastModifiedDate":"2023-09-30"},{"lineNumber":261,"author":{"gitId":"Angelyxx"},"content":"| **Edit**           | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 1 n/John Sick p/87654321 t/`                                                             |","lastModifiedDate":"2023-09-30"},{"lineNumber":262,"author":{"gitId":"imkwokyong"},"content":"| **Filter**         | `filter FIELD_PREFIX_1 KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `filter c/Google` \u003cbr\u003e OR \u003cbr\u003e `filter FIELD_PREFIX_2` \u003cbr\u003e e.g., `filter m/`                                       |","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"Angelyxx"},"content":"| **List**           | `list`                                                                                                                                                                         |","lastModifiedDate":"2023-09-30"},{"lineNumber":264,"author":{"gitId":"Angelyxx"},"content":"| **Help**           | `help`                                                                                                                                                                         |","lastModifiedDate":"2023-09-30"},{"lineNumber":265,"author":{"gitId":"Angelyxx"},"content":"| **Mark**           | `mark INDEX` \u003cbr\u003e e.g., `mark 2`                                                                                                                                               |","lastModifiedDate":"2023-09-30"},{"lineNumber":266,"author":{"gitId":"Angelyxx"},"content":"| **Unmark**         | `unmark INDEX` \u003cbr\u003e e.g., `unmark 1`                                                                                                                                           |","lastModifiedDate":"2023-09-30"},{"lineNumber":267,"author":{"gitId":"imkwokyong"},"content":"| **Schedule**       | `schedule INDEX i/SCHEDULE_TIME [a/SCHEDULE_NAME]` \u003cbr\u003e e.g., `schedule 3 i/2024-05-06-18-00 a/Evening seminar`                                                                |","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"imkwokyong"},"content":"| **Clear Schedule** | `clearschedule INDEX` \u003cbr\u003e e.g., `clearschedule 1`                                                                                                                             |","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"imkwokyong"},"content":"| **Note**           | `note INDEX o/[NOTE]` \u003cbr\u003e e.g., `note 1 o/CS2103 is pain`                                                                                                                     |","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":273,"author":{"gitId":"Angelyxx"},"content":"## Command FIELD Summary","lastModifiedDate":"2023-09-29"},{"lineNumber":274,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":275,"author":{"gitId":"imkwokyong"},"content":"| Prefix | Description   | Notes                                                |","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"imkwokyong"},"content":"|--------|---------------|------------------------------------------------------|","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"Angelyxx"},"content":"| c/     | COMPANY       | -                                                    |","lastModifiedDate":"2023-09-29"},{"lineNumber":278,"author":{"gitId":"Angelyxx"},"content":"| e/     | EMAIL         | -                                                    |","lastModifiedDate":"2023-09-29"},{"lineNumber":279,"author":{"gitId":"Angelyxx"},"content":"| j/     | JOB           | -                                                    |","lastModifiedDate":"2023-09-29"},{"lineNumber":280,"author":{"gitId":"Angelyxx"},"content":"| n/     | NAME          | -                                                    |","lastModifiedDate":"2023-09-29"},{"lineNumber":281,"author":{"gitId":"Angelyxx"},"content":"| p/     | PHONE_NUMBER  | -                                                    |","lastModifiedDate":"2023-09-29"},{"lineNumber":282,"author":{"gitId":"Angelyxx"},"content":"| t/     | TAG           | Multiple instances of this argument can be accepted. |","lastModifiedDate":"2023-09-29"},{"lineNumber":283,"author":{"gitId":"imkwokyong"},"content":"| m/     | MARKED        | Marked contacts, only usable in `filter` command     |","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"imkwokyong"},"content":"| u/     | UNMARKED      | Un-marked contacts, only usable in `filter` command  |","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"imkwokyong"},"content":"| i/     | SCHEDULE_TIME | Only usable in `schedule` command                    |","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"imkwokyong"},"content":"| a/     | SCHEDULE_NAME | Only usable in `schedule` command                    |","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"imkwokyong"},"content":"| o/     | NOTE          | Only usable in `note` command                        |                 ","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"xavierpok":12,"imkwokyong":68,"Angelyxx":78,"-":117,"geoffong11":13}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"imkwokyong"},"content":"    content: \"Connexion\";","lastModifiedDate":"2023-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"imkwokyong":1,"-":294}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"participant \"withClock:AddressBookParser\" as withClock LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"participant \"person:Person\" as Person LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"participant \":LastModifiedDateTime\" as LastModifiedDateTime LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"[-\u003e LogicManager : execute(\"add {ARGS}\")","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"LogicManager -\u003e LogicManager : getClock","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"LogicManager -\u003e Model : getClock","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"Model --\u003e LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"LogicManager -\u003e AddressBookParser : withClock(clock)","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"create withClock","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"AddressBookParser -\u003e withClock","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"activate withClock","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"withClock --\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"deactivate withClock","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"LogicManager -\u003e withClock : parseCommand(\"add {ARGS}\")","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"activate withClock","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"create AddCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"withClock -\u003e AddCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"activate AddCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"AddCommandParser --\u003e withClock","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"withClock -\u003e AddCommandParser : parse(\"{ARGS}\")","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"activate AddCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"create LastModifiedDateTime","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"AddCommandParser -\u003e LastModifiedDateTime : clock.now()","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"activate LastModifiedDateTime","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"LastModifiedDateTime --\u003e AddCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"deactivate LastModifiedDateTime","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"create Person","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"AddCommandParser -\u003e Person : ARGSAsFields, LastModifiedDateTime","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"activate Person","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"Person --\u003e AddCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"deactivate Person","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"create AddCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"AddCommandParser -\u003e AddCommand : Person","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"activate AddCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"deactivate AddCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"AddCommandParser --\u003e withClock : a","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"withClock --\u003e LogicManager : a","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"deactivate withClock","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"xavierpok"},"content":"activate AddCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"xavierpok"},"content":"AddCommand -\u003e Model : addPerson(person)","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"xavierpok"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"xavierpok"},"content":"Model -\u003e AddressBook : addPerson(person)","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"xavierpok"},"content":"activate AddressBook","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":"deactivate AddressBook","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"Model --\u003e LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"xavierpok"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"xavierpok":101}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"Person *--\u003e Company","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"Person *--\u003e Job","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"Person *--\u003e LastModifiedDateTime","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xavierpok":1,"imkwokyong":2,"-":20}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"participant \"f:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"participant \"p:CompanyContainsKeywordsPredicate\" as CompanyContainsKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"[-\u003e LogicManager : execute(\"filter c/Google\")","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter c/Google\")","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"create FilterCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"AddressBookParser -\u003e FilterCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"activate FilterCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"FilterCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"AddressBookParser -\u003e FilterCommandParser : parse(\"c/Google\")","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"activate FilterCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"create CompanyContainsKeywordsPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"FilterCommandParser -\u003e CompanyContainsKeywordsPredicate : Google","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"activate CompanyContainsKeywordsPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"CompanyContainsKeywordsPredicate --\u003e FilterCommandParser : p","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"deactivate CompanyContainsKeywordsPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"create FilterCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"FilterCommandParser -\u003e FilterCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"activate FilterCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"FilterCommand --\u003e FilterCommandParser : f","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"deactivate FilterCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"FilterCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"FilterCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"destroy FilterCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"LogicManager -\u003e FilterCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"activate FilterCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"FilterCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"FilterCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"CommandResult --\u003e FilterCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"FilterCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"deactivate FilterCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"imkwokyong":78}},{"path":"docs/diagrams/MarkActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":":User inputs mark command;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":":Parser parses command;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"If () then ([Command is valid format])","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"If () then ([Person index exists])","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"    :Marks the person at specified index;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    :Returns success message;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    :Returns failure message","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    (Invalid index);","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":":LogicManager prints message to user;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"    :Returns failure message","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    (invalid command format);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":":Results are displayed to user;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Angelyxx":29}},{"path":"docs/diagrams/MarkSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"participant \":MarkCommandParser\" as MarkCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"participant \"d:MarkCommand\" as MarkCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"[-\u003e LogicManager : execute(\"mark 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"mark 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"create MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"AddressBookParser -\u003e MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"activate MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"MarkCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"AddressBookParser -\u003e MarkCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"activate MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"create MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"MarkCommandParser -\u003e MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"activate MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"MarkCommand --\u003e MarkCommandParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"deactivate MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"MarkCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"MarkCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"destroy MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"LogicManager -\u003e MarkCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"activate MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"MarkCommand -\u003e Model : markPerson(1)","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"Model --\u003e MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"MarkCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"CommandResult --\u003e MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"MarkCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"deactivate MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Angelyxx":70}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"Class Company","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"Class Job","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"Class Mark","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"Class LastModifiedDateTime","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"Person *--\u003e Company","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"Person *--\u003e Job","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"Person *--\u003e Mark","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"Person *--\u003e LastModifiedDateTime","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"Phone -[hidden]right-\u003e Email","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"Email -[hidden]right-\u003e Company","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"ModelManager -[hidden]-\u003e \"~* filtered\" Person","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xavierpok":2,"imkwokyong":6,"Angelyxx":3,"-":49}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nClockDependentParser\" as ClockDependentParser","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"AddressBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"ClockDependentParser .left.|\u003e Parser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"XYZCommandParser .up.|\u003e ClockDependentParser","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"Angelyxx":3,"-":38}},{"path":"docs/diagrams/ScheduleSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"participant \":ScheduleCommandParser\" as ScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"participant \":ScheduleCommand\" as ScheduleCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"participant \"scheduleDescriptor: ScheduleDescriptor\" as Person LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"[-\u003e LogicManager : execute(\"schedule 1 i/2023-12-27-07-00 a/Seminar\")","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"schedule 1 i/2023-12-27-07-00 a/Seminar\")","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"create ScheduleCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"AddressBookParser -\u003e ScheduleCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"ScheduleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"AddressBookParser -\u003e ScheduleCommandParser : parse(\"1 i/2023-12-27-07-00 a/Seminar\")","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"create Person","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"ScheduleCommandParser -\u003e Person : ScheduleAsField, ScheduleNameAsField, LastModifiedDateTimeAsField","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"activate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"Person --\u003e ScheduleCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"deactivate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"create ScheduleCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"ScheduleCommandParser -\u003e ScheduleCommand : Index, scheduleDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"activate ScheduleCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"ScheduleCommand --\u003e ScheduleCommandParser : s","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"deactivate ScheduleCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"ScheduleCommandParser --\u003e AddressBookParser : s","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"ScheduleCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"destroy ScheduleCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"LogicManager -\u003e ScheduleCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"activate ScheduleCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"ScheduleCommand -\u003e Model : setPerson(person)","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"Model -\u003e AddressBook : setPerson(person)","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"activate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"deactivate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"Model --\u003e ScheduleCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"ScheduleCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"CommandResult --\u003e ScheduleCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"ScheduleCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"deactivate ScheduleCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"geoffong11":90}},{"path":"docs/diagrams/UnMarkSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"participant \":UnMarkCommandParser\" as UnMarkCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"participant \"d:UnMarkCommand\" as UnMarkCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"[-\u003e LogicManager : execute(\"unmark 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"unmark 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"create UnMarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"AddressBookParser -\u003e UnMarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"activate UnMarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"UnMarkCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"deactivate UnMarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"AddressBookParser -\u003e UnMarkCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"activate UnMarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"create UnMarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"UnMarkCommandParser -\u003e UnMarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"activate UnMarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"UnMarkCommand --\u003e UnMarkCommandParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"deactivate UnMarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"UnMarkCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"deactivate UnMarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"UnMarkCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"destroy UnMarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"LogicManager -\u003e UnMarkCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"activate UnMarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"UnMarkCommand -\u003e Model : unmarkPerson(1)","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"Model --\u003e UnMarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"UnMarkCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"CommandResult --\u003e UnMarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"UnMarkCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"deactivate UnMarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Angelyxx":70}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"title: Connexion","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103-F13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103-F13-1/tp/actions)","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103-F13-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103-F13-1/tp)","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"**Connexion** is a desktop application for undergraduate students to manage their networking connections in the Tech industry. ","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"* If you are interested in using Connexion, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"* If you are interested about developing Connexion, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"imkwokyong":7,"-":13}},{"path":"docs/team/angelyxx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"layout: page","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"title: Angel\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"### Project: Connexion","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"Connexion is a desktop application for undergraduate students to manage their networking connections in the Tech industry.","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"* **Enhancements implemented**: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"    * User Guide: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    * Developer Guide: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"* **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"* **Contributions beyond the team project**: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    * PRs reviewed: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"Angelyxx":23}},{"path":"docs/team/geoffong11.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"layout: page","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"title: Geoff\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"### Project: Connexion","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"Connexion is a desktop application for undergraduate students to manage their networking connections in the Tech industry.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"* **Enhancement to existing features**: to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"    * User Guide: to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    * Developer Guide: to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"* **Community**: to be added soon","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"geoffong11":18}},{"path":"docs/team/imkwokyong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"layout: page","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"title: Kwok Yong\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"### Project: Connexion","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"Connexion is a desktop application for undergraduate students to manage their networking connections in the Tech industry.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"* **Enhancement to existing features**: to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"  * User Guide: to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"  * Developer Guide: to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"* **Community**: to be added soon","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"imkwokyong":18}},{"path":"docs/team/xavierpok.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"layout: page","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"title: Xavier\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"### Project: Connexion","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"Connexion is a desktop application for undergraduate students to manage their networking connections in the Tech industry.","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"* **Enhancement to existing features**: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"    * User Guide: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"    * Developer Guide: to be added soon","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"* **Community**: to be added soon","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"xavierpok":18}},{"path":"src/main/java/connexion/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.FileUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"imkwokyong":4,"-":69}},{"path":"src/main/java/connexion/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"imkwokyong":2,"-":39}},{"path":"src/main/java/connexion/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.Config;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.Version;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Logic;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.LogicManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.storage.AddressBookStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.storage.Storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.storage.StorageManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import connexion.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"import connexion.ui.Ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"import connexion.ui.UiManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Connexion ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"imkwokyong"},"content":"        logger.info(\"Starting Connexion \" + MainApp.VERSION);","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"imkwokyong"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Connexion ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":28,"-":158}},{"path":"src/main/java/connexion/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.core;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":2,"-":64}},{"path":"src/main/java/connexion/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.core;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":2,"-":80}},{"path":"src/main/java/connexion/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.core;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":1,"-":105}},{"path":"src/main/java/connexion/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.core;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":1,"-":120}},{"path":"src/main/java/connexion/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.core.index;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"imkwokyong":2,"-":67}},{"path":"src/main/java/connexion/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.exceptions;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"imkwokyong":1,"-":10}},{"path":"src/main/java/connexion/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.exceptions;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":1,"-":20}},{"path":"src/main/java/connexion/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.MainApp;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"imkwokyong":2,"-":40}},{"path":"src/main/java/connexion/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":1,"-":34}},{"path":"src/main/java/connexion/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.Config;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"imkwokyong":3,"-":20}},{"path":"src/main/java/connexion/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":1,"-":82}},{"path":"src/main/java/connexion/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":3,"-":141}},{"path":"src/main/java/connexion/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":2,"-":66}},{"path":"src/main/java/connexion/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"imkwokyong":1,"-":52}},{"path":"src/main/java/connexion/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"     * @see connexion.model.Model#getAddressBook()","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"     * Set the clock the app is to run on","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"    void setClock(Clock clock);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"     * Get the clock the app is running on","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"    Clock getClock();","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xavierpok":11,"imkwokyong":8,"-":42}},{"path":"src/main/java/connexion/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.AddressBookParser;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.storage.Storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"        Command command \u003d addressBookParser.withClock(this.getClock()).parseCommand(commandText);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"xavierpok"},"content":"    public void setClock(Clock clock) {","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"        model.setClock(clock);","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"    public Clock getClock() {","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"        return model.getClock();","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xavierpok":13,"imkwokyong":12,"-":75}},{"path":"src/main/java/connexion/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.Prefix;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"                .append(\"; Company: \")","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"                .append(person.getCompany())","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"                .append(\"; Job: \")","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"                .append(person.getJob())","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"                .append(person.getSchedule().isPresent() ? \"; Schedule: \"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"                        + person.getSchedule().get().getListString() : \"\")","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"                .append(person.getScheduleName().isPresent() ? \"; Schedule Name: \"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"                        + person.getScheduleName().get() : \"\")","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":3,"-":46,"geoffong11":8}},{"path":"src/main/java/connexion/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to Connexion. \"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"            + PREFIX_COMPANY + \"COMPANY \"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"            + PREFIX_JOB + \"JOB \"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"            + PREFIX_COMPANY + \"Google \"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"            + PREFIX_JOB + \"Software Engineer \"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":12,"-":70,"geoffong11":5}},{"path":"src/main/java/connexion/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":3,"-":20}},{"path":"src/main/java/connexion/logic/commands/ClearScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"import static connexion.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.Mark;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":" * Clears the schedule of a contact identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"public class ClearScheduleCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"    public static final String COMMAND_WORD \u003d \"clearschedule\";","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"            + \": Removes the schedule of the person identified by the index number used in the displayed person list\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"            + \"Parameters: INDEX (must be a positive integer) \";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"    public static final String MESSAGE_CLEAR_SCHEDULE_SUCCESS \u003d \"Cleared Schedule : %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"    public static final String MESSAGE_NO_SCHEDULE \u003d \"No schedule was found for this person.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"    public static final String MESSAGE_CLEAR_NAME_WITHOUT_SCHEDULE_SUCCESS \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"            \"There was a name for a schedule for this person, but no schedule. The name alone has been cleared : %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"    private final Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"    private final ClearedScheduleDescriptor clearedScheduleDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"     * @param index of the person in the filtered person list to add or edit schedule.","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"     * @param clearedScheduleDescriptor descriptor describing the cleared schedule state.","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"    public ClearScheduleCommand(Index index, ClearedScheduleDescriptor clearedScheduleDescriptor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"        this.clearedScheduleDescriptor \u003d clearedScheduleDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"        Person personToClear \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"        if (personToClear.getScheduleName().isEmpty() \u0026\u0026 personToClear.getSchedule().isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"            // If there is at least one present, attempt to remove.","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"            throw new CommandException(MESSAGE_NO_SCHEDULE);","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"        Person clearedSchedulePerson \u003d createClearedSchedulePerson(personToClear, clearedScheduleDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"xavierpok"},"content":"        model.setPerson(personToClear, clearedSchedulePerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"xavierpok"},"content":"        if (personToClear.getScheduleName().isPresent() \u0026\u0026 personToClear.getSchedule().isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"xavierpok"},"content":"            // Return slightly different CommandResult message for if only a name w/o a schedule is present.","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"xavierpok"},"content":"            // A clause just-in-case for corner cases where there\u0027s no schedule but a name (for some reason).","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"            // Should not happen in normal operation.","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":"            return new CommandResult(String.format(MESSAGE_CLEAR_NAME_WITHOUT_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"xavierpok"},"content":"                    Messages.format(clearedSchedulePerson)));","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"            return new CommandResult(String.format(MESSAGE_CLEAR_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"                    Messages.format(clearedSchedulePerson)));","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"xavierpok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"xavierpok"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"xavierpok"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"xavierpok"},"content":"        if (!(other instanceof ClearScheduleCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"xavierpok"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand otherCommand \u003d (ClearScheduleCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"xavierpok"},"content":"        return index.equals(otherCommand.index)","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"xavierpok"},"content":"                \u0026\u0026 clearedScheduleDescriptor.equals(otherCommand.clearedScheduleDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"xavierpok"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"xavierpok"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"xavierpok"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"xavierpok"},"content":"                .add(\"clearedScheduleDescriptor\", clearedScheduleDescriptor)","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"xavierpok"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"xavierpok"},"content":"     * Creates a person from the clearedScheduleDescriptor that is a copy of personToClearSchedule,","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"xavierpok"},"content":"     * except with an empty schedule \u0026 updated LastModifiedDateTime.","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"xavierpok"},"content":"    private static Person createClearedSchedulePerson(Person personToClearSchedule,","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"xavierpok"},"content":"                                                      ClearedScheduleDescriptor clearedScheduleDescriptor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"xavierpok"},"content":"        assert personToClearSchedule !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"xavierpok"},"content":"        Name name \u003d personToClearSchedule.getName();","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"xavierpok"},"content":"        Phone phone \u003d personToClearSchedule.getPhone();","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"xavierpok"},"content":"        Email email \u003d personToClearSchedule.getEmail();","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"xavierpok"},"content":"        Company company \u003d personToClearSchedule.getCompany();","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"xavierpok"},"content":"        Job job \u003d personToClearSchedule.getJob();","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"xavierpok"},"content":"        Mark markStatus \u003d personToClearSchedule.getMarkStatus();","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"xavierpok"},"content":"        Set\u003cTag\u003e tags \u003d personToClearSchedule.getTags();","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"xavierpok"},"content":"        LastModifiedDateTime updatedLastModifiedDateTime \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"xavierpok"},"content":"                clearedScheduleDescriptor.getLastModifiedDateTime();","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"imkwokyong"},"content":"        Note note \u003d personToClearSchedule.getNote();","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"xavierpok"},"content":"        // While semantically, it would make sense that this would always be changed,","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"xavierpok"},"content":"        // We do it like this for consistency with other fields","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"xavierpok"},"content":"        // And to move responsibility for updating this field to the parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"xavierpok"},"content":"        // Like the other fields.","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"xavierpok"},"content":"        Optional\u003cSchedule\u003e updatedSchedule \u003d Optional.empty();","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"xavierpok"},"content":"        Optional\u003cScheduleName\u003e updatedScheduleName \u003d Optional.empty();","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":153,"author":{"gitId":"xavierpok"},"content":"        return new Person(name, phone, email, company, job, markStatus, tags,","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"imkwokyong"},"content":"                updatedSchedule, updatedScheduleName, updatedLastModifiedDateTime, note);","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"xavierpok"},"content":"     * Stores the details of a scheduled meeting with the person.","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"xavierpok"},"content":"    public static class ClearedScheduleDescriptor {","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"xavierpok"},"content":"        private final LastModifiedDateTime lastModifiedDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"xavierpok"},"content":"        public ClearedScheduleDescriptor(LastModifiedDateTime lastModifiedDateTime) {","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"xavierpok"},"content":"            this.lastModifiedDateTime \u003d lastModifiedDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"xavierpok"},"content":"        public LastModifiedDateTime getLastModifiedDateTime() {","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"xavierpok"},"content":"            return lastModifiedDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"xavierpok"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"xavierpok"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"xavierpok"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"xavierpok"},"content":"                return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"xavierpok"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"xavierpok"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"xavierpok"},"content":"            if (!(other instanceof ClearScheduleCommand.ClearedScheduleDescriptor)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"xavierpok"},"content":"                return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"xavierpok"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"xavierpok"},"content":"            ClearedScheduleDescriptor otherDescriptor \u003d (ClearedScheduleDescriptor) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"xavierpok"},"content":"            return this.lastModifiedDateTime.equals(otherDescriptor.lastModifiedDateTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"xavierpok"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"xavierpok"},"content":"        public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"imkwokyong"},"content":"            return new ToStringBuilder(this).add(\"lastModified\", lastModifiedDateTime).toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"xavierpok":187,"imkwokyong":4}},{"path":"src/main/java/connexion/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":3,"-":17}},{"path":"src/main/java/connexion/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":2,"-":80}},{"path":"src/main/java/connexion/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"        //UiManager.updatePersonView();","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":7,"Angelyxx":1,"-":62}},{"path":"src/main/java/connexion/logic/commands/DetailCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"import connexion.ui.UiManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":" * Details a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"public class DetailCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    public static final String COMMAND_WORD \u003d \"detail\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"            + \": Shows details of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    public static final String MESSAGE_DETAIL_SUCCESS \u003d \"Display Details of Person: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"    public DetailCommand(Index targetIndex) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"        Person personToDetail \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"        UiManager.updatePersonView(personToDetail);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"        return new CommandResult(String.format(MESSAGE_DETAIL_SUCCESS, Messages.format(personToDetail)));","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"        if (!(other instanceof DetailCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"        DetailCommand otherDetailCommand \u003d (DetailCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"        return targetIndex.equals(otherDetailCommand.targetIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Angelyxx":68}},{"path":"src/main/java/connexion/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.person.Mark;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"            + \"[\" + PREFIX_JOB + \"JOB] \"","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"Angelyxx"},"content":"        //UiManager.updatePersonView(editedPerson); //displays edit person onto the default view","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"geoffong11"},"content":"        Company updatedCompany \u003d editPersonDescriptor.getCompany().orElse(personToEdit.getCompany());","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"geoffong11"},"content":"        Job updatedJob \u003d editPersonDescriptor.getJob().orElse(personToEdit.getJob());","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"imkwokyong"},"content":"        Mark updatedMark \u003d editPersonDescriptor.getMarkStatus().orElse(personToEdit.getMarkStatus());","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"xavierpok"},"content":"        LastModifiedDateTime updatedLastModifiedDateTime \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"xavierpok"},"content":"                editPersonDescriptor.getLastModifiedDateTime()","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"xavierpok"},"content":"                        .orElse(personToEdit.getLastModifiedDateTime());","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"imkwokyong"},"content":"        Note updatedNote \u003d editPersonDescriptor.getNote().orElse(personToEdit.getNote());","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"xavierpok"},"content":"        // While semantically, it would make sense that this would always be changed,","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"xavierpok"},"content":"        // We do it like this for consistency with other fields","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"xavierpok"},"content":"        // And to move responsibility for updating this field to the parser,","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"xavierpok"},"content":"        // Like the other fields.","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"geoffong11"},"content":"        Optional\u003cSchedule\u003e schedule \u003d personToEdit.getSchedule();","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"geoffong11"},"content":"        Optional\u003cScheduleName\u003e scheduleName \u003d personToEdit.getScheduleName();","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"xavierpok"},"content":"        return new Person(updatedName, updatedPhone,","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"Angelyxx"},"content":"                updatedEmail, updatedCompany, updatedJob, updatedMark,","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"imkwokyong"},"content":"                updatedTags, schedule, scheduleName, updatedLastModifiedDateTime, updatedNote);","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"geoffong11"},"content":"        private Company company;","lastModifiedDate":"2023-10-10"},{"lineNumber":162,"author":{"gitId":"geoffong11"},"content":"        private Job job;","lastModifiedDate":"2023-10-10"},{"lineNumber":163,"author":{"gitId":"Angelyxx"},"content":"        private Mark markStatus;","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"xavierpok"},"content":"        private LastModifiedDateTime lastModifiedDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"imkwokyong"},"content":"        private Note note;","lastModifiedDate":"2023-10-29"},{"lineNumber":169,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":180,"author":{"gitId":"geoffong11"},"content":"            setCompany(toCopy.company);","lastModifiedDate":"2023-10-10"},{"lineNumber":181,"author":{"gitId":"geoffong11"},"content":"            setJob(toCopy.job);","lastModifiedDate":"2023-10-10"},{"lineNumber":182,"author":{"gitId":"Angelyxx"},"content":"            setMarkStatus(toCopy.markStatus);","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"xavierpok"},"content":"            setLastModifiedDateTime(toCopy.lastModifiedDateTime);","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"imkwokyong"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2023-10-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"geoffong11"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, company, job, tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"geoffong11"},"content":"        public void setCompany(Company company) {","lastModifiedDate":"2023-10-10"},{"lineNumber":220,"author":{"gitId":"geoffong11"},"content":"            this.company \u003d company;","lastModifiedDate":"2023-10-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"geoffong11"},"content":"        public Optional\u003cCompany\u003e getCompany() {","lastModifiedDate":"2023-10-10"},{"lineNumber":224,"author":{"gitId":"geoffong11"},"content":"            return Optional.ofNullable(company);","lastModifiedDate":"2023-10-10"},{"lineNumber":225,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":226,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":227,"author":{"gitId":"geoffong11"},"content":"        public void setJob(Job job) {","lastModifiedDate":"2023-10-10"},{"lineNumber":228,"author":{"gitId":"geoffong11"},"content":"            this.job \u003d job;","lastModifiedDate":"2023-10-10"},{"lineNumber":229,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":230,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":231,"author":{"gitId":"geoffong11"},"content":"        public Optional\u003cJob\u003e getJob() {","lastModifiedDate":"2023-10-10"},{"lineNumber":232,"author":{"gitId":"geoffong11"},"content":"            return Optional.ofNullable(job);","lastModifiedDate":"2023-10-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"Angelyxx"},"content":"        public void setMarkStatus(Mark markStatus) {","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"Angelyxx"},"content":"            this.markStatus \u003d markStatus;","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"Angelyxx"},"content":"        public Optional\u003cMark\u003e getMarkStatus() {","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"Angelyxx"},"content":"            return Optional.ofNullable(markStatus);","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"imkwokyong"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"imkwokyong"},"content":"            this.note \u003d note;","lastModifiedDate":"2023-10-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"imkwokyong"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2023-10-29"},{"lineNumber":248,"author":{"gitId":"imkwokyong"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"xavierpok"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":269,"author":{"gitId":"xavierpok"},"content":"         * Setter for the last modified date \u0026 time as a @code LastModifiedDateTime object","lastModifiedDate":"2023-10-14"},{"lineNumber":270,"author":{"gitId":"xavierpok"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":271,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":272,"author":{"gitId":"xavierpok"},"content":"        public void setLastModifiedDateTime(LastModifiedDateTime lastModifiedDateTime) {","lastModifiedDate":"2023-10-14"},{"lineNumber":273,"author":{"gitId":"xavierpok"},"content":"            this.lastModifiedDateTime \u003d lastModifiedDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":274,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":275,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":276,"author":{"gitId":"xavierpok"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":277,"author":{"gitId":"xavierpok"},"content":"         * Getter for last modified date \u0026 time as a @code LastModifiedDateTime object,","lastModifiedDate":"2023-10-14"},{"lineNumber":278,"author":{"gitId":"xavierpok"},"content":"         * wrapped in an instance of @code Optional.","lastModifiedDate":"2023-10-14"},{"lineNumber":279,"author":{"gitId":"xavierpok"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":280,"author":{"gitId":"xavierpok"},"content":"        public Optional\u003cLastModifiedDateTime\u003e getLastModifiedDateTime() {","lastModifiedDate":"2023-10-14"},{"lineNumber":281,"author":{"gitId":"xavierpok"},"content":"            return Optional.ofNullable(lastModifiedDateTime);","lastModifiedDate":"2023-10-14"},{"lineNumber":282,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":283,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":299,"author":{"gitId":"geoffong11"},"content":"                    \u0026\u0026 Objects.equals(company, otherEditPersonDescriptor.company)","lastModifiedDate":"2023-10-10"},{"lineNumber":300,"author":{"gitId":"geoffong11"},"content":"                    \u0026\u0026 Objects.equals(job, otherEditPersonDescriptor.job)","lastModifiedDate":"2023-10-10"},{"lineNumber":301,"author":{"gitId":"Angelyxx"},"content":"                    \u0026\u0026 Objects.equals(markStatus, otherEditPersonDescriptor.markStatus)","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"xavierpok"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2023-10-14"},{"lineNumber":303,"author":{"gitId":"xavierpok"},"content":"                    \u0026\u0026 Objects.equals(lastModifiedDateTime, otherEditPersonDescriptor.lastModifiedDateTime);","lastModifiedDate":"2023-10-14"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":311,"author":{"gitId":"geoffong11"},"content":"                    .add(\"company\", company)","lastModifiedDate":"2023-10-10"},{"lineNumber":312,"author":{"gitId":"geoffong11"},"content":"                    .add(\"job\", job)","lastModifiedDate":"2023-10-10"},{"lineNumber":313,"author":{"gitId":"Angelyxx"},"content":"                    .add(\"mark\", markStatus)","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":315,"author":{"gitId":"xavierpok"},"content":"                    .add(\"last_modified\", lastModifiedDateTime)","lastModifiedDate":"2023-10-14"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"xavierpok":30,"imkwokyong":33,"Angelyxx":15,"-":212,"geoffong11":29}},{"path":"src/main/java/connexion/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"imkwokyong":2,"-":17}},{"path":"src/main/java/connexion/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_MARK;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_UNMARK;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":" * Filters and lists all persons in contact list whose specified field contains any of the argument keywords.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"    public static final String FIELD_PREFIX_MODE_1 \u003d String.format(\"[%s, %s, %s, %s, %s, %s]\",","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"            PREFIX_NAME, PREFIX_PHONE, PREFIX_COMPANY, PREFIX_COMPANY, PREFIX_JOB, PREFIX_TAG);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"    public static final String FIELD_PREFIX_MODE_2 \u003d String.format(\"[%s, %s]\",","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"            PREFIX_MARK, PREFIX_UNMARK);","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"            + \": Filters for all persons whose specified field \"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"            + \"contains any of the specified keywords\"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"            + \"(case-insensitive) and displays them as a list with index numbers. \\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"            + \"Parameters (Mode 1): FIELD_PREFIX_1 KEYWORD [MORE_KEYWORDS] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"            + \"(FIELD_PREFIX_1 is one of \" + FIELD_PREFIX_MODE_1 + \")\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"            + \"Parameters (Mode 2): FIELD_PREFIX_2 \"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"            + \"(FIELD_PREFIX_2 is one of \" + FIELD_PREFIX_MODE_2 + \")\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" \" + PREFIX_COMPANY + \"Google\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" \" + PREFIX_MARK;","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"    public FilterCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        return predicate.equals(otherFilterCommand.predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"imkwokyong":79}},{"path":"src/main/java/connexion/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":2,"-":19}},{"path":"src/main/java/connexion/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":3,"-":21}},{"path":"src/main/java/connexion/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":" * Marks a person identified using its displayed index from the address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"            + \": Marks the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    public static final String MESSAGE_MARK_SUCCESS \u003d \"Marked Person: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"     * @param targetIndex of person in the filtered person list to mark","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"    public MarkCommand(Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"        Person personToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"        model.markPerson(personToMark);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"        //UiManager.updatePersonView(personToMark);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_SUCCESS, Messages.format(personToMark)));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"        if (!(other instanceof MarkCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"        MarkCommand otherMarkCommand \u003d (MarkCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"        return targetIndex.equals(otherMarkCommand.targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"imkwokyong":12,"Angelyxx":62}},{"path":"src/main/java/connexion/logic/commands/NoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Mark;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":" * Adds a note for the person identified using its displayed index from the address book.","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"public class NoteCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"            + \": Adds a note for the person identified by the index number used in the displayed person list. \\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"            + \"Existing note will be overwritten by the new note.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"            + \"Character limit of NOTE is 1000.\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"            + PREFIX_NOTE + \"[NOTE]\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"            + PREFIX_NOTE + \"Will be promoted to Senior Developer next month.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"    // A temporary workaround before implementing immediate change for the UI.","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Index: %1$s; Note: %2$s. Enter \u0027detail %1$s\u0027 to view your changes\";","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"    private final Index index;","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"    private final NoteDescriptor noteDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"     * @param noteDescriptor contains the details of the notes","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"    public NoteCommand(Index index, NoteDescriptor noteDescriptor) {","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"        requireAllNonNull(index, noteDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"        this.noteDescriptor \u003d noteDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"        Person personToNote \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"        Person notedPerson \u003d createPersonToNote(personToNote, noteDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"        model.setPerson(personToNote, notedPerson);","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, index.getOneBased(),","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"                noteDescriptor.getNote()));","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"     * To create a new Person using the personToNoteDescriptor.","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"     * This is because Person is immutable in AddressBook.","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"     * @param personToNote the identified Person to be noted.","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"     * @param noteDescriptor contains the details of the note.","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"     * @return a new Person.","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"imkwokyong"},"content":"    private static Person createPersonToNote(","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"imkwokyong"},"content":"            Person personToNote, NoteCommand.NoteDescriptor noteDescriptor) {","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"imkwokyong"},"content":"        assert personToNote !\u003d null;","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"imkwokyong"},"content":"        Name updatedName \u003d personToNote.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"imkwokyong"},"content":"        Phone updatedPhone \u003d personToNote.getPhone();","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"imkwokyong"},"content":"        Email updatedEmail \u003d personToNote.getEmail();","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"imkwokyong"},"content":"        Company updatedCompany \u003d personToNote.getCompany();","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"imkwokyong"},"content":"        Job updatedJob \u003d personToNote.getJob();","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"imkwokyong"},"content":"        Mark updatedMark \u003d personToNote.getMarkStatus();","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"imkwokyong"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToNote.getTags();","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"imkwokyong"},"content":"        LastModifiedDateTime updatedLastModifiedDateTime \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"imkwokyong"},"content":"                noteDescriptor.getLastModifiedDateTime();","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"imkwokyong"},"content":"        Note updatedNote \u003d noteDescriptor.getNote();","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"imkwokyong"},"content":"        Optional\u003cSchedule\u003e updatedSchedule \u003d personToNote.getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"imkwokyong"},"content":"        Optional\u003cScheduleName\u003e updatedScheduleName \u003d personToNote.getScheduleName();","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"imkwokyong"},"content":"        // While semantically, it would make sense that this would always be changed,","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"imkwokyong"},"content":"        // We do it like this for consistency with other fields","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"imkwokyong"},"content":"        // And to move responsibility for updating this field to the parser,","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"imkwokyong"},"content":"        // Like the other fields.","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"imkwokyong"},"content":"        return new Person(updatedName, updatedPhone,","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"imkwokyong"},"content":"                updatedEmail, updatedCompany, updatedJob, updatedMark,","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"imkwokyong"},"content":"                updatedTags, updatedSchedule, updatedScheduleName, updatedLastModifiedDateTime, updatedNote);","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"imkwokyong"},"content":"     * Stores the details of the note.","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"imkwokyong"},"content":"    public static class NoteDescriptor {","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"imkwokyong"},"content":"        private Note note;","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"imkwokyong"},"content":"        private LastModifiedDateTime lastModifiedDateTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"imkwokyong"},"content":"        /**","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"imkwokyong"},"content":"         * Constructs a NoteDescriptor.","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"imkwokyong"},"content":"         * @param note to be added.","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"imkwokyong"},"content":"         * @param lastModifiedDateTime the current time of modification.","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"imkwokyong"},"content":"         */","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"imkwokyong"},"content":"        public NoteDescriptor(Note note, LastModifiedDateTime lastModifiedDateTime) {","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"imkwokyong"},"content":"            this.note \u003d note;","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"imkwokyong"},"content":"            this.lastModifiedDateTime \u003d lastModifiedDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"imkwokyong"},"content":"        /**","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"imkwokyong"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"imkwokyong"},"content":"         */","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"imkwokyong"},"content":"        public NoteDescriptor(NoteCommand.NoteDescriptor toCopy) {","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"imkwokyong"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"imkwokyong"},"content":"            setLastModifiedDateTime(toCopy.lastModifiedDateTime);","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":139,"author":{"gitId":"imkwokyong"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"imkwokyong"},"content":"            this.note \u003d note;","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"imkwokyong"},"content":"        public Note getNote() {","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"imkwokyong"},"content":"            return note;","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"imkwokyong"},"content":"        /**","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"imkwokyong"},"content":"         * Setter for the last modified date \u0026 time as a @code LastModifiedDateTime object","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"imkwokyong"},"content":"         */","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"imkwokyong"},"content":"        public void setLastModifiedDateTime(LastModifiedDateTime lastModifiedDateTime) {","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"imkwokyong"},"content":"            this.lastModifiedDateTime \u003d lastModifiedDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":153,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":154,"author":{"gitId":"imkwokyong"},"content":"        public LastModifiedDateTime getLastModifiedDateTime() {","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"imkwokyong"},"content":"            return lastModifiedDateTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"imkwokyong"},"content":"        @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"imkwokyong"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"imkwokyong"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"imkwokyong"},"content":"                return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"imkwokyong"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"imkwokyong"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":165,"author":{"gitId":"imkwokyong"},"content":"            if (!(other instanceof NoteCommand.NoteDescriptor)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"imkwokyong"},"content":"                return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":167,"author":{"gitId":"imkwokyong"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":168,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":169,"author":{"gitId":"imkwokyong"},"content":"            NoteCommand.NoteDescriptor otherNoteDescriptor \u003d (NoteCommand.NoteDescriptor) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"imkwokyong"},"content":"            return Objects.equals(lastModifiedDateTime, otherNoteDescriptor.lastModifiedDateTime)","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"imkwokyong"},"content":"                    \u0026\u0026 Objects.equals(note, otherNoteDescriptor.note);","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"imkwokyong"},"content":"        @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"imkwokyong"},"content":"        public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"imkwokyong"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-29"},{"lineNumber":177,"author":{"gitId":"imkwokyong"},"content":"                    .add(\"note\", note)","lastModifiedDate":"2023-10-29"},{"lineNumber":178,"author":{"gitId":"imkwokyong"},"content":"                    .add(\"last_modified\", lastModifiedDateTime)","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"imkwokyong"},"content":"                    .toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":180,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":181,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":182,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":183,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":184,"author":{"gitId":"imkwokyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":185,"author":{"gitId":"imkwokyong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":186,"author":{"gitId":"imkwokyong"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":187,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":188,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":189,"author":{"gitId":"imkwokyong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":190,"author":{"gitId":"imkwokyong"},"content":"        if (!(other instanceof NoteCommand)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":191,"author":{"gitId":"imkwokyong"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":192,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":193,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":194,"author":{"gitId":"imkwokyong"},"content":"        NoteCommand otherCommand \u003d (NoteCommand) other;","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"imkwokyong"},"content":"        return index.equals(otherCommand.index)","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"imkwokyong"},"content":"                \u0026\u0026 noteDescriptor.equals(otherCommand.noteDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":197,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":198,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":200,"author":{"gitId":"imkwokyong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":201,"author":{"gitId":"imkwokyong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-29"},{"lineNumber":202,"author":{"gitId":"imkwokyong"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-29"},{"lineNumber":203,"author":{"gitId":"imkwokyong"},"content":"                .add(\"noteDescriptor\", noteDescriptor)","lastModifiedDate":"2023-10-30"},{"lineNumber":204,"author":{"gitId":"imkwokyong"},"content":"                .toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":205,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":206,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":207,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"imkwokyong":207}},{"path":"src/main/java/connexion/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import static connexion.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_SCHEDULE_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import static connexion.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Mark;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":" * Adds a scheduled meeting of an existing person in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":" * Overrides the previous scheduled meeting if there existed one before.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"            + \": Adds a schedule to the person identified by the index number used in the displayed person list\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"            + PREFIX_SCHEDULE + \"MEETING DATE (must be in the form YYYY-MM-DD-HH-MM) \"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"            + \"[\" + PREFIX_SCHEDULE_NAME + \"SCHEDULE NAME\" + \"] \"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"            + PREFIX_SCHEDULE + \"2023-12-27-08-00 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"            + PREFIX_SCHEDULE_NAME + \"Morning Interview\";","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"    public static final String SCHEDULE_ADD_SUCCESS \u003d \"Schedule added: %1$s\";","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"    public static final String SCHEDULE_NOT_ADDED \u003d \"date must be provided.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"    private final Index index;","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"    private final ScheduleDescriptor scheduleDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"     * @param index of the person in the filtered person list to add or edit schedule","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"     * @param scheduleDescriptor details of schedules","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"    public ScheduleCommand(Index index, ScheduleDescriptor scheduleDescriptor) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        requireAllNonNull(index, scheduleDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"        this.scheduleDescriptor \u003d scheduleDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"        Person personToEditSchedule \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"        Person editedPerson \u003d createScheduledPerson(personToEditSchedule, scheduleDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"        model.setPerson(personToEditSchedule, editedPerson);","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"        return new CommandResult(String.format(SCHEDULE_ADD_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEditSchedule}","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"     * edited with {@code schedulePersonDescriptor}.","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"    private static Person createScheduledPerson(Person personToEditSchedule, ScheduleDescriptor scheduleDescriptor) {","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"        assert personToEditSchedule !\u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"        Name name \u003d personToEditSchedule.getName();","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"        Phone phone \u003d personToEditSchedule.getPhone();","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"        Email email \u003d personToEditSchedule.getEmail();","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"        Company company \u003d personToEditSchedule.getCompany();","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"        Job job \u003d personToEditSchedule.getJob();","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"        Mark markStatus \u003d personToEditSchedule.getMarkStatus();","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"        Set\u003cTag\u003e tags \u003d personToEditSchedule.getTags();","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"imkwokyong"},"content":"        Note note \u003d personToEditSchedule.getNote();","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"        LastModifiedDateTime updatedLastModifiedDateTime \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"                scheduleDescriptor.getLastModifiedDateTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"        // While semantically, it would make sense that this would always be changed,","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"        // We do it like this for consistency with other fields","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"geoffong11"},"content":"        // And to move responsibility for updating this field to the parser,","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"        // Like the other fields.","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"geoffong11"},"content":"        Optional\u003cSchedule\u003e updatedSchedule \u003d Optional.ofNullable(scheduleDescriptor.getSchedule());","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"geoffong11"},"content":"        Optional\u003cScheduleName\u003e updatedScheduleName \u003d Optional.ofNullable(scheduleDescriptor.getScheduleName());","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"geoffong11"},"content":"        Person toReturn \u003d new Person(name, phone, email, company, job, markStatus, tags,","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"imkwokyong"},"content":"                updatedSchedule, updatedScheduleName, updatedLastModifiedDateTime, note);","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"geoffong11"},"content":"        if (personToEditSchedule.getMarkStatus().getValue()) { // if the person was marked","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"            toReturn.mark();","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"geoffong11"},"content":"        } else { // if the person was unmarked","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"geoffong11"},"content":"            toReturn.unMark();","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"geoffong11"},"content":"        return toReturn;","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"geoffong11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"geoffong11"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"geoffong11"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"geoffong11"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"geoffong11"},"content":"        if (!(other instanceof ScheduleCommand)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"geoffong11"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommand otherScheduleCommand \u003d (ScheduleCommand) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"geoffong11"},"content":"        return index.equals(otherScheduleCommand.index)","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"geoffong11"},"content":"                \u0026\u0026 scheduleDescriptor.equals(otherScheduleCommand.scheduleDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"geoffong11"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"geoffong11"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"geoffong11"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"geoffong11"},"content":"                .add(\"scheduleDescriptor\", scheduleDescriptor)","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"geoffong11"},"content":"                .toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"geoffong11"},"content":"     * Stores the details of a scheduled meeting with the person.","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"geoffong11"},"content":"    public static class ScheduleDescriptor {","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"geoffong11"},"content":"        private Schedule schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"geoffong11"},"content":"        private ScheduleName scheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"geoffong11"},"content":"        private LastModifiedDateTime lastModifiedDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"geoffong11"},"content":"        /**","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"geoffong11"},"content":"         * Stores the schedule details and schedule names.","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"geoffong11"},"content":"         * @param schedule the meeting timing","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"geoffong11"},"content":"         * @param scheduleName the meeting name or agenda","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"geoffong11"},"content":"         * @param lastModifiedDateTime the current time of modification","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"geoffong11"},"content":"         */","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"geoffong11"},"content":"        public ScheduleDescriptor(Schedule schedule,","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"geoffong11"},"content":"                                  ScheduleName scheduleName, LastModifiedDateTime lastModifiedDateTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"geoffong11"},"content":"            this.schedule \u003d schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"geoffong11"},"content":"            this.scheduleName \u003d scheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"geoffong11"},"content":"            this.lastModifiedDateTime \u003d lastModifiedDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"geoffong11"},"content":"        /**","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"geoffong11"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"geoffong11"},"content":"         */","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"geoffong11"},"content":"        public ScheduleDescriptor(ScheduleDescriptor toCopy) {","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"geoffong11"},"content":"            setSchedule(toCopy.schedule);","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"geoffong11"},"content":"            setScheduleName(toCopy.scheduleName);","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"geoffong11"},"content":"            setLastModifiedDateTime(toCopy.lastModifiedDateTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"geoffong11"},"content":"        public Schedule getSchedule() {","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"geoffong11"},"content":"            return this.schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"geoffong11"},"content":"        public void setSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"geoffong11"},"content":"            this.schedule \u003d schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"geoffong11"},"content":"        public void setScheduleName(ScheduleName scheduleName) {","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"geoffong11"},"content":"            this.scheduleName \u003d scheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"geoffong11"},"content":"        public ScheduleName getScheduleName() {","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"geoffong11"},"content":"            return this.scheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"geoffong11"},"content":"        public LastModifiedDateTime getLastModifiedDateTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"geoffong11"},"content":"            return this.lastModifiedDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"geoffong11"},"content":"        public void setLastModifiedDateTime(LastModifiedDateTime lastModifiedDateTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"geoffong11"},"content":"            this.lastModifiedDateTime \u003d lastModifiedDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"geoffong11"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"geoffong11"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"geoffong11"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"geoffong11"},"content":"                return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"geoffong11"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"geoffong11"},"content":"            if (!(other instanceof ScheduleDescriptor)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"geoffong11"},"content":"                return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"geoffong11"},"content":"            ScheduleDescriptor otherScheduleDescriptor \u003d (ScheduleDescriptor) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"geoffong11"},"content":"            return Objects.equals(schedule, otherScheduleDescriptor.schedule)","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"geoffong11"},"content":"                    \u0026\u0026 Objects.equals(scheduleName, otherScheduleDescriptor.scheduleName)","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"geoffong11"},"content":"                    \u0026\u0026 Objects.equals(lastModifiedDateTime, otherScheduleDescriptor.lastModifiedDateTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"geoffong11"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"geoffong11"},"content":"        public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"geoffong11"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"geoffong11"},"content":"                    .add(\"schedule\", schedule)","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"geoffong11"},"content":"                    .add(\"scheduleName\", scheduleName)","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"geoffong11"},"content":"                    .add(\"last_modified\", lastModifiedDateTime)","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"geoffong11"},"content":"                    .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"imkwokyong":3,"geoffong11":216}},{"path":"src/main/java/connexion/logic/commands/UnMarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":" * UnMarks a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"            + \": Un-marks the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"    public static final String MESSAGE_UNMARK_SUCCESS \u003d \"Un-marked Person: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"    public UnMarkCommand(Index targetIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"        Person personToUnMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"        model.unMarkPerson(personToUnMark);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"        //UiManager.updatePersonView(personToUnMark);","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_SUCCESS, Messages.format(personToUnMark)));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"        if (!(other instanceof UnMarkCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"        UnMarkCommand otherUnMarkCommand \u003d (UnMarkCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"        return targetIndex.equals(otherUnMarkCommand.targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"imkwokyong":7,"Angelyxx":61}},{"path":"src/main/java/connexion/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands.exceptions;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"imkwokyong":1,"-":16}},{"path":"src/main/java/connexion/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.person.Mark;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"public class AddCommandParser implements ClockDependentParser\u003cAddCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"    private Clock clock \u003d Clock.systemDefaultZone();","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"                        args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COMPANY, PREFIX_JOB, PREFIX_TAG);","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_COMPANY, PREFIX_JOB, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COMPANY, PREFIX_JOB);","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        Company company \u003d ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"        Job job \u003d ParserUtil.parseJob(argMultimap.getValue(PREFIX_JOB).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"        Mark markStatus \u003d new Mark(false);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"        LastModifiedDateTime lastModifiedDateTime \u003d new LastModifiedDateTime(LocalDateTime.now(clock));","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"        Note note \u003d new Note(\"\");","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"        Person person \u003d new Person(name, phone, email, company, job, markStatus, tagList, lastModifiedDateTime, note);","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"     * To specify usage of a specific clock.","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"     * @param clock The clock to use","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"     * @return an edited parser using the specified clock","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"    public AddCommandParser withClock(Clock clock) {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"        AddCommandParser toReturn \u003d new AddCommandParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"        toReturn.clock \u003d clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"        return toReturn;","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"xavierpok":18,"imkwokyong":21,"Angelyxx":3,"-":39,"geoffong11":6}},{"path":"src/main/java/connexion/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.AddCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"import connexion.logic.commands.ClearScheduleCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.Command;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.DetailCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.EditCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.ListCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.MarkCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.UnMarkCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"public class AddressBookParser implements ClockDependentParser\u003cCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"    private Clock clock \u003d Clock.systemDefaultZone();","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"            return new AddCommandParser().withClock(clock).parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"            return new EditCommandParser().withClock(clock).parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"Angelyxx"},"content":"        case DetailCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"Angelyxx"},"content":"            return new DetailCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"        case NoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"            return new NoteCommandParser().withClock(clock).parse(arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"Angelyxx"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Angelyxx"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Angelyxx"},"content":"        case UnMarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Angelyxx"},"content":"            return new UnMarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"geoffong11"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"        case ClearScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"xavierpok"},"content":"            return new ClearScheduleCommandParser().withClock(clock).parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"xavierpok"},"content":"     * To specify usage of a specific clock.","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"xavierpok"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"xavierpok"},"content":"     * @param clock The clock to use","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"xavierpok"},"content":"     * @return an edited parser using the specified clock","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"xavierpok"},"content":"    public AddressBookParser withClock(Clock clock) {","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"xavierpok"},"content":"        AddressBookParser toReturn \u003d new AddressBookParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"xavierpok"},"content":"        toReturn.clock \u003d clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"xavierpok"},"content":"        return toReturn;","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"xavierpok"},"content":"     * Parses {@code userInput} into a command and returns it. Same as parseCommand.","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"xavierpok"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"xavierpok"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"xavierpok"},"content":"    public Command parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"xavierpok"},"content":"        // Suggest : Refactor parseCommand to parse.","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"xavierpok"},"content":"        return parseCommand(userInput);","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xavierpok":33,"imkwokyong":12,"Angelyxx":23,"-":65,"geoffong11":4}},{"path":"src/main/java/connexion/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"imkwokyong":3,"-":75}},{"path":"src/main/java/connexion/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"imkwokyong":1,"-":147}},{"path":"src/main/java/connexion/logic/parser/ClearScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"import connexion.logic.commands.ClearScheduleCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"public class ClearScheduleCommandParser implements ClockDependentParser\u003cClearScheduleCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"    private Clock clock \u003d Clock.systemDefaultZone();","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"    public ClearScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"            return new ClearScheduleCommand(index, new ClearScheduleCommand.ClearedScheduleDescriptor(","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"                    new LastModifiedDateTime(LocalDateTime.now(clock))));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"     * To specify usage of a specific clock.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"     * @param clock The clock to use","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"     * @return an edited parser using the specified clock","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"    public ClearScheduleCommandParser withClock(Clock clock) {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommandParser toReturn \u003d new ClearScheduleCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"        toReturn.clock \u003d clock;","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"        return toReturn;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"xavierpok":50}},{"path":"src/main/java/connexion/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"    public static final Prefix PREFIX_JOB \u003d new Prefix(\"j/\");","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    public static final Prefix PREFIX_SCHEDULE \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"    public static final Prefix PREFIX_SCHEDULE_NAME \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"o/\");","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    public static final Prefix PREFIX_MARK \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"    public static final Prefix PREFIX_UNMARK \u003d new Prefix(\"u/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"imkwokyong":4,"-":12,"geoffong11":4}},{"path":"src/main/java/connexion/logic/parser/ClockDependentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":" * Parsers that are somehow dependent on a specific clock for date \u0026 time.","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":" * @param \u003cT\u003e the type of command","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"public interface ClockDependentParser\u003cT extends Command\u003e extends Parser\u003cT\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"     * To specify usage of a specific clock.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"     * @param clock The clock to use","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"     * @return an edited parser using the specified clock","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    public ClockDependentParser\u003cT\u003e withClock(Clock clock);","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"xavierpok":14,"imkwokyong":3,"Angelyxx":2}},{"path":"src/main/java/connexion/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"imkwokyong":5,"-":24}},{"path":"src/main/java/connexion/logic/parser/DetailCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.DetailCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":" * Parses input arguments and creates a new DetailCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"public class DetailCommandParser implements Parser\u003cDetailCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    public DetailCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"            return new DetailCommand(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DetailCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Angelyxx":27}},{"path":"src/main/java/connexion/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.EditCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"public class EditCommandParser implements ClockDependentParser\u003cEditCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"    private Clock clock \u003d Clock.systemDefaultZone();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"                        args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COMPANY, PREFIX_JOB, PREFIX_TAG);","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COMPANY, PREFIX_JOB);","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"            editPersonDescriptor.setCompany(ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"        if (argMultimap.getValue(PREFIX_JOB).isPresent()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"            editPersonDescriptor.setJob(ParserUtil.parseJob(argMultimap.getValue(PREFIX_JOB).get()));","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"        // always set this, as this is set by the system and NOT the user","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"        editPersonDescriptor.setLastModifiedDateTime(new LastModifiedDateTime(LocalDateTime.now(clock)));","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"     * To specify usage of a specific clock.","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"xavierpok"},"content":"     * @param clock The clock to use","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"     * @return an edited parser using the specified clock","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"xavierpok"},"content":"    public EditCommandParser withClock(Clock clock) {","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"        EditCommandParser toReturn \u003d new EditCommandParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"xavierpok"},"content":"        toReturn.clock \u003d clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"xavierpok"},"content":"        return toReturn;","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"xavierpok":19,"imkwokyong":14,"Angelyxx":1,"-":68,"geoffong11":8}},{"path":"src/main/java/connexion/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_MARK;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_UNMARK;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.IsMarkedPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.NotMarkedPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":" * Parses input arguments and creates a new FilterCommand object.","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"        String prefix;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"        String[] keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"        prefix \u003d trimmedArgs.substring(0, trimmedArgs.indexOf(\"/\") + 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"        if (prefix.equals(PREFIX_MARK.getPrefix())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"            return new FilterCommand(new IsMarkedPredicate());","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        if (prefix.equals(PREFIX_UNMARK.getPrefix())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"            return new FilterCommand(new NotMarkedPredicate());","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"        keywords \u003d trimmedArgs.substring(trimmedArgs.indexOf(\"/\") + 1).trim().split(\"\\\\s+\");","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"        if (Arrays.equals(keywords, new String[]{\"\"})) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"        if (prefix.equals(PREFIX_NAME.getPrefix())) {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"            return new FilterCommand(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"        if (prefix.equals(PREFIX_PHONE.getPrefix())) {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"            return new FilterCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"        if (prefix.equals(PREFIX_EMAIL.getPrefix())) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"            return new FilterCommand(new EmailContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"        if (prefix.equals(PREFIX_COMPANY.getPrefix())) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"            return new FilterCommand(new CompanyContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        if (prefix.equals(PREFIX_JOB.getPrefix())) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"            return new FilterCommand(new JobContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"        if (prefix.equals(PREFIX_TAG.getPrefix())) {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"            return new FilterCommand(new TagContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"        // No valid prefix exists, invalid command format","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"imkwokyong":79}},{"path":"src/main/java/connexion/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.MarkCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"imkwokyong":5,"Angelyxx":22}},{"path":"src/main/java/connexion/logic/parser/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand.NoteDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":" * Parses input arguments and creates a new NoteCommand object","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"public class NoteCommandParser implements ClockDependentParser\u003cNoteCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"    private Clock clock \u003d Clock.systemDefaultZone();","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"     * Parses the given {@code String} of arguments in the context of the NoteCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"     * and returns an NoteCommand object for execution.","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"    public NoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NOTE);","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        Index index;","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, NoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"        if (!isNotePrefixPresent(argMultimap)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, NoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NOTE);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor noteDescriptor \u003d new NoteDescriptor(","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"                ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get()),","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"                new LastModifiedDateTime(LocalDateTime.now(clock)));","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        return new NoteCommand(index, noteDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"     * Returns true if the prefix does not contain empty {@code Optional} values in the given","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"    private static boolean isNotePrefixPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"        return argumentMultimap.getValue(PREFIX_NOTE).isPresent();","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"     * To specify usage of a specific clock.","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"     * @param clock The clock to use","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"     * @return an edited parser using the specified clock","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"    public NoteCommandParser withClock(Clock clock) {","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"        NoteCommandParser toReturn \u003d new NoteCommandParser();","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        toReturn.clock \u003d clock;","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"        return toReturn;","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"imkwokyong":73}},{"path":"src/main/java/connexion/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"imkwokyong":3,"-":13}},{"path":"src/main/java/connexion/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"     * Parses a {@code String company} into an {@code Company}.","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"     * @throws ParseException if the given {@code company} is invalid.","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"            throw new ParseException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"        return new Company(trimmedCompany);","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"     * Parses a {@code String job} into an {@code Job}.","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"     * @throws ParseException if the given {@code job} is invalid.","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"    public static Job parseJob(String job) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"        requireNonNull(job);","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"geoffong11"},"content":"        String trimmedJob \u003d job.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"        if (!Job.isValidJob(trimmedJob)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"            throw new ParseException(Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"        return new Job(trimmedJob);","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"geoffong11"},"content":"     * Parses a {@code String schedule} into an {@code Schedule}.","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"geoffong11"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"geoffong11"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"geoffong11"},"content":"     * @throws ParseException if the given {@code schedule} is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"geoffong11"},"content":"    public static Schedule parseSchedule(String schedule) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"geoffong11"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"geoffong11"},"content":"        String trimmedSchedule \u003d schedule.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"geoffong11"},"content":"        if (!Schedule.isValidScheduleTime(trimmedSchedule)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"geoffong11"},"content":"            throw new ParseException(Schedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"geoffong11"},"content":"        return new Schedule(trimmedSchedule);","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"geoffong11"},"content":"     * Parses a {@code String scheduleName} into an {@code ScheduleName}.","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"geoffong11"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"geoffong11"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"geoffong11"},"content":"     * @throws ParseException if the given {@code scheduleName} is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"geoffong11"},"content":"    public static ScheduleName parseScheduleName(String scheduleName) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"geoffong11"},"content":"        requireNonNull(scheduleName);","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"geoffong11"},"content":"        String trimmedScheduleName \u003d scheduleName.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"geoffong11"},"content":"        if (!ScheduleName.isValidScheduleName(trimmedScheduleName)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"geoffong11"},"content":"            throw new ParseException(ScheduleName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"geoffong11"},"content":"        return new ScheduleName(trimmedScheduleName);","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"imkwokyong"},"content":"     * Parses a {@code String note} into a {@code Note}.","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"imkwokyong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-29"},{"lineNumber":177,"author":{"gitId":"imkwokyong"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":178,"author":{"gitId":"imkwokyong"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2023-10-29"},{"lineNumber":179,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":180,"author":{"gitId":"imkwokyong"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":181,"author":{"gitId":"imkwokyong"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-29"},{"lineNumber":182,"author":{"gitId":"imkwokyong"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":183,"author":{"gitId":"imkwokyong"},"content":"        if (!Note.isValidNote(trimmedNote)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":184,"author":{"gitId":"imkwokyong"},"content":"            throw new ParseException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":185,"author":{"gitId":"imkwokyong"},"content":"        } else if (!Note.hasValidLength(trimmedNote)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"imkwokyong"},"content":"            throw new ParseException(Note.MESSAGE_CONSTRAINTS_CHARACTER_LIMIT);","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":188,"author":{"gitId":"imkwokyong"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"imkwokyong":28,"-":107,"geoffong11":55}},{"path":"src/main/java/connexion/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"imkwokyong":1,"-":41}},{"path":"src/main/java/connexion/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_SCHEDULE_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.commands.ScheduleCommand.ScheduleDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":" * Parses input arguments and creates a new ScheduleCommand object","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"public class ScheduleCommandParser implements ClockDependentParser\u003cScheduleCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    private Clock clock \u003d Clock.systemDefaultZone();","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"     * and returns an ScheduleCommand object for execution.","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"                        args, PREFIX_SCHEDULE, PREFIX_SCHEDULE_NAME);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"        Index index;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_SCHEDULE, PREFIX_SCHEDULE_NAME);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        if (argMultimap.getValue(PREFIX_SCHEDULE).isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"        Schedule schedule \u003d ParserUtil.parseSchedule(argMultimap.getValue(PREFIX_SCHEDULE).get());","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"        ScheduleName scheduleName \u003d ParserUtil","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"                .parseScheduleName(argMultimap.getValue(PREFIX_SCHEDULE_NAME)","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"                .orElse(\"Meeting\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"        LastModifiedDateTime editScheduleTime \u003d new LastModifiedDateTime(LocalDateTime.now(clock));","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor scheduleDescriptor \u003d new ScheduleDescriptor(schedule, scheduleName, editScheduleTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        return new ScheduleCommand(index, scheduleDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"     * To specify usage of a specific clock.","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"     * @param clock The clock to use","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"     * @return an edited parser using the specified clock","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"    public ScheduleCommandParser withClock(Clock clock) {","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommandParser toReturn \u003d new ScheduleCommandParser();","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"        toReturn.clock \u003d clock;","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"        return toReturn;","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"geoffong11":73}},{"path":"src/main/java/connexion/logic/parser/UnMarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.UnMarkCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":" * Parses input arguments and creates a new UnMarkCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"public class UnMarkCommandParser implements Parser\u003cUnMarkCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"     * Parses the given {@code String} of arguments in the context of the UnMarkCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"     * and returns a UnMarkCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    public UnMarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"            return new UnMarkCommand(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnMarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"imkwokyong":5,"Angelyxx":22}},{"path":"src/main/java/connexion/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser.exceptions;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"imkwokyong":2,"-":15}},{"path":"src/main/java/connexion/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.UniquePersonList;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"imkwokyong"},"content":"     * Marks {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"Angelyxx"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Angelyxx"},"content":"    public void markPerson(Person key) {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Angelyxx"},"content":"        requireNonNull(key);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Angelyxx"},"content":"        key.mark();","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"imkwokyong"},"content":"     * Un-marks {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"Angelyxx"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Angelyxx"},"content":"    public void unMarkPerson(Person key) {","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Angelyxx"},"content":"        requireNonNull(key);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Angelyxx"},"content":"        key.unMark();","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":6,"Angelyxx":17,"-":125}},{"path":"src/main/java/connexion/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_NO_PERSONS \u003d unused -\u003e false;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"     * Set the clock the Model is running on","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"    void setClock(Clock clock);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"     * Get the clock the Model is running on","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"    Clock getClock();","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Angelyxx"},"content":"     * Marks the given person.","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Angelyxx"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Angelyxx"},"content":"    void markPerson(Person target);","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Angelyxx"},"content":"     * Un-Marks the given person.","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Angelyxx"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Angelyxx"},"content":"    void unMarkPerson(Person target);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xavierpok":11,"imkwokyong":3,"Angelyxx":13,"-":84}},{"path":"src/main/java/connexion/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"    private Clock clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs, using the system default clock.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"        this(addressBook, userPrefs, Clock.systemDefaultZone());","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"    public ModelManager() {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"     * Initialises a ModelManager with the given addressBook, userPrefs \u0026 Clock","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, Clock clock) {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"        requireAllNonNull(addressBook, userPrefs, clock);","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"        this.clock \u003d Clock.systemDefaultZone();","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"    public void setClock(Clock clock) {","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"        this.clock \u003d clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"    public Clock getClock() {","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"        return this.clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Angelyxx"},"content":"    public void markPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Angelyxx"},"content":"        addressBook.markPerson(person);","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"Angelyxx"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_NO_PERSONS);","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"Angelyxx"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"Angelyxx"},"content":"    public void unMarkPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"Angelyxx"},"content":"        addressBook.unMarkPerson(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"Angelyxx"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_NO_PERSONS);","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"Angelyxx"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xavierpok":25,"imkwokyong":5,"Angelyxx":15,"-":137}},{"path":"src/main/java/connexion/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":2,"-":15}},{"path":"src/main/java/connexion/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"xavierpok":1,"imkwokyong":2,"-":14}},{"path":"src/main/java/connexion/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":" * Represents User\u0027s preferences \u0026 settings.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xavierpok":3,"imkwokyong":2,"-":85}},{"path":"src/main/java/connexion/model/person/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":" * Represents a Person\u0027s company in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompany(String)}","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"public class Company implements PersonListDetailField\u003cString\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Company can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    /*","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"     * The first character of the company must not be a whitespace,","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"    private final String value;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"     * Constructs an {@code company}.","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"     * @param company A valid company.","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"    public Company(String company) {","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        checkArgument(isValidCompany(company), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        value \u003d company;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"     * Returns true if a given string is a valid company.","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"    public static boolean isValidCompany(String test) {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"        return value;","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"        if (!(other instanceof Company)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"        Company otherCompany \u003d (Company) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"        return value.equals(otherCompany.value);","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"        return value;","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"    public String getListString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"        return value;","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"Angelyxx"},"content":"        return \"Company: \" + value;","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"xavierpok":15,"imkwokyong":2,"Angelyxx":1,"geoffong11":61}},{"path":"src/main/java/connexion/model/person/CompanyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":" * Tests that a {@code Person}\u0027s {@code Company} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"public class CompanyContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"    public CompanyContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getCompany().getValue(), keyword));","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        if (!(other instanceof CompanyContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        CompanyContainsKeywordsPredicate otherCompanyContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"                (CompanyContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        return keywords.equals(otherCompanyContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"xavierpok":1,"imkwokyong":44}},{"path":"src/main/java/connexion/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":" * Represents a Person\u0027s email in Connexion.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"public class Email implements PersonDetailField\u003cString\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"    private final String value;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"Angelyxx"},"content":"        return \"Email: \" + value;","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"        return value;","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xavierpok":11,"imkwokyong":2,"Angelyxx":1,"-":74,"geoffong11":1}},{"path":"src/main/java/connexion/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getEmail().getValue(), keyword));","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        EmailContainsKeywordsPredicate otherEmailContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"                (EmailContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        return keywords.equals(otherEmailContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"xavierpok":1,"imkwokyong":44}},{"path":"src/main/java/connexion/model/person/IsMarkedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":" * Tests that a {@code Person} is marked.","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"public class IsMarkedPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"        return person.getMarkStatus().getValue();","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        if (!(other instanceof IsMarkedPredicate)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"        return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"imkwokyong":25}},{"path":"src/main/java/connexion/model/person/Job.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":" * Represents a Person\u0027s job in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidJob(String)}","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"public class Job implements PersonListDetailField\u003cString\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Job can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    /*","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"     * The first character of the job must not be a whitespace,","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"    private final String value;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"     * Constructs an {@code Job}.","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"     * @param job A valid job.","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"    public Job(String job) {","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"        requireNonNull(job);","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        checkArgument(isValidJob(job), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        value \u003d job;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"     * Returns true if a given string is a valid job.","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"    public static boolean isValidJob(String test) {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"        return value;","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"        if (!(other instanceof Job)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"        Job otherJob \u003d (Job) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"        return value.equals(otherJob.value);","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"        return \"Job: \" + value;","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"        return value;","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"    public String getListString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"        return value;","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"xavierpok":15,"imkwokyong":2,"Angelyxx":1,"geoffong11":61}},{"path":"src/main/java/connexion/model/person/JobContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":" * Tests that a {@code Person}\u0027s {@code Job} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"public class JobContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"    public JobContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getJob().getValue(), keyword));","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        if (!(other instanceof JobContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        JobContainsKeywordsPredicate otherJobContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"                (JobContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        return keywords.equals(otherJobContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"xavierpok":1,"imkwokyong":44}},{"path":"src/main/java/connexion/model/person/LastModifiedDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":" * Represents when a Person was last modified in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":" * Guarantees: immutable; is valid as declared in LocalDateTime java API","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"public class LastModifiedDateTime implements PersonDetailField\u003cLocalDateTime\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"            \"Last modified should consist of a DateTime Object or the date as a string that is correct\"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"                    + \" (for de-serialization)\"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"                    + \", and creation should not be exposed to user.\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"     * Default LastModifiedDateTime when a more meaningful one cannot be found.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"    public static final LocalDateTime DEFAULT_LAST_MODIFIED \u003d LocalDateTime.of(","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"            2000, 10, 10, 10, 10);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"     * The DateTimeFormatter used by  the string representation of this class.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"     * Would return 10th October 2000, 10:10:00 AM as : 10 Oct 2000, 10:10:00\"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"    public static final DateTimeFormatter LASTMODIFIED_FORMATTER \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"            DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"                    .withLocale(Locale.UK);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"    private LocalDateTime lastModified;","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"     * Constructs a @code LastModifiedDateTime from a @code LocalDateTime object","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"     * @param lastModified the @code LocalDateTime represented by this class","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"    public LastModifiedDateTime(LocalDateTime lastModified) {","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"        requireNonNull(lastModified);","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"        this.lastModified \u003d lastModified.truncatedTo(ChronoUnit.SECONDS);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"        // no other sanity checking should be required, as the","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"        // LocalDateTime object encapsulates already.","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"        // No sanity checking on the SEMANTICS of the provided LocalDateTime is provided.","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"        // Doing so goes beyond the responsibilities of this class.","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"     * Constructs a @code LastModifiedDateTime from a @code String formatted as an accepted format,","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"     * The accepted formatter may be found as @code LastModifiedDateTime.LASTMODIFIED_FORMATTER.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"     * @param lastModified a valid \u0026 correctly formatted string representation of a date \u0026 time","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"     * @return the corresponding @code LastModifiedDateTime object","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"    public static LastModifiedDateTime fromString(String lastModified) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"        requireNonNull(lastModified);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"        checkArgument(isValidLastModifiedDateTime(lastModified), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"        return new LastModifiedDateTime(LocalDateTime.parse(lastModified, LASTMODIFIED_FORMATTER));","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"     * Returns if a string representation of a date \u0026 time is valid (matching the format of this class)","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"    public static boolean isValidLastModifiedDateTime(String lastModified) {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"        // Try-catch is used for control flow here, bad but needed due to limitations of","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"        // java API","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"            LocalDateTime.parse(lastModified, LASTMODIFIED_FORMATTER);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"        // While normally not recommended, there is no method exposed in the java.time API","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"        // to validate parsing without resorting to a try-catch block.","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"        // So we have to do this.","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"xavierpok"},"content":"        // The closest is DateTimeFormatter#parse(CharSequence text, ParsePosition position)","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"        // But no good way to validate that all expected fields are there","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"xavierpok"},"content":"        // Except to go even deeper into time API","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"xavierpok"},"content":"        // Which will probably obfuscate code even more","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":"        return lastModified.format(LASTMODIFIED_FORMATTER);","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"xavierpok"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"xavierpok"},"content":"        if (!(other instanceof LastModifiedDateTime)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"        // safe as we did type validation above","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"xavierpok"},"content":"        LastModifiedDateTime otherLastModifiedDateTime \u003d (LastModifiedDateTime) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"xavierpok"},"content":"        return lastModified.equals(otherLastModifiedDateTime.lastModified);","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":110,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":111,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"xavierpok"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"xavierpok"},"content":"        return lastModified.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"xavierpok"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Angelyxx"},"content":"        return \"lastModified: \" + lastModified.format(LASTMODIFIED_FORMATTER);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"xavierpok"},"content":"    public LocalDateTime getValue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"xavierpok"},"content":"        return lastModified;","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"xavierpok":122,"imkwokyong":2,"Angelyxx":2}},{"path":"src/main/java/connexion/model/person/Mark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":" * Represents the mark status in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":" * Guarantees: mutable.","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"public class Mark implements PersonListDetailField\u003cBoolean\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"            \"Mark Status can only be ★ or ☆\";","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"    private static final String UNMARKED_STAR \u003d \"☆\";","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"    private static final String MARKED_STAR \u003d \"★\";","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    private static final String VALIDATION_REGEX \u003d \"[★|☆]\";","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"    private boolean markStatus;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"     * Constructs Mark Object.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"     * @param status true or false.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"    public Mark(Boolean status) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"        this.markStatus \u003d status;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"    public void mark() {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"        this.markStatus \u003d true;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"    public void unMark() {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"        this.markStatus \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"        if (!(other instanceof Mark)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"        return markStatus \u003d\u003d ((Mark) other).markStatus;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"    public static boolean isValidMark(String test) {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"     * Constructs a @code Mark from a @code String formatted as an accepted format,","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"     * The accepted formatter may be found as @code LastModifiedDateTime.LASTMODIFIED_FORMATTER.","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"     * @param mark is a valid string representation of Mark","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"     * @return the corresponding @code Mark object","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"    public static Mark fromString(String mark) {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"        requireNonNull(mark);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"        checkArgument(isValidMark(mark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"        if (mark.equals(MARKED_STAR)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"            return new Mark(true);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"            return new Mark(false);","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"        return (markStatus ? MARKED_STAR : UNMARKED_STAR);","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"        return String.valueOf(markStatus).hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"        return (markStatus ? MARKED_STAR : UNMARKED_STAR);","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"    public Boolean getValue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"        return markStatus;","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"    public String getListString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"xavierpok"},"content":"        return (markStatus ? MARKED_STAR : UNMARKED_STAR);","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"xavierpok":19,"imkwokyong":1,"Angelyxx":71}},{"path":"src/main/java/connexion/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"public class Name implements PersonListDetailField\u003cString\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"    private final String fullName;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"        return fullName;","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"        return fullName;","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"    public String getListString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"        return fullName;","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xavierpok":16,"imkwokyong":2,"-":63}},{"path":"src/main/java/connexion/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().getValue(), keyword));","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"xavierpok":1,"imkwokyong":3,"-":40}},{"path":"src/main/java/connexion/model/person/NotMarkedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":" * Tests that a {@code Person} is not marked.","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"public class NotMarkedPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"        return !person.getMarkStatus().getValue();","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        if (!(other instanceof NotMarkedPredicate)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"        return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"imkwokyong":25}},{"path":"src/main/java/connexion/model/person/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":" * Represents a Person\u0027s note in the address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNote(String)} and has valid length as declared in","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":" * {@link #hasValidLength(String)}.","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"public class Note implements PersonDetailField\u003cString\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"            \"Note should only contain alphanumeric characters, punctuation and spaces. Can be blank\";","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"    public static final String MESSAGE_CONSTRAINTS_CHARACTER_LIMIT \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"            \"Character limit of note is 1000\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}\\\\p{Punct} ]*\";","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"    public static final int CHARACTER_LIMIT \u003d 1000;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"    private final String note;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"     * Constructs a {@code Note}.","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"     * @param note A valid note.","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"    public Note(String note) {","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        checkArgument(isValidNote(note), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        checkArgument(hasValidLength(note), MESSAGE_CONSTRAINTS_CHARACTER_LIMIT);","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        return note;","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"        return note.equals(otherNote.note);","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"        return note.hashCode();","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"     * Returns true if a given string is a valid note.","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"    public static boolean isValidNote(String test) {","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"     * Returns true if a given string has a valid length.","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"    public static boolean hasValidLength(String test) {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"        return test.length() \u003c\u003d CHARACTER_LIMIT;","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"        return note;","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"        return note;","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"imkwokyong":85}},{"path":"src/main/java/connexion/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"    private final Company company;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"    private final Job job;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"    private final Mark markStatus;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"    private final LastModifiedDateTime lastModifiedDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"    private final Note note;","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"    private final Optional\u003cSchedule\u003e schedule;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"    private final Optional\u003cScheduleName\u003e scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"    public Person(Name name, Phone phone, Email email, Company company, Job job, Mark markStatus, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"                  LastModifiedDateTime lastModifiedDateTime, Note note) {","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        requireAllNonNull(name, phone, email, company, job, tags, markStatus, note);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"        this.job \u003d job;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"        this.markStatus \u003d markStatus;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"        this.schedule \u003d Optional.empty();","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        this.scheduleName \u003d Optional.empty();","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        this.lastModifiedDateTime \u003d lastModifiedDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"     * Constructor to add or edit schedule and scheduleName.","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"    public Person(Name name, Phone phone, Email email, Company company,","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"                  Job job, Mark markStatus, Set\u003cTag\u003e tags, Optional\u003cSchedule\u003e schedule,","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"                  Optional\u003cScheduleName\u003e scheduleName,","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"                  LastModifiedDateTime lastModifiedDateTime, Note note) {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"        requireAllNonNull(name, phone, email, company, job, schedule, scheduleName, tags, note);","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"        this.job \u003d job;","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"        this.scheduleName \u003d scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"        this.markStatus \u003d markStatus;","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"        this.lastModifiedDateTime \u003d lastModifiedDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"    public Company getCompany() {","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"        return company;","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"    public Job getJob() {","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"        return job;","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"    public Optional\u003cSchedule\u003e getSchedule() {","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"geoffong11"},"content":"        return schedule;","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"    public Optional\u003cScheduleName\u003e getScheduleName() {","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"        return scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"Angelyxx"},"content":"    public Mark getMarkStatus() {","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Angelyxx"},"content":"        return markStatus;","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"    public LastModifiedDateTime getLastModifiedDateTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"xavierpok"},"content":"        return lastModifiedDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"imkwokyong"},"content":"    public Note getNote() {","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"imkwokyong"},"content":"        return note;","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"Angelyxx"},"content":"     * Marks a person\u0027s markStatus as true.","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"Angelyxx"},"content":"    public void mark() {","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"Angelyxx"},"content":"        markStatus.mark();","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"Angelyxx"},"content":"     * Marks a person\u0027s markStatus as false.","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"Angelyxx"},"content":"    public void unMark() {","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"Angelyxx"},"content":"        markStatus.unMark();","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"geoffong11"},"content":"                \u0026\u0026 company.equals(otherPerson.company)","lastModifiedDate":"2023-10-10"},{"lineNumber":169,"author":{"gitId":"geoffong11"},"content":"                \u0026\u0026 job.equals(otherPerson.job)","lastModifiedDate":"2023-10-10"},{"lineNumber":170,"author":{"gitId":"xavierpok"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"Angelyxx"},"content":"                \u0026\u0026 markStatus.equals(otherPerson.markStatus)","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"imkwokyong"},"content":"                \u0026\u0026 lastModifiedDateTime.equals(otherPerson.lastModifiedDateTime)","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"imkwokyong"},"content":"                \u0026\u0026 note.equals(otherPerson.note)","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"geoffong11"},"content":"                \u0026\u0026 schedule.equals(otherPerson.schedule)","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"geoffong11"},"content":"                \u0026\u0026 scheduleName.equals(otherPerson.scheduleName);","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"imkwokyong"},"content":"        return Objects.hash(name, phone, email, company, job, markStatus, tags, note);","lastModifiedDate":"2023-10-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"geoffong11"},"content":"                .add(\"company\", company)","lastModifiedDate":"2023-10-10"},{"lineNumber":191,"author":{"gitId":"geoffong11"},"content":"                .add(\"job\", job)","lastModifiedDate":"2023-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"xavierpok"},"content":"                .add(\"last-modified\", lastModifiedDateTime)","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"geoffong11"},"content":"                .add(\"schedule\", schedule)","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"geoffong11"},"content":"                .add(\"scheduleName\", scheduleName)","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"imkwokyong"},"content":"                .add(\"note\", note)","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xavierpok":18,"imkwokyong":20,"Angelyxx":21,"-":93,"geoffong11":48}},{"path":"src/main/java/connexion/model/person/PersonDetailField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":" * API for fields in general that are associated with Person, with a defined method for retrieving the string","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":" * representation for view in a more verbose context.","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":" * For some fields, they may have only representations in a more verbose context as they are meant to only be seen","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":" * in a more verbose context.","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":" * @param \u003cT\u003e the datatype this field wraps around","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"public interface PersonDetailField\u003cT\u003e extends PersonField\u003cT\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"     * Returns the user-facing string representation of this field in a detail view.","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"    public String getDetailString();","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"xavierpok":17}},{"path":"src/main/java/connexion/model/person/PersonField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":" * API for fields in general that are associated with Person, but with no defined method to access user-facing","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":" * string representations","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":" * @param \u003cT\u003e the datatype this field wraps around","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"public interface PersonField\u003cT\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"     * Returns the value within this field.","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"    public T getValue();","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"xavierpok":14}},{"path":"src/main/java/connexion/model/person/PersonListDetailField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":" * API for fields in general that are associated with Person, with a defined method for retrieving the string","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":" * representation for view in both an at-a-glance and a more verbose context.","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":" * @param \u003cT\u003e the datatype this field wraps around","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"public interface PersonListDetailField\u003cT\u003e extends PersonDetailField\u003cT\u003e, PersonListField\u003cT\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"xavierpok":10}},{"path":"src/main/java/connexion/model/person/PersonListField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":" * API for fields in general that are associated with Person, with a defined method for retrieving the string","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":" * representation for view in an at-a-glance context.","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":" * @param \u003cT\u003e the datatype this field wraps around","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"public interface PersonListField\u003cT\u003e extends PersonField\u003cT\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"     * Returns the user-facing string representation of this field in an at-a-glance view.","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"    public String getListString();","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"xavierpok":14}},{"path":"src/main/java/connexion/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"public class Phone implements PersonDetailField\u003cString\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"    private final String value;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"        return \"Phone: \" + value;","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"        return value;","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xavierpok":10,"imkwokyong":2,"Angelyxx":1,"-":57}},{"path":"src/main/java/connexion/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().getValue(), keyword));","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        if (!(other instanceof PhoneContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        PhoneContainsKeywordsPredicate otherPhoneContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"                (PhoneContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        return keywords.equals(otherPhoneContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"xavierpok":1,"imkwokyong":44}},{"path":"src/main/java/connexion/model/person/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":" * Class representing a schedule in Person.","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"public class Schedule implements PersonListDetailField\u003cLocalDateTime\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Schedule time should be in YYYY-MM-DD-HH-MM, and be valid.\"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"            + \" E.g. 2020-09-30-23-59. Please check to make sure the date \u0026 time exist.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    public static final DateTimeFormatter SCHEDULE_FORMATTER \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"            DateTimeFormatter.ofPattern(\"uuuu-MM-dd-HH-mm\").withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"    //u is how java refers to year vs year of era (which is y)","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    public static final DateTimeFormatter SCHEDULE_OUTPUT_FORMATTER \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"            DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM).withLocale(Locale.UK);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"    private static final String VALIDATION_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"    private final LocalDateTime scheduleTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"     * Constructs an {@code Schedule}.","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"     * @param scheduleTime A valid scheduleTime.","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"    public Schedule(String scheduleTime) {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"        requireNonNull(scheduleTime);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"        checkArgument(isValidScheduleTime(scheduleTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"        this.scheduleTime \u003d LocalDateTime.parse(scheduleTime, SCHEDULE_FORMATTER);","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"     * Tests if the given string is a valid Schedule in the correct format.","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"    public static boolean isValidScheduleTime(String test) {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"            LocalDateTime testTime \u003d LocalDateTime.parse(test, SCHEDULE_FORMATTER);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"            // value irrelevant, just see if can parse","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"            // While normally not recommended, there is no method exposed in the java.time API","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"            // to validate parsing without resorting to a try-catch block.","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"            // So we have to do this.","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"            // The closest is DateTimeFormatter#parse(CharSequence text, ParsePosition position)","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"            // But no good way to validate that all expected fields are there","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"            // Except to go even deeper into time API","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"            // Which will probably obfuscate code even more","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"        return this.scheduleTime.format(SCHEDULE_FORMATTER);","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"     * Returns the user-facing string representation of this field in a detail view.","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"        return this.scheduleTime","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"                .truncatedTo(ChronoUnit.MINUTES)","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"                .format(SCHEDULE_OUTPUT_FORMATTER);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"        if (!(other instanceof Schedule)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"        Schedule otherSchedule \u003d (Schedule) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"        return scheduleTime.equals(otherSchedule.scheduleTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"xavierpok"},"content":"     * Returns the value within this field.","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"    public LocalDateTime getValue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"geoffong11"},"content":"        return this.scheduleTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"     * Returns the user-facing string representation of this field in an at-a-glance view.","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"    public String getListString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"geoffong11"},"content":"        return this.scheduleTime","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"geoffong11"},"content":"                .truncatedTo(ChronoUnit.MINUTES)","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"geoffong11"},"content":"                .format(SCHEDULE_OUTPUT_FORMATTER);","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"xavierpok":46,"geoffong11":66}},{"path":"src/main/java/connexion/model/person/ScheduleName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":" * Represents a Person\u0027s scheduleName in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidScheduleName(String)}","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"public class ScheduleName implements PersonListDetailField\u003cString\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"            \"ScheduleNames should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"    /*","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"    private final String scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"     * Constructs a {@code ScheduleName}.","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"     * @param scheduleName A valid scheduleName.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"    public ScheduleName(String scheduleName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        requireNonNull(scheduleName);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        checkArgument(isValidScheduleName(scheduleName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"        this.scheduleName \u003d scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"     * Returns true if a given string is a valid scheduleName.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"    public static boolean isValidScheduleName(String test) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"        return scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"        if (!(other instanceof ScheduleName)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        ScheduleName otherScheduleName \u003d (ScheduleName) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"        return scheduleName.equals(otherScheduleName.scheduleName);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"        return scheduleName.hashCode();","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"        return scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"        return scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"    public String getListString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"        return scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"geoffong11":81}},{"path":"src/main/java/connexion/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"imkwokyong":4,"-":145}},{"path":"src/main/java/connexion/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person.exceptions;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"imkwokyong":1,"-":10}},{"path":"src/main/java/connexion/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person.exceptions;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"imkwokyong":1,"-":5}},{"path":"src/main/java/connexion/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.PersonListDetailField;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"public class Tag implements PersonListDetailField\u003cString\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"    private final String tagName;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"    public String getDetailString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"        return tagName;","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"        return tagName;","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"    public String getListString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"        return tagName;","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xavierpok":17,"imkwokyong":2,"-":59}},{"path":"src/main/java/connexion/model/tag/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"                        person.getTags()","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"                                .stream().reduce(","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"                                        \"\", (// I\u0027m so sorry for this but checkstyle insists on this","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"                                                str, tag) -\u003e str + \" \" + tag.getValue(), (","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"                                                        str1, str2) -\u003e str1 + \" \" + str2),","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"                        keyword));","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"        //Above line concatenates all tags together with a space in between each one","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"        TagContainsKeywordsPredicate otherTagContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"                (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"        return keywords.equals(otherTagContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"xavierpok":6,"imkwokyong":47}},{"path":"src/main/java/connexion/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.person.Mark;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"                new Company(\"Google\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"                new Job(\"Data Analyst\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"                new Mark(false),","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"                    new LastModifiedDateTime(LastModifiedDateTime.DEFAULT_LAST_MODIFIED),","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"                new Note(\"Entered Google in 2021\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"                    new Company(\"ShopBack\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"                    new Job(\"Software Engineer\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"                    new Mark(true),","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"                getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"                    new LastModifiedDateTime(LastModifiedDateTime.DEFAULT_LAST_MODIFIED),","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"                new Note(\"Interned 2 years ago\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"                    new Company(\"Microsoft\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"                    new Job(\"Data Engineer\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"                    new Mark(false),","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"                getTagSet(\"neighbours\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"                    new LastModifiedDateTime(LastModifiedDateTime.DEFAULT_LAST_MODIFIED),","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"                    new Note(\"\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"                    new Company(\"Optiver\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"                    new Job(\"Quantitative trader\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"                    new Mark(false),","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"                getTagSet(\"family\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"                    new LastModifiedDateTime(LastModifiedDateTime.DEFAULT_LAST_MODIFIED),","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"                    new Note(\"\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"                    new Company(\"Proctor \u0026 Gamble\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"                    new Job(\"UI/UX designer\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"                    new Mark(false),","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"                getTagSet(\"classmates\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"                    new LastModifiedDateTime(LastModifiedDateTime.DEFAULT_LAST_MODIFIED),","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"                    new Note(\"Fast tracked to a full time job via Management Internship\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"                    new Company(\"Food Panda\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"                    new Job(\"Data Analyst\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"                    new Mark(false),","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"                    new LastModifiedDateTime(LastModifiedDateTime.DEFAULT_LAST_MODIFIED),","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"                    new Note(\"\"))","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"xavierpok":6,"imkwokyong":24,"Angelyxx":7,"-":39,"geoffong11":12}},{"path":"src/main/java/connexion/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":" * Represents a storage for {@link connexion.model.AddressBook}.","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"imkwokyong":4,"-":41}},{"path":"src/main/java/connexion/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Mark;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"    private final String company;","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"    private final String job;","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"    private final String mark;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"    private final String lastModifiedDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    private final String schedule;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"    private final String scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"    private final String note;","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"company\") String company,","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"            @JsonProperty(\"job\") String job, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"            @JsonProperty(\"mark\") String mark, @JsonProperty(\"schedule\") String schedule,","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"            @JsonProperty(\"scheduleName\") String scheduleName,","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"            @JsonProperty(\"last_modified\") String lastModifiedDateTime, @JsonProperty(\"note\") String note) {","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"        this.job \u003d job;","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"        this.scheduleName \u003d scheduleName;","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"        this.lastModifiedDateTime \u003d lastModifiedDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"        name \u003d source.getName().getValue();","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"        phone \u003d source.getPhone().getValue();","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"        email \u003d source.getEmail().getValue();","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"        company \u003d source.getCompany().getValue();","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"        job \u003d source.getJob().getValue();","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"Angelyxx"},"content":"        mark \u003d source.getMarkStatus().toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"        schedule \u003d source.getSchedule().map(Objects::toString).orElse(\"\");","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"        scheduleName \u003d source.getScheduleName().map(Objects::toString).orElse(\"\");","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"        lastModifiedDateTime \u003d source.getLastModifiedDateTime().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"imkwokyong"},"content":"        note \u003d source.getNote().getValue();","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"geoffong11"},"content":"        if (company \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"geoffong11"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName()));","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"geoffong11"},"content":"        if (!Company.isValidCompany(company)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"geoffong11"},"content":"            throw new IllegalValueException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"geoffong11"},"content":"        final Company modelCompany \u003d new Company(company);","lastModifiedDate":"2023-10-10"},{"lineNumber":134,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":135,"author":{"gitId":"geoffong11"},"content":"        if (job \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"geoffong11"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Job.class.getSimpleName()));","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"geoffong11"},"content":"        if (!Job.isValidJob(job)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"geoffong11"},"content":"            throw new IllegalValueException(Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":140,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"geoffong11"},"content":"        final Job modelJob \u003d new Job(job);","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"Angelyxx"},"content":"        if (mark \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"Angelyxx"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"Angelyxx"},"content":"                    Mark.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"Angelyxx"},"content":"        if (!Mark.isValidMark(mark)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"Angelyxx"},"content":"            throw new IllegalValueException(Mark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"Angelyxx"},"content":"        final Mark markStatus \u003d Mark.fromString(mark);","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"xavierpok"},"content":"        if (lastModifiedDateTime \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"xavierpok"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"xavierpok"},"content":"                    LastModifiedDateTime.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"xavierpok"},"content":"        if (!LastModifiedDateTime.isValidLastModifiedDateTime(lastModifiedDateTime)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"xavierpok"},"content":"            throw new IllegalValueException(LastModifiedDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"geoffong11"},"content":"        if (schedule \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"geoffong11"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"geoffong11"},"content":"                    Schedule.class.getSimpleName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"geoffong11"},"content":"        // Checks the string if it is a valid schedule time. If string is empty, do not throw error","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"geoffong11"},"content":"        if (!Schedule.isValidScheduleTime(schedule) \u0026\u0026 !schedule.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"geoffong11"},"content":"            throw new IllegalValueException(Schedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"geoffong11"},"content":"        final Optional\u003cSchedule\u003e modelSchedule \u003d Optional.ofNullable(schedule)","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"geoffong11"},"content":"                .filter(sch -\u003e !sch.isEmpty())","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"geoffong11"},"content":"                .map(Schedule::new);","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"geoffong11"},"content":"        if (scheduleName \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"geoffong11"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"geoffong11"},"content":"                    ScheduleName.class.getSimpleName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"geoffong11"},"content":"        // Checks the string if it is a valid schedule name. If string is empty, do not throw error","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"geoffong11"},"content":"        if (!ScheduleName.isValidScheduleName(scheduleName) \u0026\u0026 !scheduleName.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"geoffong11"},"content":"            throw new IllegalValueException(ScheduleName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"geoffong11"},"content":"        final Optional\u003cScheduleName\u003e modelScheduleName \u003d Optional.ofNullable(scheduleName)","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"geoffong11"},"content":"                .filter(sch -\u003e !sch.isEmpty())","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"geoffong11"},"content":"                .map(ScheduleName::new);","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"xavierpok"},"content":"        final LastModifiedDateTime lastModified \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"xavierpok"},"content":"                LastModifiedDateTime.fromString(lastModifiedDateTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"imkwokyong"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"imkwokyong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"imkwokyong"},"content":"                    Note.class.getSimpleName()));","lastModifiedDate":"2023-10-29"},{"lineNumber":198,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":200,"author":{"gitId":"imkwokyong"},"content":"        if (!Note.isValidNote(note)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":201,"author":{"gitId":"imkwokyong"},"content":"            throw new IllegalValueException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":202,"author":{"gitId":"imkwokyong"},"content":"        } else if (!Note.hasValidLength(note)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":203,"author":{"gitId":"imkwokyong"},"content":"            throw new IllegalValueException(Note.MESSAGE_CONSTRAINTS_CHARACTER_LIMIT);","lastModifiedDate":"2023-10-30"},{"lineNumber":204,"author":{"gitId":"imkwokyong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":205,"author":{"gitId":"imkwokyong"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2023-10-29"},{"lineNumber":206,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":207,"author":{"gitId":"Angelyxx"},"content":"        Person newPerson \u003d new Person(","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"geoffong11"},"content":"                modelName, modelPhone, modelEmail, modelCompany, modelJob, markStatus,","lastModifiedDate":"2023-10-29"},{"lineNumber":209,"author":{"gitId":"imkwokyong"},"content":"                modelTags, modelSchedule, modelScheduleName, lastModified, modelNote);","lastModifiedDate":"2023-10-30"},{"lineNumber":210,"author":{"gitId":"Angelyxx"},"content":"        return newPerson;","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xavierpok":21,"imkwokyong":30,"Angelyxx":18,"-":85,"geoffong11":59}},{"path":"src/main/java/connexion/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"        tagName \u003d source.getValue();","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xavierpok":1,"imkwokyong":3,"-":44}},{"path":"src/main/java/connexion/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.FileUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.JsonUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"imkwokyong":7,"-":73}},{"path":"src/main/java/connexion/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"imkwokyong":5,"-":55}},{"path":"src/main/java/connexion/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.JsonUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"imkwokyong":5,"-":42}},{"path":"src/main/java/connexion/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"imkwokyong":5,"-":27}},{"path":"src/main/java/connexion/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":6,"-":72}},{"path":"src/main/java/connexion/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":" * Represents a storage for {@link connexion.model.UserPrefs}.","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"     * Saves the given {@link connexion.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"imkwokyong":6,"-":30}},{"path":"src/main/java/connexion/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"         * @see connexion.logic.Logic#execute(String)","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"imkwokyong":5,"-":80}},{"path":"src/main/java/connexion/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103-f13-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"imkwokyong":3,"-":99}},{"path":"src/main/java/connexion/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Logic;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"    private PersonViewPanel personViewPanel;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"    private StackPane personViewPanelPlaceholder;","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"Angelyxx"},"content":"        //empty contact list","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"Angelyxx"},"content":"        if (logic.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"Angelyxx"},"content":"            personViewPanel \u003d new PersonViewPanel();","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"Angelyxx"},"content":"            fillInfo();","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"Angelyxx"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"Angelyxx"},"content":"            //default view - the first person","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"Angelyxx"},"content":"            Person defaultPerson \u003d logic.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"Angelyxx"},"content":"            fillContactInfo(defaultPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"Angelyxx"},"content":"     * Fills up information for the personViewPanel","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"Angelyxx"},"content":"    public void fillContactInfo(Person p) {","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"Angelyxx"},"content":"        if (logic.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"Angelyxx"},"content":"            personViewPanel \u003d new PersonViewPanel();","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"Angelyxx"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"Angelyxx"},"content":"            personViewPanel \u003d new PersonViewPanel(p);","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"Angelyxx"},"content":"        fillInfo();","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"Angelyxx"},"content":"     * Fills in information for the UI","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Angelyxx"},"content":"    public void fillInfo() {","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Angelyxx"},"content":"        this.personViewPanelPlaceholder.getChildren().clear(); //clear current object in panel","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"Angelyxx"},"content":"        this.personViewPanelPlaceholder.getChildren().add(personViewPanel.getRoot());","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"imkwokyong"},"content":"     * @see connexion.logic.Logic#execute(String)","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"imkwokyong":8,"Angelyxx":36,"-":188}},{"path":"src/main/java/connexion/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"    private Label company;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"    private Label job;","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"    private Label markStatus;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"    private Label schedule;","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"    private Label lastModifiedDateTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"        name.setText(person.getName().getListString());","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"        company.setText(person.getCompany().getListString());","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"        job.setText(person.getJob().getListString());","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"        markStatus.setText(person.getMarkStatus().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"        schedule.setText(person.getScheduleName()","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"                .map(sch -\u003e sch.getListString() + \": \").orElse(\"\") + person.getSchedule()","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"                .map(Schedule::getListString).orElse(\"\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"                .sorted(Comparator.comparing(Tag::getValue))","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.getListString())));","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xavierpok":9,"imkwokyong":2,"Angelyxx":3,"-":50,"geoffong11":9}},{"path":"src/main/java/connexion/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"imkwokyong":3,"-":46}},{"path":"src/main/java/connexion/ui/PersonViewPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"public class PersonViewPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"    private static final String FXML \u003d \"PersonViewPanel.fxml\";","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"    public final Person person;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonViewPanel.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"    private Label name;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"    private Label id;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"    private Label phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"    private Label company;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"    private Label job;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"    private Label email;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"    private Label markStatus;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"    private Label lastModifiedDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"    private Label noteHeader;","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"    private Label note;","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"    private Label schedule;","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"    private Label scheduleName;","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"     * Creates a {@code PersonViewPanel} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"    public PersonViewPanel(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"        super(FXML);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"        name.setText(person.getName().getDetailString());","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"        phone.setText(person.getPhone().getDetailString());","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"        company.setText(person.getCompany().getDetailString());","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"        job.setText(person.getJob().getDetailString());","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"        email.setText(person.getEmail().getDetailString());","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"        markStatus.setText(person.getMarkStatus().toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"                .sorted(Comparator.comparing(Tag::getValue))","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.getListString())));","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"        lastModifiedDateTime.setText(","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"                String.format(\"Last modified : %s\", person.getLastModifiedDateTime().toString()));","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"        schedule.setText(person.getSchedule()","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"                .map(Schedule::getDetailString).orElse(\"\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"        scheduleName.setText(person.getScheduleName()","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"                .map(Object::toString).orElse(\"No scheduled meetings with this person yet\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"        note.setText(person.getNote().getDetailString());","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Angelyxx"},"content":"     * Constructor for PersonViewPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Angelyxx"},"content":"     * */","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Angelyxx"},"content":"    public PersonViewPanel() {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"Angelyxx"},"content":"        super(FXML);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"Angelyxx"},"content":"        this.person \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"Angelyxx"},"content":"        this.noteHeader.setText(\"\");","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Angelyxx"},"content":"        this.name.setText(\"Welcome to Connexion!\");","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"imkwokyong":1,"Angelyxx":82,"geoffong11":7}},{"path":"src/main/java/connexion/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"imkwokyong":1,"-":27}},{"path":"src/main/java/connexion/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":1,"-":27}},{"path":"src/main/java/connexion/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"imkwokyong":1,"-":12}},{"path":"src/main/java/connexion/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.MainApp;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Logic;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    private static Person personToDisplay \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    private static MainWindow mainWindow;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"            if (logic.getFilteredPersonList().size() \u003e 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"                personToDisplay \u003d logic.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"     * changes the displayed person","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"     * @param p the new person to be displayed.","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"    public static void updatePersonView(Person p) {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"        mainWindow.fillContactInfo(p);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"        personToDisplay \u003d p;","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"    public static void updatePersonView() {","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"        mainWindow.fillInnerParts();","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"    void showAlertDialogAndWait(AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"imkwokyong"},"content":"        showAlertDialogAndWait(AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"imkwokyong":7,"Angelyxx":18,"-":80}},{"path":"src/main/java/connexion/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.MainApp;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"imkwokyong":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"Angelyxx"},"content":".list-cell .icon {","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Angelyxx"},"content":"    -fx-text-fill: #ffaa00;","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-size: 25px;","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Angelyxx"},"content":"    -fx-padding: 0 20 0 0","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"Angelyxx"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"Angelyxx"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"Angelyxx"},"content":"    -fx-padding: 5 0 0 0","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"Angelyxx"},"content":".cell_icon_label {","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"Angelyxx"},"content":"    -fx-text-fill: #ffaa00;","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-size: 25px;","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"Angelyxx"},"content":"    -fx-padding: 40 20 0 0","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"Angelyxx"},"content":".cell_heading_label {","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"Angelyxx"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"Angelyxx"},"content":"    -fx-padding: 40 0 0 0","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"Angelyxx"},"content":".cell_note {","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"Angelyxx"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"Angelyxx"},"content":"    -fx-padding: 5 0 0 0","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"Angelyxx"},"content":".cell_schedule_label {","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"Angelyxx"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"Angelyxx"},"content":"    -fx-padding: 40 0 0 0","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"Angelyxx"},"content":"    /* -fx-background-color: linear-gradient(to right, #545AA7, #5A4FCF); */","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"Angelyxx"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"Angelyxx"},"content":".scroll-pane {","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"Angelyxx"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-26"},{"lineNumber":350,"author":{"gitId":"Angelyxx"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"Angelyxx"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-26"},{"lineNumber":352,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":353,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":384,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":387,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"Angelyxx":45,"-":351}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"         title\u003d\"Connexion App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.5\" prefHeight\u003d\"160.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"          \u003citems\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"              \u003cStackPane fx:id\u003d\"personViewPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"          \u003c/items\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"imkwokyong":1,"Angelyxx":8,"-":58}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"\u003cHBox fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"      \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"      \u003cLabel fx:id\u003d\"job\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"      \u003cLabel fx:id\u003d\"schedule\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"    \u003cVBox alignment\u003d\"CENTER_RIGHT\" prefHeight\u003d\"94.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"        \u003cLabel fx:id\u003d\"markStatus\" styleClass\u003d\"icon\" text\u003d\"\\$markStatus\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"      \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Angelyxx":8,"-":33}},{"path":"src/main/resources/view/PersonViewPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"            \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"            \u003cLabel fx:id\u003d\"job\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"            \u003cLabel fx:id\u003d\"lastModifiedDateTime\" styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"                   style\u003d\"-fx-font-style : italic \"/\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"            \u003cLabel fx:id\u003d\"scheduleName\" styleClass\u003d\"cell_schedule_label\"/\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"            \u003cLabel fx:id\u003d\"schedule\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"            \u003cLabel fx:id\u003d\"noteHeader\" styleClass\u003d\"cell_heading_label\" text\u003d\"Notes:\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"            \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell_note\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"        \u003cLabel fx:id\u003d\"markStatus\" styleClass\u003d\"cell_icon_label\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Angelyxx":38,"geoffong11":2}},{"path":"src/test/java/connexion/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"imkwokyong":1,"-":88}},{"path":"src/test/java/connexion/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.core;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"imkwokyong":1,"-":26}},{"path":"src/test/java/connexion/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.core;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"imkwokyong":1,"-":15}},{"path":"src/test/java/connexion/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.core;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":2,"-":133}},{"path":"src/test/java/connexion/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.core.index;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"imkwokyong":2,"-":65}},{"path":"src/test/java/connexion/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"imkwokyong":2,"-":34}},{"path":"src/test/java/connexion/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"imkwokyong":3,"-":105}},{"path":"src/test/java/connexion/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.Config;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"imkwokyong":4,"-":112}},{"path":"src/test/java/connexion/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":2,"-":21}},{"path":"src/test/java/connexion/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.SerializableTestClass;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.TestUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":3,"-":42}},{"path":"src/test/java/connexion/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.commons.util;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"imkwokyong":2,"-":141}},{"path":"src/test/java/connexion/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.JOB_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_CLOCK;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.TypicalPersons.ANDY;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.ListCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"import connexion.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"import connexion.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"import connexion.storage.StorageManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"    {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"        model.setClock(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"        logic.setClock(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"xavierpok"},"content":"        logic.setClock(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"geoffong11"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":181,"author":{"gitId":"geoffong11"},"content":"        Person expectedPerson \u003d new PersonBuilder(ANDY)","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"xavierpok"},"content":"                .withTags().withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"xavierpok"},"content":"        expectedModel.setClock(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xavierpok":11,"imkwokyong":26,"-":148,"geoffong11":3}},{"path":"src/test/java/connexion/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"imkwokyong":10,"-":38}},{"path":"src/test/java/connexion/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.OTHER_TEST_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"        Person aliceDiffTime \u003d new PersonBuilder().withName(\"Alice\").withLastModifiedDateTime(OTHER_TEST_TIME).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"        AddCommand addDiffTimeCommand \u003d new AddCommand(aliceDiffTime);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"        //different time -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"        assertFalse(addAliceCommand.equals(addDiffTimeCommand));","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"xavierpok"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"xavierpok"},"content":"        public void setClock(Clock clock) {","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"xavierpok"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"xavierpok"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"xavierpok"},"content":"        public Clock getClock() {","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"xavierpok"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"Angelyxx"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"Angelyxx"},"content":"        public void markPerson(Person target) {","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"Angelyxx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"Angelyxx"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"Angelyxx"},"content":"        public void unMarkPerson(Person target) {","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"Angelyxx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"xavierpok":17,"imkwokyong":14,"Angelyxx":10,"-":191}},{"path":"src/test/java/connexion/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"imkwokyong":7,"-":25}},{"path":"src/test/java/connexion/logic/commands/ClearScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"import static connexion.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.ClockUtil.OTHER_TEST_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"class ClearScheduleCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"    private static final ClearScheduleCommand.ClearedScheduleDescriptor DEFAULT_DESCRIPTOR \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"            new ClearScheduleCommand.ClearedScheduleDescriptor(new LastModifiedDateTime(DEFAULT_TEST_TIME));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"    private static final ClearScheduleCommand.ClearedScheduleDescriptor OTHER_DESCRIPTOR \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"            new ClearScheduleCommand.ClearedScheduleDescriptor(new LastModifiedDateTime(OTHER_TEST_TIME));","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"        Person personToClear \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"        Person clearedPerson \u003d new PersonBuilder(personToClear)","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"                .withSchedule(\"\") //empty schedule","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"                .withScheduleName(\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"                .withMark(personToClear.getMarkStatus().getValue())","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"                .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"        String expectedMessage \u003d String.format(ClearScheduleCommand.MESSAGE_CLEAR_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"                Messages.format(clearedPerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"        expectedModel.setPerson(personToClear, clearedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"        assertCommandSuccess(clearScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"    public void execute_validIndexUnfilteredListSecondPerson_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"        // execute with a different set of values to ensure values are copied over right","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"        Person personToClear \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"        assert personToClear.getMarkStatus().getValue();","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"        // for test case purposes, to make sure we\u0027re verifying that is marked","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"        Person clearedPerson \u003d new PersonBuilder(personToClear)","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"                .withSchedule(\"\") //empty schedule","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"                .withScheduleName(\"\")","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"                .withMark(personToClear.getMarkStatus().getValue())","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"                .build();","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"        String expectedMessage \u003d String.format(ClearScheduleCommand.MESSAGE_CLEAR_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"                Messages.format(clearedPerson));","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"        expectedModel.setPerson(personToClear, clearedPerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"        assertCommandSuccess(clearScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"xavierpok"},"content":"    public void execute_validIndexUnfilteredListOnlyName_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"xavierpok"},"content":"        Person personToClear \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"xavierpok"},"content":"        Person onlyNameSchedulePerson \u003d new PersonBuilder(personToClear)","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"xavierpok"},"content":"                .withSchedule(\"\") //empty schedule","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"xavierpok"},"content":"                .withScheduleName(\"test\")","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":"                .withMark(personToClear.getMarkStatus().getValue())","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"xavierpok"},"content":"                .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"        Person clearedPerson \u003d new PersonBuilder(personToClear)","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"                .withSchedule(\"\") //empty schedule","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"                .withScheduleName(\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"                .withMark(personToClear.getMarkStatus().getValue())","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"xavierpok"},"content":"                .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"xavierpok"},"content":"        String expectedMessage \u003d String.format(ClearScheduleCommand.MESSAGE_CLEAR_NAME_WITHOUT_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"xavierpok"},"content":"                Messages.format(clearedPerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"xavierpok"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"xavierpok"},"content":"        expectedModel.setPerson(personToClear, clearedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"xavierpok"},"content":"        Model onlyNameModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"xavierpok"},"content":"        onlyNameModel.setPerson(personToClear, onlyNameSchedulePerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"xavierpok"},"content":"        assertCommandSuccess(clearScheduleCommand, onlyNameModel, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"xavierpok"},"content":"    public void execute_validIndexUnfilteredListOnlySchedule_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"xavierpok"},"content":"        Person personToClear \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"xavierpok"},"content":"        Person onlyNameSchedulePerson \u003d new PersonBuilder(personToClear)","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"xavierpok"},"content":"                .withScheduleName(\"\") //only empty name","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"xavierpok"},"content":"                .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"xavierpok"},"content":"        Person clearedPerson \u003d new PersonBuilder(personToClear)","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"xavierpok"},"content":"                .withSchedule(\"\") //empty schedule","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"xavierpok"},"content":"                .withScheduleName(\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"xavierpok"},"content":"                .withMark(personToClear.getMarkStatus().getValue())","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"xavierpok"},"content":"                .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"xavierpok"},"content":"        String expectedMessage \u003d String.format(ClearScheduleCommand.MESSAGE_CLEAR_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"xavierpok"},"content":"                Messages.format(clearedPerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"xavierpok"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"xavierpok"},"content":"        expectedModel.setPerson(personToClear, clearedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"xavierpok"},"content":"        Model onlyNameModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"xavierpok"},"content":"        onlyNameModel.setPerson(personToClear, onlyNameSchedulePerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"xavierpok"},"content":"        assertCommandSuccess(clearScheduleCommand, onlyNameModel, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"xavierpok"},"content":"    public void execute_emptySchedule_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"xavierpok"},"content":"        Person personToClear \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"xavierpok"},"content":"        Person noSchedulePerson \u003d new PersonBuilder(personToClear)","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"xavierpok"},"content":"                .withSchedule(\"\") //empty schedule","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"xavierpok"},"content":"                .withScheduleName(\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"xavierpok"},"content":"                .withMark(personToClear.getMarkStatus().getValue())","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"xavierpok"},"content":"                .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"xavierpok"},"content":"        String expectedMessage \u003d ClearScheduleCommand.MESSAGE_NO_SCHEDULE;","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"xavierpok"},"content":"        Model noScheduleModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"xavierpok"},"content":"        noScheduleModel.setPerson(personToClear, noSchedulePerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"xavierpok"},"content":"        assertCommandFailure(clearScheduleCommand, noScheduleModel, expectedMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"xavierpok"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"xavierpok"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(outOfBoundIndex, DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"xavierpok"},"content":"        assertCommandFailure(clearScheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"xavierpok"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"xavierpok"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"xavierpok"},"content":"        Person personToClear \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"xavierpok"},"content":"        Person clearedPerson \u003d new PersonBuilder(personToClear)","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"xavierpok"},"content":"                .withSchedule(\"\") //empty schedule","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"xavierpok"},"content":"                .withScheduleName(\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"xavierpok"},"content":"                .withMark(personToClear.getMarkStatus().getValue())","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"xavierpok"},"content":"                .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"xavierpok"},"content":"        String expectedMessage \u003d String.format(ClearScheduleCommand.MESSAGE_CLEAR_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"xavierpok"},"content":"                Messages.format(clearedPerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"xavierpok"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"xavierpok"},"content":"        expectedModel.setPerson(personToClear, clearedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"xavierpok"},"content":"        assertCommandSuccess(clearScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"xavierpok"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"xavierpok"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"xavierpok"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"xavierpok"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"xavierpok"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(outOfBoundIndex, DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"xavierpok"},"content":"        assertCommandFailure(clearScheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"xavierpok"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearFirstCommand \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON, DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearSecondCommand \u003d new ClearScheduleCommand(INDEX_SECOND_PERSON, DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearThirdCommand \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON, OTHER_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"xavierpok"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"xavierpok"},"content":"        assertTrue(clearFirstCommand.equals(clearFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"xavierpok"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearFirstCommandCopy \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON, DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"xavierpok"},"content":"        assertTrue(clearFirstCommand.equals(clearFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"xavierpok"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"xavierpok"},"content":"        assertFalse(clearFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"xavierpok"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"xavierpok"},"content":"        assertFalse(clearFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"xavierpok"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"xavierpok"},"content":"        assertFalse(clearFirstCommand.equals(clearSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"xavierpok"},"content":"        //different last modified -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"xavierpok"},"content":"        assertFalse(clearFirstCommand.equals(clearThirdCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"xavierpok"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"xavierpok"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(index, DEFAULT_DESCRIPTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"xavierpok"},"content":"        String expected \u003d ClearScheduleCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", \"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"xavierpok"},"content":"                + \"clearedScheduleDescriptor\u003d\" + DEFAULT_DESCRIPTOR + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"xavierpok"},"content":"        assertEquals(expected, clearScheduleCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"xavierpok":257}},{"path":"src/test/java/connexion/logic/commands/ClearScheduleDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.ClockUtil.OTHER_TEST_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"public class ClearScheduleDescriptorTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"    private static final ClearScheduleCommand.ClearedScheduleDescriptor TEST_DESCRIPTOR \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"            new ClearScheduleCommand.ClearedScheduleDescriptor(new LastModifiedDateTime(DEFAULT_TEST_TIME));","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand.ClearedScheduleDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"                new ClearScheduleCommand.ClearedScheduleDescriptor(new LastModifiedDateTime(DEFAULT_TEST_TIME));","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"        ClearScheduleCommand.ClearedScheduleDescriptor otherDescriptor \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"                new ClearScheduleCommand.ClearedScheduleDescriptor(new LastModifiedDateTime(OTHER_TEST_TIME));","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"        assertTrue(TEST_DESCRIPTOR.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"        assertTrue(TEST_DESCRIPTOR.equals(TEST_DESCRIPTOR));","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"        assertFalse(TEST_DESCRIPTOR.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"        assertFalse(TEST_DESCRIPTOR.equals(5));","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"        assertFalse(TEST_DESCRIPTOR.equals(otherDescriptor));","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"        // different LastModifiedDateTime -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"        assertFalse(TEST_DESCRIPTOR.equals(","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"                new ClearScheduleCommand.ClearedScheduleDescriptor(new LastModifiedDateTime(OTHER_TEST_TIME))));","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"        String expected \u003d ClearScheduleCommand.ClearedScheduleDescriptor.class.getCanonicalName()","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"                + \"{lastModified\u003d\" + new LastModifiedDateTime(DEFAULT_TEST_TIME) + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"        assertEquals(expected, TEST_DESCRIPTOR.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"xavierpok":50,"imkwokyong":1}},{"path":"src/test/java/connexion/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"imkwokyong":1,"-":62}},{"path":"src/test/java/connexion/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_SCHEDULE_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.NoteDescriptorBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"import connexion.testutil.ScheduleDescriptorBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"    public static final String VALID_COMPANY_AMY \u003d \"Jane\u0027s Street\";","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    public static final String VALID_COMPANY_BOB \u003d \"Goldman Sach\";","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"    public static final String VALID_JOB_AMY \u003d \"Software Engineer\";","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"    public static final String VALID_JOB_BOB \u003d \"Mobile App developer\";","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"    public static final LocalDateTime VALID_LAST_MODIFIED_AMY \u003d LocalDateTime.MIN;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"    public static final LocalDateTime VALID_LAST_MODIFIED_BOB \u003d LocalDateTime.MAX;","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"    public static final String VALID_SCHEDULE_AMY \u003d \"2023-12-13-09-00\";","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"    public static final String VALID_SCHEDULE_BOB \u003d \"2023-12-25-13-00\";","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"    public static final String VALID_SCHEDULE_NAME_AMY \u003d \"Morning Meeting\";","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"    public static final String VALID_SCHEDULE_NAME_BOB \u003d \"Interview\";","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"    // When schedule is given but not the schedule name","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"    public static final String AUTO_GIVEN_SCHEDULE_NAME \u003d \"Meeting\";","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"    public static final String VALID_NOTE_AMY \u003d \"Promoted to Manager!\";","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"    // Empty String is valid too","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"    public static final String VALID_NOTE_BOB \u003d \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"    public static final String COMPANY_DESC_AMY \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"    public static final String COMPANY_DESC_BOB \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"    public static final String JOB_DESC_AMY \u003d \" \" + PREFIX_JOB + VALID_JOB_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"    public static final String JOB_DESC_BOB \u003d \" \" + PREFIX_JOB + VALID_JOB_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"    public static final String SCHEDULE_DESC_AMY \u003d \" \" + PREFIX_SCHEDULE + VALID_SCHEDULE_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"    public static final String SCHEDULE_DESC_BOB \u003d \" \" + PREFIX_SCHEDULE + VALID_SCHEDULE_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"    public static final String SCHEDULE_NAME_DESC_AMY \u003d \" \" + PREFIX_SCHEDULE_NAME + VALID_SCHEDULE_NAME_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"    public static final String SCHEDULE_NAME_DESC_BOB \u003d \" \" + PREFIX_SCHEDULE_NAME + VALID_SCHEDULE_NAME_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"    public static final String NOTE_DESC_AMY \u003d \" \" + PREFIX_NOTE + VALID_NOTE_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"    public static final String NOTE_DESC_BOB \u003d \" \" + PREFIX_NOTE + VALID_NOTE_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"    public static final String INVALID_COMPANY_DESC \u003d \" \" + PREFIX_COMPANY; // empty string not allowed for companies","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"    public static final String INVALID_JOB_DESC \u003d \" \" + PREFIX_JOB; // empty string not allowed for jobs","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"    public static final String INVALID_SCHEDULE_DESC \u003d \" \" + PREFIX_SCHEDULE","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"            + \"2023/07/10/06/59\"; // \u0027/\u0027 not allowed for schedule","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"xavierpok"},"content":"    public static final String INVALID_SCHEDULE_DATE \u003d \" \" + PREFIX_SCHEDULE","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"xavierpok"},"content":"            + \"2023-40-10-06-59\"; // correct format but wrong date (month field is wrong)","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"    public static final String INVALID_SCHEDULE_NAME_DESC \u003d \" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"            + PREFIX_SCHEDULE_NAME + \"Meeting*\"; // \u0027*\u0027 not allowed in schedule names","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"imkwokyong"},"content":"    public static final String INVALID_NOTE_DESC \u003d \" \" + PREFIX_NOTE","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"imkwokyong"},"content":"            + \"\\u2063\"; // invisible characters not allowed for note","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"imkwokyong"},"content":"    public static final String NOTE_WITH_INVALID_LENGTH_DESC \u003d \" \" + PREFIX_NOTE","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"imkwokyong"},"content":"            + \"One morning, when Gregor Samsa woke from troubled dreams, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"imkwokyong"},"content":"            + \"he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"imkwokyong"},"content":"            + \"and if he lifted his head a little he could see his brown belly, slightly domed and divided by \"","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"imkwokyong"},"content":"            + \"arches into stiff sections. The bedding was hardly able to cover it and seemed ready to slide off \"","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"imkwokyong"},"content":"            + \"any moment. His many legs, pitifully thin compared with the size of the rest of him, waved about \"","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"imkwokyong"},"content":"            + \"helplessly as he looked. \\\"What\u0027s happened to me?\\\" he thought. It wasn\u0027t a dream. His room, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"imkwokyong"},"content":"            + \"a proper human room although a little too small, lay peacefully between its four familiar walls. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"imkwokyong"},"content":"            + \"A collection of textile samples lay spread out on the table - Samsa was a travelling salesman - and \"","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"imkwokyong"},"content":"            + \"above it there hung a picture that he had recently cut out of an illustrated magazine and housed in \"","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"imkwokyong"},"content":"            + \"a nice, gilded frame. It showed a lady fitted out with a fur hat and fur boa who sat upright, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"imkwokyong"},"content":"            + \"raising a heavy fur muff that covered the whole of her lower arm towards ta\"; // exceeds character limit","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"xavierpok"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMYDIFFTIME;","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"geoffong11"},"content":"    public static final ScheduleCommand.ScheduleDescriptor SCHEDULE_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"geoffong11"},"content":"    public static final ScheduleCommand.ScheduleDescriptor SCHEDULE_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"geoffong11"},"content":"    public static final ScheduleCommand.ScheduleDescriptor SCHEDULE_AMYDIFFTIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"imkwokyong"},"content":"    public static final NoteCommand.NoteDescriptor NOTE_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"imkwokyong"},"content":"    public static final NoteCommand.NoteDescriptor NOTE_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"imkwokyong"},"content":"    public static final NoteCommand.NoteDescriptor NOTE_AMYDIFFTIME;","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":128,"author":{"gitId":"geoffong11"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withCompany(VALID_COMPANY_AMY)","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"geoffong11"},"content":"                .withJob(VALID_JOB_AMY)","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"xavierpok"},"content":"                .withTags(VALID_TAG_FRIEND).withLastModifiedDateTime(VALID_LAST_MODIFIED_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":132,"author":{"gitId":"geoffong11"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withCompany(VALID_COMPANY_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":133,"author":{"gitId":"geoffong11"},"content":"                .withJob(VALID_JOB_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"xavierpok"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(VALID_LAST_MODIFIED_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"xavierpok"},"content":"        DESC_AMYDIFFTIME \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"xavierpok"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withCompany(VALID_COMPANY_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"xavierpok"},"content":"                .withJob(VALID_JOB_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"xavierpok"},"content":"                .withTags(VALID_TAG_FRIEND).withLastModifiedDateTime(VALID_LAST_MODIFIED_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"geoffong11"},"content":"        SCHEDULE_AMY \u003d new ScheduleDescriptorBuilder().withSchedule(VALID_SCHEDULE_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"geoffong11"},"content":"                .withScheduleName(VALID_SCHEDULE_NAME_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"geoffong11"},"content":"                .withLastModifiedDateTime(VALID_LAST_MODIFIED_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"geoffong11"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"geoffong11"},"content":"        SCHEDULE_BOB \u003d new ScheduleDescriptorBuilder().withSchedule(VALID_SCHEDULE_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"geoffong11"},"content":"                .withScheduleName(VALID_SCHEDULE_NAME_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"geoffong11"},"content":"                .withLastModifiedDateTime(VALID_LAST_MODIFIED_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"geoffong11"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"geoffong11"},"content":"        SCHEDULE_AMYDIFFTIME \u003d new ScheduleDescriptorBuilder().withSchedule(VALID_SCHEDULE_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"geoffong11"},"content":"                .withScheduleName(VALID_SCHEDULE_NAME_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"geoffong11"},"content":"                .withLastModifiedDateTime(VALID_LAST_MODIFIED_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"geoffong11"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"imkwokyong"},"content":"        NOTE_AMY \u003d new NoteDescriptorBuilder().withNote(VALID_NOTE_AMY)","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(VALID_LAST_MODIFIED_AMY)","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"imkwokyong"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"imkwokyong"},"content":"        NOTE_BOB \u003d new NoteDescriptorBuilder().withNote(VALID_NOTE_BOB)","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(VALID_LAST_MODIFIED_BOB)","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"imkwokyong"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"imkwokyong"},"content":"        NOTE_AMYDIFFTIME \u003d new NoteDescriptorBuilder().withNote(VALID_NOTE_AMY)","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(VALID_LAST_MODIFIED_BOB)","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"imkwokyong"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":213,"author":{"gitId":"xavierpok"},"content":"        final String[] splitName \u003d person.getName().getValue().split(\"\\\\s+\");","lastModifiedDate":"2023-10-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"xavierpok":15,"imkwokyong":52,"-":104,"geoffong11":48}},{"path":"src/test/java/connexion/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"imkwokyong":14,"-":103}},{"path":"src/test/java/connexion/logic/commands/DetailCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"public class DetailCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"        DetailCommand detailCommand \u003d new DetailCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"        assertCommandFailure(detailCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"        DetailCommand detailFirstCommand \u003d new DetailCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"        DetailCommand detailSecondCommand \u003d new DetailCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"        assertTrue(detailFirstCommand.equals(detailFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"        DetailCommand detailFirstCommandCopy \u003d new DetailCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"        assertTrue(detailFirstCommand.equals(detailFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(detailFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(detailFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(detailFirstCommand.equals(detailSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"        DetailCommand detailCommand \u003d new DetailCommand(targetIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"        String expected \u003d DetailCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(expected, detailCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Angelyxx":61}},{"path":"src/test/java/connexion/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.DESC_AMYDIFFTIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_LAST_MODIFIED;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_SCHEDULE;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_SCHEDULE_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"        // create a person object with a default schedule and default schedule name","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"        Person editedPerson \u003d new PersonBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"                .withSchedule(DEFAULT_SCHEDULE)","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"                .withScheduleName(DEFAULT_SCHEDULE_NAME)","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"xavierpok"},"content":"        //different time -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"xavierpok"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_AMYDIFFTIME)));","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"xavierpok":7,"imkwokyong":23,"-":158,"geoffong11":7}},{"path":"src/test/java/connexion/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_LAST_MODIFIED_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withCompany(VALID_COMPANY_BOB).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"        // different job -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withJob(VALID_JOB_BOB).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withLastModifiedDateTime(VALID_LAST_MODIFIED_BOB).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", company\u003d\"","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"                + editPersonDescriptor.getCompany().orElse(null) + \", job\u003d\"","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"Angelyxx"},"content":"                + editPersonDescriptor.getCompany().orElse(null) + \", mark\u003d\"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"                + editPersonDescriptor.getJob().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", last_modified\u003d\"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"                + editPersonDescriptor.getLastModifiedDateTime().orElse(null) + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"xavierpok":6,"imkwokyong":12,"Angelyxx":1,"-":56,"geoffong11":9}},{"path":"src/test/java/connexion/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"imkwokyong":5,"-":15}},{"path":"src/test/java/connexion/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.IsMarkedPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.NotMarkedPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"public class FilterCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d preparePhonePredicate(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d prepareEmailPredicate(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"        CompanyContainsKeywordsPredicate companyPredicate \u003d prepareCompanyPredicate(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"        JobContainsKeywordsPredicate jobPredicate \u003d prepareJobPredicate(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d prepareTagPredicate(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"        // Check for name","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand command \u003d new FilterCommand(namePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"        // Check for phone","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(phonePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(phonePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"imkwokyong"},"content":"        // Check for email","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(emailPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(emailPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"imkwokyong"},"content":"        // Check for company","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(companyPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(companyPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"imkwokyong"},"content":"        // Check for job","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(jobPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(jobPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"imkwokyong"},"content":"        // Check for tag","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(tagPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(tagPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"imkwokyong"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"imkwokyong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"imkwokyong"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"imkwokyong"},"content":"                prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"imkwokyong"},"content":"        CompanyContainsKeywordsPredicate companyPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"imkwokyong"},"content":"                prepareCompanyPredicate(\"Grab Provident Citadel\");","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"imkwokyong"},"content":"        JobContainsKeywordsPredicate jobPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"imkwokyong"},"content":"                prepareJobPredicate(\"AI\");","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"imkwokyong"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"imkwokyong"},"content":"                prepareTagPredicate(\"friends\");","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"imkwokyong"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"imkwokyong"},"content":"                preparePhonePredicate(\"95352563 9482224 9482427\");","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"imkwokyong"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"imkwokyong"},"content":"                prepareEmailPredicate(\"heinz@example.com werner@example.com lydia@example.com\");","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"imkwokyong"},"content":"        // Check for name","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand command \u003d new FilterCommand(namePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"imkwokyong"},"content":"        // Check for company","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(companyPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"imkwokyong"},"content":"        // Check for job","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(jobPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(jobPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"imkwokyong"},"content":"        // Check for tag","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(tagPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(tagPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"imkwokyong"},"content":"        // Check for phone","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(phonePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(phonePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"imkwokyong"},"content":"        // Check for email","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(emailPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(emailPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"imkwokyong"},"content":"    public void execute_markedUnmarked_personsFound() {","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"imkwokyong"},"content":"        // Inside expectedModel, 3 persons are marked, 4 persons are not marked","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"imkwokyong"},"content":"        // BENSON, CARL, GEORGE are marked, others are not marked","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"imkwokyong"},"content":"        String expectedMessageMarked \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"imkwokyong"},"content":"        String expectedMessageUnmarked \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"imkwokyong"},"content":"        IsMarkedPredicate markedPredicate \u003d new IsMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand command \u003d new FilterCommand(markedPredicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(markedPredicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessageMarked, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Arrays.asList(BENSON, CARL, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"imkwokyong"},"content":"        NotMarkedPredicate notMarkedPredicate \u003d new NotMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"imkwokyong"},"content":"        command \u003d new FilterCommand(notMarkedPredicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.updateFilteredPersonList(notMarkedPredicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(command, model, expectedMessageUnmarked, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"imkwokyong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"imkwokyong"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"imkwokyong"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"imkwokyong"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"imkwokyong"},"content":"                new PhoneContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"imkwokyong"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"imkwokyong"},"content":"                new EmailContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"imkwokyong"},"content":"        CompanyContainsKeywordsPredicate companyPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"imkwokyong"},"content":"                new CompanyContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"imkwokyong"},"content":"        JobContainsKeywordsPredicate jobPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"imkwokyong"},"content":"                new JobContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"imkwokyong"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"imkwokyong"},"content":"                new TagContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"imkwokyong"},"content":"        IsMarkedPredicate markedPredicate \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"imkwokyong"},"content":"                new IsMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"imkwokyong"},"content":"        NotMarkedPredicate notMarkedPredicate \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"imkwokyong"},"content":"                new NotMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"imkwokyong"},"content":"        // Check for name","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(namePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"imkwokyong"},"content":"        String expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + namePredicate + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"imkwokyong"},"content":"        // Check for phone","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"imkwokyong"},"content":"        filterCommand \u003d new FilterCommand(phonePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"imkwokyong"},"content":"        expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + phonePredicate + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"imkwokyong"},"content":"        // Check for email","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"imkwokyong"},"content":"        filterCommand \u003d new FilterCommand(emailPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"imkwokyong"},"content":"        expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + emailPredicate + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":221,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"imkwokyong"},"content":"        // Check for company","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"imkwokyong"},"content":"        filterCommand \u003d new FilterCommand(companyPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"imkwokyong"},"content":"        expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + companyPredicate + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":225,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":226,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"imkwokyong"},"content":"        // Check for job","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"imkwokyong"},"content":"        filterCommand \u003d new FilterCommand(jobPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":229,"author":{"gitId":"imkwokyong"},"content":"        expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + jobPredicate + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":230,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"imkwokyong"},"content":"        // Check for tag","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"imkwokyong"},"content":"        filterCommand \u003d new FilterCommand(tagPredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"imkwokyong"},"content":"        expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + tagPredicate + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":236,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"imkwokyong"},"content":"        // Check for mark","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"imkwokyong"},"content":"        filterCommand \u003d new FilterCommand(markedPredicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"imkwokyong"},"content":"        expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + markedPredicate + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"imkwokyong"},"content":"        // Check for unmark","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"imkwokyong"},"content":"        filterCommand \u003d new FilterCommand(notMarkedPredicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"imkwokyong"},"content":"        expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + notMarkedPredicate + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"imkwokyong"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"imkwokyong"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"imkwokyong"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":253,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":254,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":255,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":256,"author":{"gitId":"imkwokyong"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":258,"author":{"gitId":"imkwokyong"},"content":"    private PhoneContainsKeywordsPredicate preparePhonePredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":259,"author":{"gitId":"imkwokyong"},"content":"        return new PhoneContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":260,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":261,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":262,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":263,"author":{"gitId":"imkwokyong"},"content":"     * Parses {@code userInput} into a {@code EmailContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":264,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":265,"author":{"gitId":"imkwokyong"},"content":"    private EmailContainsKeywordsPredicate prepareEmailPredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":266,"author":{"gitId":"imkwokyong"},"content":"        return new EmailContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":267,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":268,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":270,"author":{"gitId":"imkwokyong"},"content":"     * Parses {@code userInput} into a {@code CompanyContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":271,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":272,"author":{"gitId":"imkwokyong"},"content":"    private CompanyContainsKeywordsPredicate prepareCompanyPredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"imkwokyong"},"content":"        return new CompanyContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":274,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":275,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":276,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":277,"author":{"gitId":"imkwokyong"},"content":"     * Parses {@code userInput} into a {@code JobContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":278,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":279,"author":{"gitId":"imkwokyong"},"content":"    private JobContainsKeywordsPredicate prepareJobPredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":280,"author":{"gitId":"imkwokyong"},"content":"        return new JobContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":281,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":282,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":283,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":284,"author":{"gitId":"imkwokyong"},"content":"     * Parses {@code userInput} into a {@code TagContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":285,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":286,"author":{"gitId":"imkwokyong"},"content":"    private TagContainsKeywordsPredicate prepareTagPredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":287,"author":{"gitId":"imkwokyong"},"content":"        return new TagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":288,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":289,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"imkwokyong"},"content":"     * Creates a {@code IsMarkedPredicate}.","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"imkwokyong"},"content":"    private IsMarkedPredicate prepareMarkPredicate() {","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"imkwokyong"},"content":"        return new IsMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"imkwokyong"},"content":"     * Creates a {@code NotMarkedPredicate}.","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"imkwokyong"},"content":"    private NotMarkedPredicate prepareUnMarkPredicate() {","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"imkwokyong"},"content":"        return new NotMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"imkwokyong":303}},{"path":"src/test/java/connexion/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"imkwokyong":5,"-":15}},{"path":"src/test/java/connexion/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"imkwokyong":8,"-":31}},{"path":"src/test/java/connexion/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"        Person personToMark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"                Messages.format(personToMark));","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"        expectedModel.markPerson(personToMark);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"        MarkCommand markCommand \u003d new MarkCommand(targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"        String expected \u003d MarkCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(expected, markCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"imkwokyong":12,"Angelyxx":65}},{"path":"src/test/java/connexion/logic/commands/NoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NOTE_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NOTE_AMYDIFFTIME;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NOTE_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_LAST_MODIFIED;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_NOTE;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_MARKED_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand.NoteDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.NoteDescriptorBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for NoteCommand.","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"public class NoteCommandTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"    public void execute_allFieldsSpecifiedUnfilteredListMarkedPerson_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"        Person personToNote \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_MARKED_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"                .withNote(DEFAULT_NOTE)","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"                .withMark(true)","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor descriptor \u003d new NoteDescriptorBuilder()","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"                .withNote(DEFAULT_NOTE)","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_MARKED_PERSON, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"        String expectedMessage \u003d String.format(NoteCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"                INDEX_MARKED_PERSON.getOneBased(), DEFAULT_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_MARKED_PERSON.getZeroBased()), personToNote);","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(noteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"        Person personToNote \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"                .withNote(DEFAULT_NOTE)","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor descriptor \u003d new NoteDescriptorBuilder()","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"                .withNote(DEFAULT_NOTE)","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"        String expectedMessage \u003d String.format(NoteCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"                INDEX_FIRST_PERSON.getOneBased(), DEFAULT_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), personToNote);","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(noteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"        Person personToNote \u003d new PersonBuilder(personInFilteredList)","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"                .withNote(DEFAULT_NOTE)","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"imkwokyong"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"imkwokyong"},"content":"                new NoteDescriptorBuilder()","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"imkwokyong"},"content":"                        .withNote(DEFAULT_NOTE)","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"imkwokyong"},"content":"                        .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"imkwokyong"},"content":"                        .build());","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"imkwokyong"},"content":"        String expectedMessage \u003d String.format(NoteCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"imkwokyong"},"content":"                INDEX_FIRST_PERSON.getOneBased(), DEFAULT_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"imkwokyong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"imkwokyong"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToNote);","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"imkwokyong"},"content":"        assertCommandSuccess(noteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"imkwokyong"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"imkwokyong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor descriptor \u003d new NoteDescriptorBuilder().build();","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"imkwokyong"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"imkwokyong"},"content":"        assertCommandFailure(noteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"imkwokyong"},"content":"     * Note filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"imkwokyong"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"imkwokyong"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"imkwokyong"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"imkwokyong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"imkwokyong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"imkwokyong"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"imkwokyong"},"content":"                new NoteDescriptorBuilder().build());","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"imkwokyong"},"content":"        assertCommandFailure(noteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"imkwokyong"},"content":"        final NoteCommand standardCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, NOTE_AMY);","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"imkwokyong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor copyDescriptor \u003d new NoteDescriptor(NOTE_AMY);","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"imkwokyong"},"content":"        NoteCommand commandWithSameValues \u003d new NoteCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"imkwokyong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(standardCommand.equals(new NoteCommand(INDEX_SECOND_PERSON, NOTE_AMY)));","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"imkwokyong"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(standardCommand.equals(new NoteCommand(INDEX_FIRST_PERSON, NOTE_BOB)));","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"imkwokyong"},"content":"        //different time -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(standardCommand.equals(new NoteCommand(INDEX_FIRST_PERSON, NOTE_AMYDIFFTIME)));","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"imkwokyong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"imkwokyong"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor noteDescriptor \u003d new NoteDescriptorBuilder().build();","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"imkwokyong"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(index, noteDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"imkwokyong"},"content":"        String expected \u003d NoteCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", noteDescriptor\u003d\"","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"imkwokyong"},"content":"                + noteDescriptor + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, noteCommand.toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"imkwokyong":169}},{"path":"src/test/java/connexion/logic/commands/NoteDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NOTE_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NOTE_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_LAST_MODIFIED_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand.NoteDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.NoteDescriptorBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"public class NoteDescriptorTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor descriptorWithSameValues \u003d new NoteDescriptor(NOTE_AMY);","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(NOTE_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(NOTE_AMY.equals(NOTE_AMY));","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(NOTE_AMY.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(NOTE_AMY.equals(5));","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(NOTE_AMY.equals(NOTE_BOB));","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor editedAmy \u003d new NoteDescriptorBuilder(NOTE_AMY)","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(VALID_LAST_MODIFIED_BOB).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(NOTE_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor noteDescriptor \u003d new NoteDescriptor(NOTE_BOB);","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"        String expected \u003d NoteDescriptor.class.getCanonicalName() + \"{note\u003d\"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"                + noteDescriptor.getNote() + \", last_modified\u003d\"","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"                + noteDescriptor.getLastModifiedDateTime() + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, noteDescriptor.toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"imkwokyong":50}},{"path":"src/test/java/connexion/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.SCHEDULE_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.SCHEDULE_AMYDIFFTIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.SCHEDULE_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_LAST_MODIFIED;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_SCHEDULE;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_SCHEDULE_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_MARKED_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.commands.ScheduleCommand.ScheduleDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"import connexion.testutil.ScheduleDescriptorBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ScheduleCommand.","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"    public void execute_allFieldsSpecifiedUnfilteredListMarkedPerson_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"        Person scheduledPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(6))","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"                .withSchedule(DEFAULT_SCHEDULE)","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"                .withScheduleName(DEFAULT_SCHEDULE_NAME)","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"                .withMark(true)","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"                .build();","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor descriptor \u003d new ScheduleDescriptorBuilder()","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"                .withSchedule(DEFAULT_SCHEDULE)","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"                .withScheduleName(DEFAULT_SCHEDULE_NAME)","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"                .build();","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_MARKED_PERSON, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d String.format(ScheduleCommand.SCHEDULE_ADD_SUCCESS, Messages.format(scheduledPerson));","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        //expectedModel.setClock(model.getClock());","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(6), scheduledPerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"        Person scheduledPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(0))","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"                .withSchedule(DEFAULT_SCHEDULE)","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"                .withScheduleName(DEFAULT_SCHEDULE_NAME)","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor descriptor \u003d new ScheduleDescriptorBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"                .withSchedule(DEFAULT_SCHEDULE)","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"                .withScheduleName(DEFAULT_SCHEDULE_NAME)","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d String.format(ScheduleCommand.SCHEDULE_ADD_SUCCESS, Messages.format(scheduledPerson));","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"        //expectedModel.setClock(model.getClock());","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), scheduledPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"        Person scheduledPerson \u003d new PersonBuilder(personInFilteredList)","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"                .withSchedule(DEFAULT_SCHEDULE)","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"                .withScheduleName(DEFAULT_SCHEDULE_NAME)","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"                new ScheduleDescriptorBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"                        .withSchedule(DEFAULT_SCHEDULE)","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"                        .withScheduleName(DEFAULT_SCHEDULE_NAME)","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"                        .withLastModifiedDateTime(DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"                        .build());","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d String.format(ScheduleCommand.SCHEDULE_ADD_SUCCESS, Messages.format(scheduledPerson));","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"geoffong11"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"geoffong11"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), scheduledPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"geoffong11"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"geoffong11"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"geoffong11"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor descriptor \u003d new ScheduleDescriptorBuilder().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"geoffong11"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"geoffong11"},"content":"     * Schedule filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"geoffong11"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"geoffong11"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"geoffong11"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"geoffong11"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"geoffong11"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"geoffong11"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"geoffong11"},"content":"                new ScheduleDescriptorBuilder().build());","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"geoffong11"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"geoffong11"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"geoffong11"},"content":"        final ScheduleCommand standardCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, SCHEDULE_AMY);","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"geoffong11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor copyDescriptor \u003d new ScheduleDescriptor(SCHEDULE_AMY);","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommand commandWithSameValues \u003d new ScheduleCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"geoffong11"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"geoffong11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"geoffong11"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"geoffong11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"geoffong11"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"geoffong11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"geoffong11"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"geoffong11"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"geoffong11"},"content":"        assertFalse(standardCommand.equals(new ScheduleCommand(INDEX_SECOND_PERSON, SCHEDULE_AMY)));","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"geoffong11"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"geoffong11"},"content":"        assertFalse(standardCommand.equals(new ScheduleCommand(INDEX_FIRST_PERSON, SCHEDULE_BOB)));","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"geoffong11"},"content":"        //different time -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"geoffong11"},"content":"        assertFalse(standardCommand.equals(new ScheduleCommand(INDEX_FIRST_PERSON, SCHEDULE_AMYDIFFTIME)));","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"geoffong11"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"geoffong11"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor scheduleDescriptor \u003d new ScheduleDescriptorBuilder().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(index, scheduleDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"geoffong11"},"content":"        String expected \u003d ScheduleCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", scheduleDescriptor\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"geoffong11"},"content":"                + scheduleDescriptor + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"geoffong11"},"content":"        assertEquals(expected, scheduleCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"xavierpok":7,"geoffong11":170}},{"path":"src/test/java/connexion/logic/commands/ScheduleDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.SCHEDULE_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.SCHEDULE_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_LAST_MODIFIED_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.commands.ScheduleCommand.ScheduleDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"import connexion.testutil.ScheduleDescriptorBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"public class ScheduleDescriptorTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor descriptorWithSameValues \u003d new ScheduleDescriptor(SCHEDULE_AMY);","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"        assertTrue(SCHEDULE_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"        assertTrue(SCHEDULE_AMY.equals(SCHEDULE_AMY));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"        assertFalse(SCHEDULE_AMY.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        assertFalse(SCHEDULE_AMY.equals(5));","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"        assertFalse(SCHEDULE_AMY.equals(SCHEDULE_BOB));","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor editedAmy \u003d new ScheduleDescriptorBuilder(SCHEDULE_AMY)","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"                .withLastModifiedDateTime(VALID_LAST_MODIFIED_BOB).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"        assertFalse(SCHEDULE_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor scheduleDescriptor \u003d new ScheduleDescriptor(SCHEDULE_BOB);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"        String expected \u003d ScheduleDescriptor.class.getCanonicalName() + \"{schedule\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"                + scheduleDescriptor.getSchedule() + \", scheduleName\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"                + scheduleDescriptor.getScheduleName() + \", last_modified\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"                + scheduleDescriptor.getLastModifiedDateTime() + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        assertEquals(expected, scheduleDescriptor.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"geoffong11":51}},{"path":"src/test/java/connexion/logic/commands/UnMarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"public class UnMarkCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"        Person personToUnMark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"        UnMarkCommand unMarkCommand \u003d new UnMarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"        String expectedMessage \u003d String.format(UnMarkCommand.MESSAGE_UNMARK_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"                Messages.format(personToUnMark));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"        expectedModel.markPerson(personToUnMark);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"        assertCommandSuccess(unMarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"        UnMarkCommand unMarkCommand \u003d new UnMarkCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"        assertCommandFailure(unMarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"        UnMarkCommand unMarkFirstCommand \u003d new UnMarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        UnMarkCommand unMarkSecondCommand \u003d new UnMarkCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"        assertTrue(unMarkFirstCommand.equals(unMarkFirstCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"        UnMarkCommand unMarkFirstCommandCopy \u003d new UnMarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"        assertTrue(unMarkFirstCommand.equals(unMarkFirstCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(unMarkFirstCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(unMarkFirstCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(unMarkFirstCommand.equals(unMarkSecondCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"        UnMarkCommand unMarkCommand \u003d new UnMarkCommand(targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"        String expected \u003d UnMarkCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(expected, unMarkCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"imkwokyong":12,"Angelyxx":65}},{"path":"src/test/java/connexion/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.COMPANY_DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_JOB_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.JOB_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.JOB_DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_CLOCK;","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.TypicalPersons.ANDY;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"    private AddCommandParser parser \u003d new AddCommandParser().withClock(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"        Person expectedPerson \u003d new PersonBuilder(ANDY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"                + COMPANY_DESC_AMY + JOB_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(ANDY).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"                NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + COMPANY_DESC_AMY","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"                        + JOB_DESC_AMY + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"                + COMPANY_DESC_BOB + JOB_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"geoffong11"},"content":"        // multiple companies","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, COMPANY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"        // multiple jobs","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, JOB_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOB));","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"geoffong11"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"geoffong11"},"content":"                        + NAME_DESC_AMY + COMPANY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"geoffong11"},"content":"                        PREFIX_NAME, PREFIX_JOB, PREFIX_EMAIL, PREFIX_COMPANY, PREFIX_PHONE));","lastModifiedDate":"2023-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, INVALID_COMPANY_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"geoffong11"},"content":"        // invalid company","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_COMPANY_DESC,","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":146,"author":{"gitId":"geoffong11"},"content":"        // invalid job","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_JOB_DESC,","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOB));","lastModifiedDate":"2023-10-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"geoffong11"},"content":"        Person expectedPerson \u003d new PersonBuilder(ANDY).withTags().withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"geoffong11"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"geoffong11"},"content":"                        + COMPANY_DESC_AMY + JOB_DESC_AMY,","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                        new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":166,"author":{"gitId":"geoffong11"},"content":"                        + COMPANY_DESC_BOB + JOB_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":170,"author":{"gitId":"geoffong11"},"content":"                        + COMPANY_DESC_BOB + JOB_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":174,"author":{"gitId":"geoffong11"},"content":"                        + COMPANY_DESC_BOB + JOB_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":178,"author":{"gitId":"geoffong11"},"content":"                        + VALID_COMPANY_BOB + VALID_JOB_BOB, expectedMessage);","lastModifiedDate":"2023-10-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":182,"author":{"gitId":"geoffong11"},"content":"                        + VALID_COMPANY_BOB + VALID_JOB_BOB, expectedMessage);","lastModifiedDate":"2023-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":189,"author":{"gitId":"geoffong11"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2023-10-11"},{"lineNumber":194,"author":{"gitId":"geoffong11"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-11"},{"lineNumber":199,"author":{"gitId":"geoffong11"},"content":"                + COMPANY_DESC_BOB + JOB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"geoffong11"},"content":"        // invalid company","lastModifiedDate":"2023-10-11"},{"lineNumber":202,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_COMPANY_DESC","lastModifiedDate":"2023-10-11"},{"lineNumber":203,"author":{"gitId":"geoffong11"},"content":"                + JOB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":204,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":205,"author":{"gitId":"geoffong11"},"content":"        // invalid job","lastModifiedDate":"2023-10-11"},{"lineNumber":206,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":207,"author":{"gitId":"geoffong11"},"content":"                + COMPANY_DESC_BOB + INVALID_JOB_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":211,"author":{"gitId":"geoffong11"},"content":"                + COMPANY_DESC_BOB + JOB_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-11"},{"lineNumber":215,"author":{"gitId":"geoffong11"},"content":"                        + INVALID_COMPANY_DESC + JOB_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":219,"author":{"gitId":"geoffong11"},"content":"                + COMPANY_DESC_BOB + JOB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"xavierpok":3,"imkwokyong":48,"-":110,"geoffong11":61}},{"path":"src/test/java/connexion/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_CLOCK;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_NOTE;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.DetailCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.EditCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.ListCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.MarkCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand.NoteDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.UnMarkCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.NoteDescriptorBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser().withClock(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"        Person person \u003d new PersonBuilder().withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"    public void parseCommand_detail() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"        DetailCommand command \u003d (DetailCommand) parser.parseCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"                DetailCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(new DetailCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"        Person person \u003d new PersonBuilder().withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"imkwokyong"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e nameArgs \u003d Arrays.asList(\"n/\", \"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand nameCommand \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"imkwokyong"},"content":"                FilterCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"imkwokyong"},"content":"                        + nameArgs.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(new FilterCommand(new NameContainsKeywordsPredicate(keywords)), nameCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e phoneArgs \u003d Arrays.asList(\"p/\", \"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand phoneCommand \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"imkwokyong"},"content":"                FilterCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"imkwokyong"},"content":"                        + phoneArgs.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(new FilterCommand(new PhoneContainsKeywordsPredicate(keywords)), phoneCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e emailArgs \u003d Arrays.asList(\"e/\", \"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand emailCommand \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"imkwokyong"},"content":"                FilterCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"imkwokyong"},"content":"                        + emailArgs.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(new FilterCommand(new EmailContainsKeywordsPredicate(keywords)), emailCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e companyArgs \u003d Arrays.asList(\"c/\", \"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand companyCommand \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"imkwokyong"},"content":"                FilterCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"imkwokyong"},"content":"                        + companyArgs.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(new FilterCommand(new CompanyContainsKeywordsPredicate(keywords)), companyCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e jobArgs \u003d Arrays.asList(\"j/\", \"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand jobCommand \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"imkwokyong"},"content":"                FilterCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"imkwokyong"},"content":"                        + jobArgs.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(new FilterCommand(new JobContainsKeywordsPredicate(keywords)), jobCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e tagArgs \u003d Arrays.asList(\"t/\", \"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand tagCommand \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"imkwokyong"},"content":"                FilterCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"imkwokyong"},"content":"                        + tagArgs.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(new FilterCommand(new TagContainsKeywordsPredicate(keywords)), tagCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"imkwokyong"},"content":"    public void parseCommand_note() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor descriptor \u003d new NoteDescriptorBuilder()","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"imkwokyong"},"content":"                .withNote(DEFAULT_NOTE)","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"imkwokyong"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"imkwokyong"},"content":"        NoteCommand command \u003d (NoteCommand) parser.parseCommand(NoteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"imkwokyong"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getNoteDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(new NoteCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"Angelyxx"},"content":"    public void parseCommand_mark() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"Angelyxx"},"content":"        MarkCommand command \u003d (MarkCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"Angelyxx"},"content":"                MarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(new MarkCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"Angelyxx"},"content":"    public void parseCommand_unMark() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"Angelyxx"},"content":"        UnMarkCommand command \u003d (UnMarkCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"Angelyxx"},"content":"                UnMarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(new UnMarkCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xavierpok":3,"imkwokyong":85,"Angelyxx":22,"-":70}},{"path":"src/test/java/connexion/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"imkwokyong":1,"-":149}},{"path":"src/test/java/connexion/logic/parser/ClearScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_CLOCK;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"import connexion.logic.commands.ClearScheduleCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"class ClearScheduleCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"    private ClearScheduleCommandParser parser \u003d new ClearScheduleCommandParser().withClock(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"        assertParseSuccess(parser, \"1\", new ClearScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"                new ClearScheduleCommand.ClearedScheduleDescriptor(new LastModifiedDateTime(DEFAULT_TEST_TIME))));","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"                ClearScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"        assertParseFailure(parser, \"1 /t this argument should not be here\",","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"                ClearScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"        assertParseFailure(parser, \"1 /e 2020 /i 2020\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"                ClearScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"xavierpok":43}},{"path":"src/test/java/connexion/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"xavierpok":1,"imkwokyong":3,"-":36}},{"path":"src/test/java/connexion/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"imkwokyong":6,"-":26}},{"path":"src/test/java/connexion/logic/parser/DetailCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"import connexion.logic.commands.DetailCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"public class DetailCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    private DetailCommandParser parser \u003d new DetailCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    public void parse_validArgs_returnsDetailCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"        assertParseSuccess(parser, \"1\", new DetailCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DetailCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Angelyxx":25}},{"path":"src/test/java/connexion/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.COMPANY_DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_JOB_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.JOB_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_JOB_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_CLOCK;","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.EditCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"    private EditCommandParser parser \u003d new EditCommandParser().withClock(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, \"1\" + INVALID_COMPANY_DESC, Company.MESSAGE_CONSTRAINTS); // invalid company","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, \"1\" + INVALID_JOB_DESC, Job.MESSAGE_CONSTRAINTS); // invalid job","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-11"},{"lineNumber":111,"author":{"gitId":"geoffong11"},"content":"                        + VALID_COMPANY_AMY + VALID_JOB_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                        Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":119,"author":{"gitId":"geoffong11"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"geoffong11"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"geoffong11"},"content":"                .withCompany(VALID_COMPANY_AMY).withJob(VALID_JOB_AMY)","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"xavierpok"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"xavierpok"},"content":"                .withEmail(VALID_EMAIL_AMY).withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"xavierpok"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"xavierpok"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"xavierpok"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"geoffong11"},"content":"        // company","lastModifiedDate":"2023-10-11"},{"lineNumber":167,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":168,"author":{"gitId":"xavierpok"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withCompany(VALID_COMPANY_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":173,"author":{"gitId":"geoffong11"},"content":"        // job","lastModifiedDate":"2023-10-11"},{"lineNumber":174,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + JOB_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":175,"author":{"gitId":"xavierpok"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withJob(VALID_JOB_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"xavierpok"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"xavierpok"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"geoffong11"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-11"},{"lineNumber":205,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + COMPANY_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-11"},{"lineNumber":206,"author":{"gitId":"geoffong11"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY","lastModifiedDate":"2023-10-11"},{"lineNumber":207,"author":{"gitId":"geoffong11"},"content":"                + COMPANY_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND + JOB_DESC_AMY","lastModifiedDate":"2023-10-11"},{"lineNumber":208,"author":{"gitId":"geoffong11"},"content":"                + PHONE_DESC_BOB + COMPANY_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":211,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COMPANY));","lastModifiedDate":"2023-10-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":214,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_JOB_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-11"},{"lineNumber":215,"author":{"gitId":"geoffong11"},"content":"                + INVALID_PHONE_DESC + INVALID_JOB_DESC + INVALID_EMAIL_DESC + INVALID_COMPANY_DESC;","lastModifiedDate":"2023-10-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":218,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_JOB));","lastModifiedDate":"2023-10-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"xavierpok"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-10-14"},{"lineNumber":227,"author":{"gitId":"xavierpok"},"content":"                .withTags().withLastModifiedDateTime(DEFAULT_TEST_TIME).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"xavierpok":17,"imkwokyong":49,"-":146,"geoffong11":20}},{"path":"src/test/java/connexion/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.IsMarkedPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.NotMarkedPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        // No valid field prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"c\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"        // No keywords for mode 1","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"c/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        // Invalid field prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"a/Amy\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"        // no leading and trailing whitespaces for name","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"                new FilterCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"n/Alice Bob\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"        // multiple whitespaces between keywords for name","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"n/ \\n Alice \\n \\t Bob  \\t\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"        // no leading and trailing whitespaces for phone","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"        expectedFilterCommand \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"                new FilterCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(\"1234\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"p/1234\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"        // multiple whitespaces between keywords for phone","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"p/ \\t\\n 1234  \\t\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"        // no leading and trailing whitespaces for email","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"        expectedFilterCommand \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"                new FilterCommand(new EmailContainsKeywordsPredicate(Arrays.asList(\"a@b.com\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"e/a@b.com\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"        // multiple whitespaces between keywords for email","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"e/ \\t\\n a@b.com  \\t\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"        // no leading and trailing whitespaces for company","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"        expectedFilterCommand \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"                new FilterCommand(new CompanyContainsKeywordsPredicate(Arrays.asList(\"Meta\", \"Google\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"c/Meta Google\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"        // multiple whitespaces between keywords for company","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"c/ \\n Meta \\n \\t Google  \\t\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"        // no leading and trailing whitespaces for job","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"        expectedFilterCommand \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"                new FilterCommand(new JobContainsKeywordsPredicate(Arrays.asList(\"Software\", \"Engineer\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"j/Software Engineer\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"        // multiple whitespaces between keywords for job","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"j/ \\n Software \\n \\t Engineer \\t\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"        // no leading and trailing whitespaces for tags","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"        expectedFilterCommand \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"                new FilterCommand(new TagContainsKeywordsPredicate(Arrays.asList(\"friend\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"t/friend\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"imkwokyong"},"content":"        // multiple whitespaces between keywords for tags","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"t/ \\t\\n friend  \\t\", expectedFilterCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"imkwokyong"},"content":"        // no keywords for mark","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"imkwokyong"},"content":"        expectedFilterCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"imkwokyong"},"content":"                new FilterCommand(new IsMarkedPredicate());","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"m/\", expectedFilterCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"imkwokyong"},"content":"        // multiple keywords, whitespaces for mark, keywords will be discarded","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"m/ AB \\n\\t CD\", expectedFilterCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"imkwokyong"},"content":"        // no keywords for unmark","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"imkwokyong"},"content":"        expectedFilterCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"imkwokyong"},"content":"                new FilterCommand(new NotMarkedPredicate());","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"u/\", expectedFilterCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"imkwokyong"},"content":"        // multiple keywords, whitespaces for unmark, keywords will be discarded","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, \"u/ AB \\n\\t CD\", expectedFilterCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"imkwokyong":109}},{"path":"src/test/java/connexion/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.MarkCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"        assertParseSuccess(parser, \"1\", new MarkCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"imkwokyong":6,"Angelyxx":24}},{"path":"src/test/java/connexion/logic/parser/NoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_NOTE_DESC;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NOTE_DESC_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.NOTE_WITH_INVALID_LENGTH_DESC;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_CLOCK;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand.NoteDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.NoteDescriptorBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"public class NoteCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, NoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"    private NoteCommandParser parser \u003d new NoteCommandParser().withClock(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        // no index specified","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, VALID_NOTE_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        // no field specified","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"        // negative index","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"-5\" + NOTE_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        // zero index","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"0\" + NOTE_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"1 e/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"    public void parse_invalidValueOrInvalidLength_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NOTE_DESC, Note.MESSAGE_CONSTRAINTS); // invalid note","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"1\" + NOTE_WITH_INVALID_LENGTH_DESC,","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"                Note.MESSAGE_CONSTRAINTS_CHARACTER_LIMIT); // note with invalid length","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"    public void parse_validValue_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"        String userInput \u003d targetIndex.getOneBased() + NOTE_DESC_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"        NoteDescriptor descriptor \u003d new NoteDescriptorBuilder()","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"                .withNote(VALID_NOTE_BOB)","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"        NoteCommand expectedCommand \u003d new NoteCommand(targetIndex,","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"                descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"imkwokyong":77}},{"path":"src/test/java/connexion/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"    private static final String INVALID_COMPANY \u003d \" \";","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"    private static final String INVALID_JOB \u003d \" \";","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"    private static final String INVALID_NOTE \u003d \"\\u2063\";","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"    private static final String NOTE_WITH_INVALID_LENGTH \u003d \"One morning, when Gregor Samsa woke from troubled dreams, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"            + \"he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"            + \"and if he lifted his head a little he could see his brown belly, slightly domed and divided by \"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"            + \"arches into stiff sections. The bedding was hardly able to cover it and seemed ready to slide off \"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"            + \"any moment. His many legs, pitifully thin compared with the size of the rest of him, waved about \"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"            + \"helplessly as he looked. \\\"What\u0027s happened to me?\\\" he thought. It wasn\u0027t a dream. His room, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"            + \"a proper human room although a little too small, lay peacefully between its four familiar walls. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"            + \"A collection of textile samples lay spread out on the table - Samsa was a travelling salesman - and \"","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"            + \"above it there hung a picture that he had recently cut out of an illustrated magazine and housed in \"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"            + \"a nice, gilded frame. It showed a lady fitted out with a fur hat and fur boa who sat upright, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"            + \"raising a heavy fur muff that covered the whole of her lower arm towards ta\";","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"    private static final String VALID_COMPANY \u003d \"JP Morgan\";","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"    private static final String VALID_JOB \u003d \"Data Analyst\";","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"    private static final String VALID_NOTE \u003d \"CS2103 is pAin!!!!\";","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"geoffong11"},"content":"    public void parseCompany_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"geoffong11"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCompany((String) null));","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"geoffong11"},"content":"    public void parseCompany_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"geoffong11"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCompany(INVALID_COMPANY));","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"geoffong11"},"content":"    public void parseCompany_validValueWithoutWhitespace_returnsCompany() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"geoffong11"},"content":"        Company expectedCompany \u003d new Company(VALID_COMPANY);","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"geoffong11"},"content":"        assertEquals(expectedCompany, ParserUtil.parseCompany(VALID_COMPANY));","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"geoffong11"},"content":"    public void parseCompany_validValueWithWhitespace_returnsTrimmedCompany() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"geoffong11"},"content":"        String companyWithWhitespace \u003d WHITESPACE + VALID_COMPANY + WHITESPACE;","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"geoffong11"},"content":"        Company expectedCompany \u003d new Company(VALID_COMPANY);","lastModifiedDate":"2023-10-11"},{"lineNumber":142,"author":{"gitId":"geoffong11"},"content":"        assertEquals(expectedCompany, ParserUtil.parseCompany(companyWithWhitespace));","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":146,"author":{"gitId":"geoffong11"},"content":"    public void parseJob_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"geoffong11"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseJob((String) null));","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":149,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":151,"author":{"gitId":"geoffong11"},"content":"    public void parseJob_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseJob(INVALID_JOB));","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":155,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"geoffong11"},"content":"    public void parseJob_validValueWithoutWhitespace_returnsJob() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"geoffong11"},"content":"        Job expectedJob \u003d new Job(VALID_JOB);","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"geoffong11"},"content":"        assertEquals(expectedJob, ParserUtil.parseJob(VALID_JOB));","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":160,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":161,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":162,"author":{"gitId":"geoffong11"},"content":"    public void parseJob_validValueWithWhitespace_returnsTrimmedJob() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":163,"author":{"gitId":"geoffong11"},"content":"        String jobWithWhitespace \u003d WHITESPACE + VALID_JOB + WHITESPACE;","lastModifiedDate":"2023-10-11"},{"lineNumber":164,"author":{"gitId":"geoffong11"},"content":"        Job expectedJob \u003d new Job(VALID_JOB);","lastModifiedDate":"2023-10-11"},{"lineNumber":165,"author":{"gitId":"geoffong11"},"content":"        assertEquals(expectedJob, ParserUtil.parseJob(jobWithWhitespace));","lastModifiedDate":"2023-10-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":237,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":238,"author":{"gitId":"imkwokyong"},"content":"    public void parseNote_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":239,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNote((String) null));","lastModifiedDate":"2023-10-30"},{"lineNumber":240,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":241,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":242,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":243,"author":{"gitId":"imkwokyong"},"content":"    public void parseNote_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":244,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNote(INVALID_NOTE));","lastModifiedDate":"2023-10-30"},{"lineNumber":245,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":246,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":247,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":248,"author":{"gitId":"imkwokyong"},"content":"    public void parseNote_invalidLength_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":249,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNote(NOTE_WITH_INVALID_LENGTH));","lastModifiedDate":"2023-10-30"},{"lineNumber":250,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":251,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":252,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":253,"author":{"gitId":"imkwokyong"},"content":"    public void parseNote_validValueWithoutWhitespace_returnsNote() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":254,"author":{"gitId":"imkwokyong"},"content":"        Note expectedNote \u003d new Note(VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":255,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expectedNote, ParserUtil.parseNote(VALID_NOTE));","lastModifiedDate":"2023-10-30"},{"lineNumber":256,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":257,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":258,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":259,"author":{"gitId":"imkwokyong"},"content":"    public void parseNote_validValueWithWhitespace_returnsTrimmedNote() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":260,"author":{"gitId":"imkwokyong"},"content":"        String noteWithWhitespace \u003d WHITESPACE + VALID_NOTE + WHITESPACE;","lastModifiedDate":"2023-10-30"},{"lineNumber":261,"author":{"gitId":"imkwokyong"},"content":"        Note expectedNote \u003d new Note(VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":262,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expectedNote, ParserUtil.parseNote(noteWithWhitespace));","lastModifiedDate":"2023-10-30"},{"lineNumber":263,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"imkwokyong":54,"-":173,"geoffong11":37}},{"path":"src/test/java/connexion/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.AUTO_GIVEN_SCHEDULE_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_SCHEDULE_DATE;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_SCHEDULE_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.INVALID_SCHEDULE_NAME_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.SCHEDULE_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.SCHEDULE_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.SCHEDULE_NAME_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.SCHEDULE_NAME_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_SCHEDULE_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_SCHEDULE_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_SCHEDULE_NAME_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_SCHEDULE_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_CLOCK;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.commands.ScheduleCommand.ScheduleDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"import connexion.testutil.ScheduleDescriptorBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"    private ScheduleCommandParser parser \u003d new ScheduleCommandParser().withClock(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"        // no index specified","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, VALID_SCHEDULE_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"        // no field specified","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"        // negative index","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"-5\" + SCHEDULE_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"        // zero index","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"        assertParseFailure(parser, \"0\" + SCHEDULE_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, \"1 e/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SCHEDULE_DESC, Schedule.MESSAGE_CONSTRAINTS); // invalid schedule","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, \"1\" + SCHEDULE_DESC_AMY + INVALID_SCHEDULE_NAME_DESC,","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"                ScheduleName.MESSAGE_CONSTRAINTS); // invalid schedule name","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"        // valid schedule name but invalid schedule","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SCHEDULE_DESC + SCHEDULE_NAME_DESC_AMY,","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"                Schedule.MESSAGE_CONSTRAINTS); // invalid schedule","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SCHEDULE_DATE + SCHEDULE_NAME_DESC_AMY,","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"                Schedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"        String userInput \u003d targetIndex.getOneBased() + SCHEDULE_DESC_BOB + SCHEDULE_NAME_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor descriptor \u003d new ScheduleDescriptorBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"                .withSchedule(VALID_SCHEDULE_BOB).withScheduleName(VALID_SCHEDULE_NAME_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommand expectedCommand \u003d new ScheduleCommand(targetIndex,","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"               descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"geoffong11"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"    // Parse without schedule name","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"geoffong11"},"content":"    public void parse_onlyScheduleSpecified_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"geoffong11"},"content":"        String userInput \u003d targetIndex.getOneBased() + SCHEDULE_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"geoffong11"},"content":"        ScheduleDescriptor descriptor \u003d new ScheduleDescriptorBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"geoffong11"},"content":"                .withSchedule(VALID_SCHEDULE_BOB).withScheduleName(AUTO_GIVEN_SCHEDULE_NAME)","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"geoffong11"},"content":"                .withLastModifiedDateTime(DEFAULT_TEST_TIME)","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"geoffong11"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"        ScheduleCommand expectedCommand \u003d new ScheduleCommand(targetIndex,","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"geoffong11"},"content":"                descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"geoffong11"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"geoffong11"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"geoffong11"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"geoffong11"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"geoffong11"},"content":"        // valid schedule followed by invalid schedule","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"geoffong11"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"geoffong11"},"content":"        String userInput \u003d targetIndex.getOneBased() + SCHEDULE_DESC_BOB + INVALID_SCHEDULE_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCHEDULE));","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"geoffong11"},"content":"        // invalid schedule followed by valid schedule","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_SCHEDULE_DESC + SCHEDULE_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCHEDULE));","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"geoffong11"},"content":"        // multiple valid schedules repeated","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + SCHEDULE_DESC_BOB + SCHEDULE_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCHEDULE));","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"geoffong11"},"content":"        // multiple invalid schedules","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_SCHEDULE_DESC + INVALID_SCHEDULE_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCHEDULE));","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"geoffong11"},"content":"        // valid schedule name followed by invalid schedule name","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + SCHEDULE_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"geoffong11"},"content":"                + SCHEDULE_NAME_DESC_AMY + INVALID_SCHEDULE_NAME_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCHEDULE_NAME));","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"geoffong11"},"content":"        // invalid schedule name followed by valid schedule name","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_SCHEDULE_DESC + SCHEDULE_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCHEDULE));","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"geoffong11"},"content":"        // multiple valid schedule name repeated","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + SCHEDULE_DESC_AMY + SCHEDULE_NAME_DESC_BOB + SCHEDULE_NAME_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCHEDULE_NAME));","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"geoffong11"},"content":"        // multiple invalid schedule names","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"geoffong11"},"content":"        userInput \u003d targetIndex.getOneBased() + SCHEDULE_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"geoffong11"},"content":"                + INVALID_SCHEDULE_NAME_DESC + INVALID_SCHEDULE_NAME_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"geoffong11"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"geoffong11"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCHEDULE_NAME));","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"xavierpok":3,"imkwokyong":4,"geoffong11":160}},{"path":"src/test/java/connexion/logic/parser/UnMarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.UnMarkCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"public class UnMarkCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    private UnMarkCommandParser parser \u003d new UnMarkCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnMarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"        assertParseSuccess(parser, \"1\", new UnMarkCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnMarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"imkwokyong":6,"Angelyxx":22}},{"path":"src/test/java/connexion/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCompany(VALID_COMPANY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCompany(VALID_COMPANY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"imkwokyong":9,"-":97,"geoffong11":2}},{"path":"src/test/java/connexion/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"connexion/book/file/path\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        Path path \u003d Paths.get(\"connexion/book/file/path\");","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"xavierpok"},"content":"        String[] keywords \u003d ALICE.getName().getValue().split(\"\\\\s+\");","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"xavierpok":1,"imkwokyong":10,"-":121}},{"path":"src/test/java/connexion/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"imkwokyong":2,"-":19}},{"path":"src/test/java/connexion/model/person/CompanyContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"public class CompanyContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"        CompanyContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"                new CompanyContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"        CompanyContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"                new CompanyContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"        CompanyContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"                new CompanyContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"    public void test_companyContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"        // One keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"                new CompanyContainsKeywordsPredicate(Collections.singletonList(\"Meta\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCompany(\"Meta Google\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(\"Meta\", \"Google\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCompany(\"Meta Google\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(\"Meta\", \"Tiktok\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCompany(\"Google Tiktok\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(\"gOOglE\", \"mETa\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCompany(\"Google Meta\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"    public void test_companyDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d new CompanyContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCompany(\"Google\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(\"Google\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCompany(\"Meta Tiktok\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"        // Keywords match name, phone, email and job, but does not match company","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(Arrays","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"                .asList(\"Alice\", \"12345\", \"alice@email.com\", \"Investment\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"                .withEmail(\"alice@email.com\").withCompany(\"Jane\u0027s Street\").withJob(\"Investment Analyst\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d new CompanyContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"        String expected \u003d CompanyContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"imkwokyong":90}},{"path":"src/test/java/connexion/model/person/CompanyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"public class CompanyTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Company(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    public void constructor_invalidCompany_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"        String invalidCompany \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Company(invalidCompany));","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    public void isValidCompany() {","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"        // null company","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"        assertThrows(NullPointerException.class, () -\u003e Company.isValidCompany(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        // invalid companies","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        assertFalse(Company.isValidCompany(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"        assertFalse(Company.isValidCompany(\" \")); // spaces only","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"        // valid companies","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"        assertTrue(Company.isValidCompany(\"Jane\u0027s Street\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"        assertTrue(Company.isValidCompany(\"-\")); // one character","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"        assertTrue(Company.isValidCompany(\"Edward Hopper House \u0026 Study Center\")); // long company","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"        Company company \u003d new Company(\"Valid Company\");","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"        assertTrue(company.equals(new Company(\"Valid Company\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        assertTrue(company.equals(company));","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"        assertFalse(company.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"        assertFalse(company.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"        assertFalse(company.equals(new Company(\"Other Valid Company\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"    void getDetailString_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"        Company company \u003d new Company(\"Valid Company\");","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(company.getDetailString(), \"Company: Valid Company\");","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(company.getDetailString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"    void getValue_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"        Company company \u003d new Company(\"Valid Company\");","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"        assertEquals(company.getValue(), \"Valid Company\");","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(company.getValue(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"    void getListString_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"        Company company \u003d new Company(\"Valid Company\");","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"        assertEquals(company.getListString(), \"Valid Company\");","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(company.getListString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"xavierpok":22,"imkwokyong":2,"Angelyxx":1,"geoffong11":54}},{"path":"src/test/java/connexion/model/person/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"                new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"        // One keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        EmailContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"a@b.com\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"a@b.com\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"a@b.com\", \"b@c.com\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"a@b.com\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"a@B.Com\", \"b@C.cOm\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"a@b.com\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"a@b.com\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"a@b.com\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"b@c.com\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"        // Keywords match name, phone, company and job, but does not match email","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"                .asList(\"Alice\", \"12345\", \"Jane\", \"Investment\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"                .withEmail(\"alice@email.com\").withCompany(\"Jane\u0027s Street\").withJob(\"Investment Analyst\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"        String expected \u003d EmailContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"imkwokyong":86}},{"path":"src/test/java/connexion/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"xavierpok"},"content":"    void getValue_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"xavierpok"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"        assertEquals(email.getValue(), \"valid@email\");","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(email.getValue(), \"nonsense@nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"    void getDetailString_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(email.getDetailString(), \"Email: valid@email\");","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(email.getDetailString(), \"nonsense@nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"xavierpok":14,"imkwokyong":2,"Angelyxx":1,"-":86}},{"path":"src/test/java/connexion/model/person/IsMarkedPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"public class IsMarkedPredicateTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"        IsMarkedPredicate firstPredicate \u003d new IsMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"        IsMarkedPredicate secondPredicate \u003d new IsMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"    public void test_personIsMarked_returnsTrue() {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        IsMarkedPredicate predicate \u003d new IsMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMark(true).build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"    public void test_personNotMarked_returnsFalse() {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        IsMarkedPredicate predicate \u003d new IsMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMark(false).build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"imkwokyong":41}},{"path":"src/test/java/connexion/model/person/JobContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"public class JobContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"        JobContainsKeywordsPredicate firstPredicate \u003d new JobContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"        JobContainsKeywordsPredicate secondPredicate \u003d new JobContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"        JobContainsKeywordsPredicate firstPredicateCopy \u003d new JobContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        // different job -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"    public void test_jobContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"        // One keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"        JobContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"                new JobContainsKeywordsPredicate(Collections.singletonList(\"Engineer\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJob(\"Software Engineer\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new JobContainsKeywordsPredicate(Arrays.asList(\"Software\", \"Engineer\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJob(\"Software Engineer\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new JobContainsKeywordsPredicate(Arrays.asList(\"Data\", \"Software\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJob(\"Data Engineer\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new JobContainsKeywordsPredicate(Arrays.asList(\"dATa\", \"EnginEER\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJob(\"Data Engineer\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"    public void test_jobDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"        JobContainsKeywordsPredicate predicate \u003d new JobContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withJob(\"Engineer\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new JobContainsKeywordsPredicate(Arrays.asList(\"Analyst\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withJob(\"Data Engineer\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"        // Keywords match name, phone, email and company, but does not match job","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new JobContainsKeywordsPredicate(Arrays","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"                .asList(\"Alice\", \"12345\", \"alice@email.com\", \"Street\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"                .withEmail(\"alice@email.com\").withCompany(\"Jane\u0027s Street\").withJob(\"Investment Analyst\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"        JobContainsKeywordsPredicate predicate \u003d new JobContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"        String expected \u003d JobContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"imkwokyong":87}},{"path":"src/test/java/connexion/model/person/JobTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"public class JobTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Job(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    public void constructor_invalidJob_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"        String invalidJob \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Job(invalidJob));","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    public void isValidJob() {","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"        // null job","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"        assertThrows(NullPointerException.class, () -\u003e Job.isValidJob(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        // invalid jobs","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        assertFalse(Job.isValidJob(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"        assertFalse(Job.isValidJob(\" \")); // spaces only","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"        // valid jobs","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"        assertTrue(Job.isValidJob(\"Software Engineer\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"        assertTrue(Job.isValidJob(\"-\")); // one character","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"        assertTrue(Job.isValidJob(\"Optimizing Machine Learning Workflow for Internet Economy Executive\")); // long job","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"        Job job \u003d new Job(\"Valid Job\");","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"        assertTrue(job.equals(new Job(\"Valid Job\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        assertTrue(job.equals(job));","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"        assertFalse(job.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"        assertFalse(job.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"        assertFalse(job.equals(new Job(\"Other Valid Job\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"    void getDetailString_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"        Job job \u003d new Job(\"Valid Job\");","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(job.getDetailString(), \"Job: Valid Job\");","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(job.getDetailString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"    void getValue_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"        Job job \u003d new Job(\"Valid Job\");","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"        assertEquals(job.getValue(), \"Valid Job\");","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(job.getValue(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"    void getListString_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"        Job job \u003d new Job(\"Valid Job\");","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"        assertEquals(job.getListString(), \"Valid Job\");","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(job.getListString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"xavierpok":22,"imkwokyong":2,"Angelyxx":1,"geoffong11":54}},{"path":"src/test/java/connexion/model/person/LastModifiedDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"import static connexion.testutil.ClockUtil.OTHER_TEST_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"class LastModifiedDateTimeTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LastModifiedDateTime(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"    public void factory_invalid_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"        String invalidLastModifiedDateTime \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e LastModifiedDateTime.fromString(\"\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"    public void factory_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"        assertThrows(NullPointerException.class, () -\u003e LastModifiedDateTime.fromString(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"    public void isValidLastModifiedDateTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"        // null job","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"                LastModifiedDateTime.isValidLastModifiedDateTime(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"        // invalid LastModifiedDateTimes","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"        assertFalse(LastModifiedDateTime.isValidLastModifiedDateTime(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"        assertFalse(LastModifiedDateTime.isValidLastModifiedDateTime(\"1 abc 1999, 10:09:00\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"        // nonsensical field","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"        assertFalse(LastModifiedDateTime.isValidLastModifiedDateTime(\"40 Jan 1999, 10:09:00\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"        // invalid field","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"        assertFalse(LastModifiedDateTime.isValidLastModifiedDateTime(\"1 Jan 1999, 24:09:00\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"        // another invalid field","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"        assertFalse(LastModifiedDateTime.isValidLastModifiedDateTime(","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_TEST_TIME.format(","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"                        DateTimeFormatter.ISO_LOCAL_DATE_TIME)));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"        // Valid input, but in wrong format","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"        assertFalse(LastModifiedDateTime.isValidLastModifiedDateTime(\"1 Jan, 1999 10:09:00\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"        // valid LastModifiedDateTimes","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"        assertTrue(LastModifiedDateTime.isValidLastModifiedDateTime(\"1 Jan 1999, 10:09:00\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"        assertTrue(LastModifiedDateTime.isValidLastModifiedDateTime(","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_TEST_TIME.format(","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"                        LastModifiedDateTime.LASTMODIFIED_FORMATTER)));","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"        LastModifiedDateTime lastModifiedDateTime \u003d new LastModifiedDateTime(LocalDateTime.MAX);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"        assertTrue(lastModifiedDateTime.equals(new LastModifiedDateTime(LocalDateTime.MAX)));","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"        assertTrue(lastModifiedDateTime.equals(lastModifiedDateTime));","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"        assertFalse(lastModifiedDateTime.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"        assertFalse(lastModifiedDateTime.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"        assertFalse(lastModifiedDateTime.equals(new LastModifiedDateTime(LocalDateTime.MIN)));","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"    public void equals_extraPrecision_true() {","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"        // Test for equality on extra precision, which we should drop. Precision is to seconds only.","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"        LastModifiedDateTime lastModifiedDateTime \u003d new LastModifiedDateTime(DEFAULT_TEST_TIME);","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"        LastModifiedDateTime testDateTime \u003d new LastModifiedDateTime(DEFAULT_TEST_TIME.minusNanos(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"xavierpok"},"content":"        assertEquals(lastModifiedDateTime, testDateTime);","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"xavierpok"},"content":"        // But the raw LocalDateTimes should be non-equal","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(DEFAULT_TEST_TIME, DEFAULT_TEST_TIME.minusNanos(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(DEFAULT_TEST_TIME).toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_TEST_TIME.format(LastModifiedDateTime.LASTMODIFIED_FORMATTER));","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(LocalDateTime.MAX).toString(),","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"                LocalDateTime.MAX.format(LastModifiedDateTime.LASTMODIFIED_FORMATTER));","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(LocalDateTime.MIN).toString(),","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"                LocalDateTime.MIN.format(LastModifiedDateTime.LASTMODIFIED_FORMATTER));","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"xavierpok"},"content":"    void getDetailString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(DEFAULT_TEST_TIME).getDetailString(),","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"Angelyxx"},"content":"                \"lastModified: \" + DEFAULT_TEST_TIME.format(LastModifiedDateTime.LASTMODIFIED_FORMATTER));","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(LocalDateTime.MAX).getDetailString(),","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"Angelyxx"},"content":"                \"lastModified: \" + LocalDateTime.MAX.format(LastModifiedDateTime.LASTMODIFIED_FORMATTER));","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(LocalDateTime.MIN).getDetailString(),","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"Angelyxx"},"content":"                \"lastModified: \" + LocalDateTime.MIN.format(LastModifiedDateTime.LASTMODIFIED_FORMATTER));","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"xavierpok"},"content":"    void getValue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(DEFAULT_TEST_TIME).getValue(),","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_TEST_TIME.truncatedTo(ChronoUnit.SECONDS));","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(new LastModifiedDateTime(DEFAULT_TEST_TIME).getValue(),","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"xavierpok"},"content":"                DEFAULT_TEST_TIME);","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"xavierpok"},"content":"        // Note that LastModifiedDateTime truncates to seconds, so higher precision should generally not be equal","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"xavierpok"},"content":"        // Doesn\u0027t apply to cases where is zero already, naturally!","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(LocalDateTime.MAX).getValue(),","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"xavierpok"},"content":"                LocalDateTime.MAX.truncatedTo(ChronoUnit.SECONDS));","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(new LastModifiedDateTime(LocalDateTime.MAX).getValue(),","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"xavierpok"},"content":"                LocalDateTime.MAX);","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(OTHER_TEST_TIME).getValue(),","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"xavierpok"},"content":"               OTHER_TEST_TIME.truncatedTo(ChronoUnit.SECONDS));","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(new LastModifiedDateTime(OTHER_TEST_TIME).getValue(),","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"xavierpok"},"content":"                OTHER_TEST_TIME);","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"xavierpok"},"content":"        // Special case where higher precision past seconds is already zero","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"xavierpok"},"content":"        // So truncating doesn\u0027t do anything","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(LocalDateTime.MIN).getValue(),","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"xavierpok"},"content":"                LocalDateTime.MIN.truncatedTo(ChronoUnit.SECONDS));","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"xavierpok"},"content":"        assertEquals(new LastModifiedDateTime(LocalDateTime.MIN).getValue(),","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"xavierpok"},"content":"                LocalDateTime.MIN);","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"xavierpok":133,"imkwokyong":3,"Angelyxx":3}},{"path":"src/test/java/connexion/model/person/MarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"public class MarkTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Mark(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"        Mark mark \u003d new Mark(true);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"        assertTrue(mark.equals(new Mark(true)));","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"        assertTrue(mark.equals(mark));","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(mark.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(mark.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(mark.equals(new Mark(false)));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"    public void toString_markedStatus() {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"        Mark markedMark \u003d new Mark(true);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(\"\\u2605\", markedMark.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"    public void toString_unmarkedStatus() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"        Mark unmarkedMark \u003d new Mark(false);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(\"\\u2606\", unmarkedMark.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"    void getDetailString_markedStatus() {","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"        Mark markedMark \u003d new Mark(true);","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"        assertEquals(\"\\u2605\", markedMark.getDetailString());","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"    void getDetailString_unmarkedStatus() {","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"        Mark unmarkedMark \u003d new Mark(false);","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"        assertEquals(\"\\u2606\", unmarkedMark.getDetailString());","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"    void getValue_markedStatus() {","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"        Mark markedMark \u003d new Mark(true);","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"        assertEquals(true, markedMark.getValue());","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"    void getValue_unmarkedStatus() {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"        Mark unmarkedMark \u003d new Mark(false);","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"        assertEquals(false, unmarkedMark.getValue());","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"    public void isValidMark() {","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"                Mark.isValidMark(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Angelyxx"},"content":"        // invalid Mark","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(Mark.isValidMark(\"\")); // empty string","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(LastModifiedDateTime.isValidLastModifiedDateTime(\"a star!\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Angelyxx"},"content":"        // valid Mark","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Angelyxx"},"content":"        assertTrue(Mark.isValidMark(\"★\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Angelyxx"},"content":"        assertTrue(Mark.isValidMark(\"☆\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"    void getListString_markedStatus() {","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"        Mark markedMark \u003d new Mark(true);","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"xavierpok"},"content":"        assertEquals(\"\\u2605\", markedMark.getListString());","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"xavierpok"},"content":"    void getListString_unmarkedStatus() {","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"xavierpok"},"content":"        Mark unmarkedMark \u003d new Mark(false);","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"xavierpok"},"content":"        assertEquals(\"\\u2606\", unmarkedMark.getListString());","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"xavierpok":33,"imkwokyong":2,"Angelyxx":59}},{"path":"src/test/java/connexion/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"        // Keywords match phone, email, company and job, but does not match name","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"                .asList(\"12345\", \"alice@email.com\", \"Street\", \"Investment\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"                .withEmail(\"alice@email.com\").withCompany(\"Jane\u0027s Street\").withJob(\"Investment Analyst\").build()));","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"imkwokyong":5,"-":80,"geoffong11":1}},{"path":"src/test/java/connexion/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"    void getDetailString_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"        assertEquals(name.getDetailString(), \"Valid Name\");","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(name.getDetailString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"    void getValue_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"        assertEquals(name.getValue(), \"Valid Name\");","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(name.getValue(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"    void getListString_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"        assertEquals(name.getListString(), \"Valid Name\");","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(name.getListString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"xavierpok":23,"imkwokyong":2,"-":58}},{"path":"src/test/java/connexion/model/person/NotMarkedPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"public class NotMarkedPredicateTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"        NotMarkedPredicate firstPredicate \u003d new NotMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"        NotMarkedPredicate secondPredicate \u003d new NotMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"    public void test_personNotMarked_returnsTrue() {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        NotMarkedPredicate predicate \u003d new NotMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMark(false).build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"    public void test_personIsMarked_returnsFalse() {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        NotMarkedPredicate predicate \u003d new NotMarkedPredicate();","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMark(true).build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"imkwokyong":41}},{"path":"src/test/java/connexion/model/person/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"public class NoteTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"    public void constructor_invalidNote_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        String invalidNote \u003d \"\\u2063\";","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Note(invalidNote));","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"    public void constructor_invalidNoteLength_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"        String noteWithInvalidLength \u003d \"One morning, when Gregor Samsa woke from troubled dreams, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"                + \"he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"                + \"and if he lifted his head a little he could see his brown belly, slightly domed and divided by \"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"                + \"arches into stiff sections. The bedding was hardly able to cover it and seemed ready to slide off \"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"                + \"any moment. His many legs, pitifully thin compared with the size of the rest of him, waved about \"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"                + \"helplessly as he looked. \\\"What\u0027s happened to me?\\\" he thought. It wasn\u0027t a dream. His room, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"                + \"a proper human room although a little too small, lay peacefully between its four familiar walls. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"                + \"A collection of textile samples lay spread out on the table - Samsa was a travelling salesman - and \"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"                + \"above it there hung a picture that he had recently cut out of an illustrated magazine and housed in \"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"                + \"a nice, gilded frame. It showed a lady fitted out with a fur hat and fur boa who sat upright, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"                + \"raising a heavy fur muff that covered the whole of her lower arm towards ta\";","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Note(noteWithInvalidLength));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"    public void isValidNote() {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"        // null note","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Note.isValidNote(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"        // invalid note","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(Note.isValidNote(\"\\u2063\")); // invisible characters","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        // valid note","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(Note.isValidNote(\"ABC abc 123\")); // alphanumeric characters and whitespace","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(Note.isValidNote(\"!@#$%^\u0026*().,\u0027;/[]|\\\\`~\")); // punctuations and brackets","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(Note.isValidNote(\"\")); // empty note","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"    public void hasValidLength() {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"        // Note with 1000 characters, to test boundary","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"        String noteWithValidLength \u003d \"One morning, when Gregor Samsa woke from troubled dreams, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"                + \"he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"                + \"and if he lifted his head a little he could see his brown belly, slightly domed and divided by \"","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"                + \"arches into stiff sections. The bedding was hardly able to cover it and seemed ready to slide off \"","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"                + \"any moment. His many legs, pitifully thin compared with the size of the rest of him, waved about \"","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"                + \"helplessly as he looked. \\\"What\u0027s happened to me?\\\" he thought. It wasn\u0027t a dream. His room, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"                + \"a proper human room although a little too small, lay peacefully between its four familiar walls. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"                + \"A collection of textile samples lay spread out on the table - Samsa was a travelling salesman - and \"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"                + \"above it there hung a picture that he had recently cut out of an illustrated magazine and housed in \"","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"                + \"a nice, gilded frame. It showed a lady fitted out with a fur hat and fur boa who sat upright, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"                + \"raising a heavy fur muff that covered the whole of her lower arm towards t\";","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"        // null note","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Note.hasValidLength(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"        // note with invalid length","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(Note.hasValidLength(noteWithValidLength + \"a\")); // 1001 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"        // note with valid length","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(Note.hasValidLength(noteWithValidLength)); // 1000 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(Note.hasValidLength(\"\")); // empty note","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"        Note note \u003d new Note(\"Hi\");","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(note.equals(new Note(\"Hi\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(note.equals(note));","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(note.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(note.equals(5.0f));","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"imkwokyong"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(note.equals(new Note(\"Bye\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"imkwokyong"},"content":"    void getDetailString_equals_input() {","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"imkwokyong"},"content":"        Note note \u003d new Note(\"Hi\");","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(note.getDetailString(), \"Hi\");","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"imkwokyong"},"content":"        assertNotEquals(note.getDetailString(), \"Bye\"); // to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"imkwokyong"},"content":"    void getValue_equals_input() {","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"imkwokyong"},"content":"        Note note \u003d new Note(\"Hi\");","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(note.getValue(), \"Hi\");","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"imkwokyong"},"content":"        assertNotEquals(note.getValue(), \"Bye\"); // to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"imkwokyong":113}},{"path":"src/test/java/connexion/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_LAST_MODIFIED_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_SCHEDULE_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_SCHEDULE_NAME_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"                .withCompany(VALID_COMPANY_BOB).withJob(VALID_JOB_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"                .withTags(VALID_TAG_HUSBAND).withLastModifiedDateTime(VALID_LAST_MODIFIED_BOB).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withCompany(VALID_COMPANY_BOB).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"geoffong11"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"        // different job -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withJob(VALID_JOB_BOB).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"xavierpok"},"content":"        // different last modified -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLastModifiedDateTime(LocalDateTime.MIN).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"xavierpok"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"imkwokyong"},"content":"        // different markStatus -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"imkwokyong"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withMark(true).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"imkwokyong"},"content":"        // different schedule -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"imkwokyong"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withSchedule(VALID_SCHEDULE_BOB).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"imkwokyong"},"content":"        // different scheduleName -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"imkwokyong"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withScheduleName(VALID_SCHEDULE_NAME_BOB).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"imkwokyong"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"imkwokyong"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNote(VALID_NOTE_AMY).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"geoffong11"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", company\u003d\" + ALICE.getCompany() + \", job\u003d\" + ALICE.getJob()","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"geoffong11"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \", last-modified\u003d\" + ALICE.getLastModifiedDateTime()","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"geoffong11"},"content":"                + \", schedule\u003d\" + ALICE.getSchedule()","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"imkwokyong"},"content":"                + \", scheduleName\u003d\" + ALICE.getScheduleName()","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"imkwokyong"},"content":"                + \", note\u003d\" + ALICE.getNote() + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"xavierpok":9,"imkwokyong":33,"-":85,"geoffong11":10}},{"path":"src/test/java/connexion/model/person/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"                new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"                new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"                new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"        // One keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"1234\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"1234\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"1234\", \"4321\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"1234\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"1234\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"1234\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"4321\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"        // Keywords match name, email, company and job, but does not match phone","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"                .asList(\"Alice\", \"alice@email.com\", \"Street\", \"Investment\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"                .withEmail(\"alice@email.com\").withCompany(\"Jane\u0027s Street\").withJob(\"Investment Analyst\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"        String expected \u003d PhoneContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"imkwokyong":82}},{"path":"src/test/java/connexion/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"    void getDetailString_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"        assertEquals(phone.getDetailString(), \"Phone: 999\");","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(phone.getDetailString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"    void getValue_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"        assertEquals(phone.getValue(), \"999\");","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(phone.getValue(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"xavierpok":15,"imkwokyong":2,"Angelyxx":1,"-":58}},{"path":"src/test/java/connexion/model/person/ScheduleNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"public class ScheduleNameTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ScheduleName(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    public void constructor_invalidScheduleName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"        String invalidScheduleName \u003d \"\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ScheduleName(invalidScheduleName));","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    public void isValidScheduleName() {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"        // null name","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"        assertThrows(NullPointerException.class, () -\u003e ScheduleName.isValidScheduleName(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        // invalid name","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        assertFalse(ScheduleName.isValidScheduleName(\"\")); // empty string","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"        assertFalse(ScheduleName.isValidScheduleName(\" \")); // spaces only","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"        assertFalse(ScheduleName.isValidScheduleName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"        assertFalse(ScheduleName.isValidScheduleName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"        // valid name","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"        assertTrue(ScheduleName.isValidScheduleName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"        assertTrue(ScheduleName.isValidScheduleName(\"12345\")); // numbers only","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"        assertTrue(ScheduleName.isValidScheduleName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"        assertTrue(ScheduleName.isValidScheduleName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"        assertTrue(ScheduleName.isValidScheduleName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"        ScheduleName name \u003d new ScheduleName(\"Valid ScheduleName\");","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"        assertTrue(name.equals(new ScheduleName(\"Valid ScheduleName\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"        assertFalse(name.equals(new ScheduleName(\"Other Valid ScheduleName\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"    void getDetailString_equals_input() {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"        ScheduleName name \u003d new ScheduleName(\"Valid ScheduleName\");","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"        assertEquals(name.getDetailString(), \"Valid ScheduleName\");","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"        assertNotEquals(name.getDetailString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"    void getValue_equals_input() {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"        ScheduleName name \u003d new ScheduleName(\"Valid ScheduleName\");","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"        assertEquals(name.getValue(), \"Valid ScheduleName\");","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"        assertNotEquals(name.getValue(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"    void getListString_equals_input() {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"        ScheduleName name \u003d new ScheduleName(\"Valid ScheduleName\");","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"        assertEquals(name.getListString(), \"Valid ScheduleName\");","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"        assertNotEquals(name.getListString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"geoffong11":84}},{"path":"src/test/java/connexion/model/person/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"public class ScheduleTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Schedule(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    public void constructor_invalidSchedule_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"        String invalidSchedule \u003d \"\";","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Schedule(invalidSchedule));","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"    public void isValidScheduleTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        // null schedule","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        assertThrows(NullPointerException.class, () -\u003e Schedule.isValidScheduleTime(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"        // invalid schedule","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"\")); // empty string","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"        assertFalse(Schedule.isValidScheduleTime(\" \")); // spaces only","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"2023-40-10-10-10\")); // 40 for month field","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"2023-10-40-10-10\")); // 40 for day field","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"2023-10-10-100-10\")); // 100 for hour field","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"2023-10-10-10-100\")); // 100 for minute field","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"2023-10-10-10-10-10\")); // excess fields","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"2023-09-31-10-10-10\")); // September 2023 had only 30 days","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"2023-02-29-10-10-10\")); // Feb 2023 had 28 days","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"2020-02-30-10-10-10\")); // Feb 2020 was a leap year -- 29 days","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"        // valid schedule","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        assertTrue(Schedule.isValidScheduleTime(\"2023-05-06-12-45\")); // YYYY-MM-DD-HH-MM format only","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"2023-02-28-10-10-10\")); // Feb 2023 had 28 days","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"        assertFalse(Schedule.isValidScheduleTime(\"2020-02-29-10-10-10\")); // Feb 2020 was a leap year -- 29 days","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        Schedule schedule \u003d new Schedule(\"2023-12-12-12-12\");","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        assertTrue(schedule.equals(new Schedule(\"2023-12-12-12-12\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"        assertTrue(schedule.equals(schedule));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"        assertFalse(schedule.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"        assertFalse(schedule.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"        assertFalse(schedule.equals(new Schedule(\"2023-11-11-11-12\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"    void getDetailString_equals_input() {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"        Schedule schedule \u003d new Schedule(\"2023-12-12-12-12\");","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"        assertEquals(schedule.getDetailString(), \"12 Dec 2023, 12:12:00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"        assertNotEquals(schedule.getDetailString(), \"2023-12-12-12-12\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"    void getValue_equals_input() {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"        DateTimeFormatter scheduleFormatter \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\");","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"        Schedule schedule \u003d new Schedule(\"2023-12-12-12-12\");","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"        assertEquals(schedule.getValue(), LocalDateTime.parse(\"2023-12-12-12-12\", scheduleFormatter));","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"        assertNotEquals(schedule.getValue(), LocalDateTime.parse(\"2023-11-11-11-10\",","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"                scheduleFormatter)); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"    void getListString_equals_input() {","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"        Schedule schedule \u003d new Schedule(\"2023-12-12-12-12\");","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"        assertEquals(schedule.getListString(), \"12 Dec 2023, 12:12:00\");","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"        assertNotEquals(schedule.getListString(), \"2023-12-12-12-12\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"xavierpok":11,"geoffong11":86}},{"path":"src/test/java/connexion/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCompany(VALID_COMPANY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCompany(VALID_COMPANY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"imkwokyong":9,"-":164,"geoffong11":2}},{"path":"src/test/java/connexion/model/tag/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.PersonBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"        // One keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"        TagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"best\", \"friend\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"FriEND\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\", \"best\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"imkwokyong"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"imkwokyong"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friend\", \"lover\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"        // No tags","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friend\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friend\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"rival\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"imkwokyong"},"content":"        // Keywords match name, phone, email and company and job, but not tags","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"imkwokyong"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"imkwokyong"},"content":"                .asList(\"Alice\", \"12345\", \"alice@email.com\", \"Street\", \"Investment\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"imkwokyong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"                .withEmail(\"alice@email.com\").withCompany(\"Jane\u0027s Street\").withJob(\"Investment Analyst\")","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"                .withTags(\"friend\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"imkwokyong"},"content":"        String expected \u003d TagContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"imkwokyong":89}},{"path":"src/test/java/connexion/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.model.tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"    void getDetailString_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"        Tag tag \u003d new Tag(\"valid\");","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"        assertEquals(tag.getDetailString(), \"valid\");","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(tag.getDetailString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"    void getValue_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"        Tag tag \u003d new Tag(\"valid\");","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"        assertEquals(tag.getValue(), \"valid\");","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(tag.getValue(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"    void getListString_equals_input() {","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"        Tag tag \u003d new Tag(\"valid\");","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"        assertEquals(tag.getListString(), \"valid\");","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"        assertNotEquals(tag.getListString(), \"Nonsense\"); //to show it\u0027s actually matching the string","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"    void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"        Tag tag \u003d new Tag(\"valid\");","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"        assertTrue(tag.equals(new Tag(\"valid\")));","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"        assertTrue(tag.equals(tag));","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"        assertFalse(tag.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"        assertFalse(tag.equals(5.0f));","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"        assertFalse(tag.equals(new Tag(\"other\")));","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"xavierpok":44,"imkwokyong":2,"-":24}},{"path":"src/test/java/connexion/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"    private static final String INVALID_COMPANY \u003d \" \";","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"    private static final String INVALID_JOB \u003d \" \";","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"    private static final String INVALID_SCHEDULE \u003d \"theheheh\";","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"    private static final String INVALID_SCHEDULE_NAME \u003d \" \";","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"    private static final String INVALID_NOTE \u003d \"\\u2063\";","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"    private static final String INVALID_NOTE_CHARACTER_LIMIT \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"            \"One morning, when Gregor Samsa woke from troubled dreams, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"            + \"he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"            + \"and if he lifted his head a little he could see his brown belly, slightly domed and divided by \"","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"            + \"arches into stiff sections. The bedding was hardly able to cover it and seemed ready to slide off \"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"            + \"any moment. His many legs, pitifully thin compared with the size of the rest of him, waved about \"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"            + \"helplessly as he looked. \\\"What\u0027s happened to me?\\\" he thought. It wasn\u0027t a dream. His room, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"            + \"a proper human room although a little too small, lay peacefully between its four familiar walls. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"            + \"A collection of textile samples lay spread out on the table - Samsa was a travelling salesman - and \"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"            + \"above it there hung a picture that he had recently cut out of an illustrated magazine and housed in \"","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"            + \"a nice, gilded frame. It showed a lady fitted out with a fur hat and fur boa who sat upright, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"            + \"raising a heavy fur muff that covered the whole of her lower arm towards ta\"; // 1001 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"    private static final String INVALID_LAST_MODIFIED_DATE_TIME \u003d \"Nov 40, 2000 13:00:10 AM\";","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"    private static final String VALID_COMPANY \u003d BENSON.getCompany().toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"    private static final String VALID_JOB \u003d BENSON.getJob().toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"    private static final String VALID_SCHEDULE \u003d BENSON.getSchedule().get().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"    private static final String VALID_SCHEDULE_NAME \u003d BENSON.getScheduleName().get().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"    private static final String VALID_MARK_STATUS \u003d BENSON.getMarkStatus().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"imkwokyong"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"    private static final String VALID_LAST_MODIFIED_DATE_TIME \u003d BENSON.getLastModifiedDateTime().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS,","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"                        VALID_MARK_STATUS, VALID_SCHEDULE, VALID_SCHEDULE_NAME,","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"                        VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"Angelyxx"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"                VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"Angelyxx"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Angelyxx"},"content":"                        VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS,","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"imkwokyong"},"content":"                        VALID_MARK_STATUS, VALID_SCHEDULE, VALID_SCHEDULE_NAME,","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"imkwokyong"},"content":"                        VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"geoffong11"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"Angelyxx"},"content":"                VALID_NAME, null, VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"imkwokyong"},"content":"                VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"xavierpok"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"geoffong11"},"content":"                        VALID_COMPANY, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"imkwokyong"},"content":"                        VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"geoffong11"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"xavierpok"},"content":"                VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"geoffong11"},"content":"                VALID_COMPANY, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"imkwokyong"},"content":"                VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"geoffong11"},"content":"    public void toModelType_invalidCompany_throwsIllegalValueException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"xavierpok"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"Angelyxx"},"content":"                        VALID_EMAIL, INVALID_COMPANY, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"imkwokyong"},"content":"                        VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d Company.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"geoffong11"},"content":"    public void toModelType_nullCompany_throwsIllegalValueException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"geoffong11"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"Angelyxx"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"imkwokyong"},"content":"                VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName());","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"geoffong11"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":149,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":151,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"geoffong11"},"content":"    public void toModelType_invalidJob_throwsIllegalValueException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"geoffong11"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"xavierpok"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"Angelyxx"},"content":"                        VALID_EMAIL, VALID_COMPANY, INVALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"imkwokyong"},"content":"                        VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d Job.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"geoffong11"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":160,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":161,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":162,"author":{"gitId":"geoffong11"},"content":"    public void toModelType_nullJob_throwsIllegalValueException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":163,"author":{"gitId":"geoffong11"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-11"},{"lineNumber":164,"author":{"gitId":"Angelyxx"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COMPANY, null, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"imkwokyong"},"content":"                VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Job.class.getSimpleName());","lastModifiedDate":"2023-10-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"geoffong11"},"content":"    public void toModelType_nullSchedule_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"geoffong11"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"geoffong11"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"imkwokyong"},"content":"                null, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Schedule.class.getSimpleName());","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"geoffong11"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"geoffong11"},"content":"    public void toModelType_invalidSchedule_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"geoffong11"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"geoffong11"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"geoffong11"},"content":"                        VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"imkwokyong"},"content":"                        INVALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d Schedule.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"geoffong11"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"geoffong11"},"content":"    public void toModelType_nullScheduleName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"geoffong11"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"geoffong11"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"imkwokyong"},"content":"                VALID_SCHEDULE, null, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":194,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ScheduleName.class.getSimpleName());","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"geoffong11"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"geoffong11"},"content":"    public void toModelType_invalidScheduleName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"geoffong11"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"geoffong11"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"geoffong11"},"content":"                        VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"imkwokyong"},"content":"                        VALID_SCHEDULE, INVALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":204,"author":{"gitId":"geoffong11"},"content":"        String expectedMessage \u003d ScheduleName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"geoffong11"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":213,"author":{"gitId":"xavierpok"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"Angelyxx"},"content":"                        VALID_EMAIL, VALID_COMPANY, VALID_JOB, invalidTags, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"imkwokyong"},"content":"                        VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":219,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"xavierpok"},"content":"    public void toModelType_nullLastModifiedDateTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":221,"author":{"gitId":"xavierpok"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"xavierpok"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"geoffong11"},"content":"                VALID_COMPANY, VALID_JOB, VALID_TAGS,","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"imkwokyong"},"content":"                VALID_MARK_STATUS, VALID_SCHEDULE, VALID_SCHEDULE_NAME, null, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":225,"author":{"gitId":"xavierpok"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-13"},{"lineNumber":226,"author":{"gitId":"xavierpok"},"content":"                MISSING_FIELD_MESSAGE_FORMAT, LastModifiedDateTime.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"xavierpok"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":229,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":230,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"xavierpok"},"content":"    public void toModelType_invalidLastModifiedDateTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"xavierpok"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"xavierpok"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"Angelyxx"},"content":"                        VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS, VALID_MARK_STATUS,","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"imkwokyong"},"content":"                        VALID_SCHEDULE, VALID_SCHEDULE_NAME, INVALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":236,"author":{"gitId":"xavierpok"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":238,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"xavierpok"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"xavierpok"},"content":"    public void toModelType_nullMark_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"xavierpok"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"xavierpok"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"xavierpok"},"content":"                        VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS, null,","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"imkwokyong"},"content":"                        VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":245,"author":{"gitId":"xavierpok"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"imkwokyong"},"content":"    public void toModelType_markedStatus_returnsMarkedPerson() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":250,"author":{"gitId":"Angelyxx"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"geoffong11"},"content":"                VALID_COMPANY, VALID_JOB, VALID_TAGS, \"\\u2605\",","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"imkwokyong"},"content":"                VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":253,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":254,"author":{"gitId":"Angelyxx"},"content":"        Person modelPerson \u003d person.toModelType();","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(modelPerson.getMarkStatus().equals(true));","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"Angelyxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"Angelyxx"},"content":"    public void toModelType_unmarkedStatus_returnsUnmarkedPerson() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"Angelyxx"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"geoffong11"},"content":"                VALID_COMPANY, VALID_JOB, VALID_TAGS, \"\\u2606\",","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"imkwokyong"},"content":"                VALID_SCHEDULE, VALID_SCHEDULE_NAME, VALID_LAST_MODIFIED_DATE_TIME, VALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":262,"author":{"gitId":"Angelyxx"},"content":"        Person modelPerson \u003d person.toModelType();","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"Angelyxx"},"content":"        assertFalse(modelPerson.getMarkStatus().equals(false));","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":265,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":266,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":267,"author":{"gitId":"imkwokyong"},"content":"    public void toModelType_nullNote_throwsIllegalValueException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":268,"author":{"gitId":"imkwokyong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-30"},{"lineNumber":269,"author":{"gitId":"imkwokyong"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-30"},{"lineNumber":270,"author":{"gitId":"imkwokyong"},"content":"                VALID_COMPANY, VALID_JOB, VALID_TAGS,","lastModifiedDate":"2023-10-30"},{"lineNumber":271,"author":{"gitId":"imkwokyong"},"content":"                VALID_MARK_STATUS, VALID_SCHEDULE, VALID_SCHEDULE_NAME,","lastModifiedDate":"2023-10-30"},{"lineNumber":272,"author":{"gitId":"imkwokyong"},"content":"                VALID_LAST_MODIFIED_DATE_TIME, null);","lastModifiedDate":"2023-10-30"},{"lineNumber":273,"author":{"gitId":"imkwokyong"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-30"},{"lineNumber":274,"author":{"gitId":"imkwokyong"},"content":"                MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName());","lastModifiedDate":"2023-10-30"},{"lineNumber":275,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-30"},{"lineNumber":276,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":277,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":278,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":279,"author":{"gitId":"imkwokyong"},"content":"    public void toModelType_invalidNote_throwsIllegalValueException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":280,"author":{"gitId":"imkwokyong"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":281,"author":{"gitId":"imkwokyong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-30"},{"lineNumber":282,"author":{"gitId":"imkwokyong"},"content":"                        VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS,","lastModifiedDate":"2023-10-30"},{"lineNumber":283,"author":{"gitId":"imkwokyong"},"content":"                        VALID_MARK_STATUS, VALID_SCHEDULE, VALID_SCHEDULE_NAME,","lastModifiedDate":"2023-10-30"},{"lineNumber":284,"author":{"gitId":"imkwokyong"},"content":"                        VALID_LAST_MODIFIED_DATE_TIME, INVALID_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":285,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-30"},{"lineNumber":286,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":287,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":288,"author":{"gitId":"imkwokyong"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":289,"author":{"gitId":"imkwokyong"},"content":"    public void toModelType_invalidNoteLength_throwsIllegalValueException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":290,"author":{"gitId":"imkwokyong"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":291,"author":{"gitId":"imkwokyong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-30"},{"lineNumber":292,"author":{"gitId":"imkwokyong"},"content":"                        VALID_EMAIL, VALID_COMPANY, VALID_JOB, VALID_TAGS,","lastModifiedDate":"2023-10-30"},{"lineNumber":293,"author":{"gitId":"imkwokyong"},"content":"                        VALID_MARK_STATUS, VALID_SCHEDULE, VALID_SCHEDULE_NAME,","lastModifiedDate":"2023-10-30"},{"lineNumber":294,"author":{"gitId":"imkwokyong"},"content":"                        VALID_LAST_MODIFIED_DATE_TIME, INVALID_NOTE_CHARACTER_LIMIT);","lastModifiedDate":"2023-10-30"},{"lineNumber":295,"author":{"gitId":"imkwokyong"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-30"},{"lineNumber":296,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":297,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":298,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"xavierpok":31,"imkwokyong":84,"Angelyxx":27,"-":86,"geoffong11":71}},{"path":"src/test/java/connexion/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"imkwokyong":9,"-":101}},{"path":"src/test/java/connexion/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.util.JsonUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.testutil.TypicalPersons;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"imkwokyong":6,"-":41}},{"path":"src/test/java/connexion/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"imkwokyong":5,"-":118}},{"path":"src/test/java/connexion/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":6,"-":62}},{"path":"src/test/java/connexion/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":3,"-":31}},{"path":"src/test/java/connexion/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"imkwokyong":1,"-":33}},{"path":"src/test/java/connexion/testutil/ClockUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"import java.time.Clock;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"import java.time.Instant;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"import java.time.ZonedDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":" * A utility class storing constants relating to clocks \u0026 time","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"public class ClockUtil {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"    private static final Instant TEST_CLOCK_TIME \u003d Instant.from(ZonedDateTime.of(LocalDateTime.of(","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"            2000, 10, 10, 10, 10, 10, 10),","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"            ZoneId.systemDefault()));","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"    public static final Clock DEFAULT_TEST_CLOCK \u003d Clock.fixed(TEST_CLOCK_TIME, ZoneId.systemDefault());","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"    public static final LocalDateTime DEFAULT_TEST_TIME \u003d LocalDateTime.now(DEFAULT_TEST_CLOCK);","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"    private static final Instant OTHER_CLOCK_TIME \u003d Instant.from(ZonedDateTime.of(LocalDateTime.of(","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"            2020, 10, 10, 10, 10, 10, 10),","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"            ZoneId.systemDefault()));","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"    public static final Clock OTHER_TEST_CLOCK \u003d Clock.fixed(OTHER_CLOCK_TIME, ZoneId.systemDefault());","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"    public static final LocalDateTime OTHER_TEST_TIME \u003d LocalDateTime.now(OTHER_TEST_CLOCK);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"xavierpok":24,"imkwokyong":1}},{"path":"src/test/java/connexion/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"        descriptor.setCompany(person.getCompany());","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"        descriptor.setJob(person.getJob());","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"        descriptor.setLastModifiedDateTime(person.getLastModifiedDateTime());","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"     * Sets the {@code Company} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"    public EditPersonDescriptorBuilder withCompany(String company) {","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"        descriptor.setCompany(new Company(company));","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"        return this;","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"     * Sets the {@code Job} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"    public EditPersonDescriptorBuilder withJob(String job) {","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"        descriptor.setJob(new Job(job));","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"     * Sets the {@code LastModifiedDateTime} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"    public EditPersonDescriptorBuilder withLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"xavierpok"},"content":"        descriptor.setLastModifiedDateTime(new LastModifiedDateTime(lastModifiedDateTime));","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"xavierpok":10,"imkwokyong":10,"-":75,"geoffong11":13}},{"path":"src/test/java/connexion/testutil/NoteDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand.NoteDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":" * A utility class to help with building NoteDescriptor objects.","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"public class NoteDescriptorBuilder {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"    public static final String DEFAULT_NOTE_BUILDER \u003d \"CS2103 is pain.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"    public static final LocalDateTime DEFAULT_LOCAL_DATE_TIME \u003d LocalDateTime.parse(\"2023-12-27-12-14\",","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"    private NoteDescriptor descriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"     * Initializes the NoteDescriptorBuilder with default note.","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"imkwokyong"},"content":"    public NoteDescriptorBuilder() {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"imkwokyong"},"content":"        descriptor \u003d new NoteDescriptor(new Note(DEFAULT_NOTE_BUILDER),","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"imkwokyong"},"content":"                new LastModifiedDateTime(DEFAULT_LOCAL_DATE_TIME));","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"imkwokyong"},"content":"     * Initializes the NoteDescriptorBuilder with the data of {@code noteDescriptor}.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"imkwokyong"},"content":"    public NoteDescriptorBuilder(NoteDescriptor noteDescriptor) {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"imkwokyong"},"content":"        this.descriptor \u003d new NoteDescriptor(noteDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"     * Sets the {@code Note} of the {@code NoteDescriptor} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"imkwokyong"},"content":"    public NoteDescriptorBuilder withNote(String note) {","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"imkwokyong"},"content":"        descriptor.setNote(new Note(note));","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"imkwokyong"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"imkwokyong"},"content":"     * Sets the {@code LastModifiedDateTime} of the {@code NoteDescriptor} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"imkwokyong"},"content":"    public NoteDescriptorBuilder withLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"imkwokyong"},"content":"        descriptor.setLastModifiedDateTime(new LastModifiedDateTime(lastModifiedDateTime));","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"imkwokyong"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"    public NoteDescriptor build() {","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"        return descriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"imkwokyong"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"imkwokyong":55}},{"path":"src/test/java/connexion/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.ClockUtil.DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Company;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Job;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Mark;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Note;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"    public static final String DEFAULT_COMPANY \u003d \"Mandai Wildlife Group\";","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"    public static final boolean DEFAULT_MARK \u003d false;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"    public static final String DEFAULT_JOB \u003d \"Machine Learning Analyst\";","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"imkwokyong"},"content":"    public static final boolean DEFAULT_MARK_STATUS \u003d false;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"imkwokyong"},"content":"    public static final String DEFAULT_NOTE \u003d \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"    public static final String DEFAULT_SCHEDULE \u003d \"2023-12-10-10-08\";","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"    public static final String DEFAULT_SCHEDULE_NAME \u003d \"Seminar\";","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"    public static final LocalDateTime DEFAULT_LAST_MODIFIED \u003d DEFAULT_TEST_TIME;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"    private Company company;","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"    private Job job;","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"    private Optional\u003cSchedule\u003e schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"    private Optional\u003cScheduleName\u003e scheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"    private Mark markStatus;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"    private Note note;","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"    private LastModifiedDateTime lastModifiedDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"        company \u003d new Company(DEFAULT_COMPANY);","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"        job \u003d new Job(DEFAULT_JOB);","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"        schedule \u003d Optional.empty();","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"        scheduleName \u003d Optional.empty();","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"        markStatus \u003d new Mark(DEFAULT_MARK);","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"        lastModifiedDateTime \u003d new LastModifiedDateTime(DEFAULT_LAST_MODIFIED);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"imkwokyong"},"content":"        markStatus \u003d new Mark(DEFAULT_MARK_STATUS);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"imkwokyong"},"content":"        note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"        company \u003d personToCopy.getCompany();","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"        job \u003d personToCopy.getJob();","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"        schedule \u003d personToCopy.getSchedule();","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"        scheduleName \u003d personToCopy.getScheduleName();","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"Angelyxx"},"content":"        markStatus \u003d personToCopy.getMarkStatus();","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"        markStatus \u003d personToCopy.getMarkStatus();","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"        lastModifiedDateTime \u003d personToCopy.getLastModifiedDateTime();","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"imkwokyong"},"content":"        markStatus \u003d personToCopy.getMarkStatus();","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"imkwokyong"},"content":"        note \u003d personToCopy.getNote();","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"     * Sets the {@code Company} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"geoffong11"},"content":"    public PersonBuilder withCompany(String company) {","lastModifiedDate":"2023-10-11"},{"lineNumber":110,"author":{"gitId":"geoffong11"},"content":"        this.company \u003d new Company(company);","lastModifiedDate":"2023-10-11"},{"lineNumber":111,"author":{"gitId":"geoffong11"},"content":"        return this;","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":114,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"geoffong11"},"content":"     * Sets the {@code Job} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"geoffong11"},"content":"    public PersonBuilder withJob(String job) {","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"geoffong11"},"content":"        this.job \u003d new Job(job);","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"geoffong11"},"content":"     * Sets the {@code Schedule} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"geoffong11"},"content":"     * if schedule string is empty, then that means there isn\u0027t a schedule.","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"geoffong11"},"content":"    public PersonBuilder withSchedule(String schedule) {","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"geoffong11"},"content":"        this.schedule \u003d Optional.of(schedule)","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"geoffong11"},"content":"                .filter(sch -\u003e !sch.isEmpty())","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"geoffong11"},"content":"                .map(Schedule::new);","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"geoffong11"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"geoffong11"},"content":"     * Sets the {@code ScheduleName} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"geoffong11"},"content":"     * if scheduleName string is empty, then that means there isn\u0027t a schedule name.","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"geoffong11"},"content":"    public PersonBuilder withScheduleName(String scheduleName) {","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"geoffong11"},"content":"        this.scheduleName \u003d Optional.of(scheduleName)","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"geoffong11"},"content":"                .filter(schName -\u003e !schName.isEmpty())","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"geoffong11"},"content":"                .map(ScheduleName::new);","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"geoffong11"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":160,"author":{"gitId":"Angelyxx"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"Angelyxx"},"content":"     * Sets the {@code markStatus} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"Angelyxx"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"Angelyxx"},"content":"    public PersonBuilder withMark(boolean b) {","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"Angelyxx"},"content":"        this.markStatus \u003d new Mark(b);","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"Angelyxx"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"imkwokyong"},"content":"     * Sets the {@code Note} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"imkwokyong"},"content":"    public PersonBuilder withNote(String note) {","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"imkwokyong"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"imkwokyong"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"xavierpok"},"content":"     * Sets the {@code LastModifiedDateTime} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"xavierpok"},"content":"    public PersonBuilder withLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"xavierpok"},"content":"        this.lastModifiedDateTime \u003d new LastModifiedDateTime(lastModifiedDateTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"xavierpok"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"geoffong11"},"content":"     * Builds the person with all the information given.","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"geoffong11"},"content":"     * @return a Person object with the relevant information.","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":189,"author":{"gitId":"geoffong11"},"content":"        return new Person(name, phone, email, company, job, markStatus,","lastModifiedDate":"2023-10-29"},{"lineNumber":190,"author":{"gitId":"imkwokyong"},"content":"                tags, schedule, scheduleName, lastModifiedDateTime, note);","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"xavierpok":16,"imkwokyong":29,"Angelyxx":13,"-":76,"geoffong11":58}},{"path":"src/test/java/connexion/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_SCHEDULE_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import connexion.logic.commands.NoteCommand.NoteDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"        sb.append(PREFIX_NAME + person.getName().getValue() + \" \");","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().getValue() + \" \");","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().getValue() + \" \");","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"        sb.append(PREFIX_COMPANY + person.getCompany().getValue() + \" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"        sb.append(PREFIX_JOB + person.getJob().getValue() + \" \");","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"        if (person.getSchedule().isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"            sb.append(PREFIX_SCHEDULE + person.getSchedule().get().toString() + \" \");","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"        if (person.getScheduleName().isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"            sb.append(PREFIX_SCHEDULE_NAME + person.getScheduleName().get().toString() + \" \");","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.getValue() + \" \")","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"        // here, s is the tag. This code appends each tag w/ prefixes in to toString","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.getValue()).append(\" \"));","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.getValue()).append(\" \"));","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.getValue()).append(\" \"));","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"        descriptor.getCompany().ifPresent(company -\u003e sb.append(PREFIX_COMPANY).append(company.getValue()).append(\" \"));","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"        descriptor.getJob().ifPresent(job -\u003e sb.append(PREFIX_JOB).append(job.getValue()).append(\" \"));","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.getValue()).append(\" \"));","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"imkwokyong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"imkwokyong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"imkwokyong"},"content":"     * Returns the part of command string for the given {@code NoteDescriptor}\u0027s details.","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"imkwokyong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"imkwokyong"},"content":"    public static String getNoteDescriptorDetails(NoteDescriptor descriptor) {","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"imkwokyong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"imkwokyong"},"content":"        sb.append(PREFIX_NOTE).append(descriptor.getNote());","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"imkwokyong"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"imkwokyong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"xavierpok":12,"imkwokyong":22,"Angelyxx":1,"-":42,"geoffong11":8}},{"path":"src/test/java/connexion/testutil/ScheduleDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import connexion.logic.commands.ScheduleCommand.ScheduleDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.LastModifiedDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.Schedule;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import connexion.model.person.ScheduleName;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":" * A utility class to help with building ScheduleDescriptor objects.","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"public class ScheduleDescriptorBuilder {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"    public static final String DEFAULT_SCHEDULE_BUILDER \u003d \"2023-12-14-08-00\";","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"    public static final String DEFAULT_SCHEDULE_NAME_BUILDER \u003d \"Seminar\";","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    public static final LocalDateTime DEFAULT_LOCAL_DATE_TIME \u003d LocalDateTime.parse(\"2023-12-27-12-14\",","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"    private ScheduleDescriptor descriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"     * Initializes the ScheduleDescriptorBuilder with default schedule and schedule name.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    public ScheduleDescriptorBuilder() {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"        descriptor \u003d new ScheduleDescriptor(new Schedule(DEFAULT_SCHEDULE_BUILDER),","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"                new ScheduleName(DEFAULT_SCHEDULE_NAME_BUILDER), new LastModifiedDateTime(DEFAULT_LOCAL_DATE_TIME));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"     * Initializes the ScheduleDescriptorBuilder with the data of {@code scheduleDescriptor}.","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"    public ScheduleDescriptorBuilder(ScheduleDescriptor scheduleDescriptor) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"        this.descriptor \u003d new ScheduleDescriptor(scheduleDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"     * Sets the {@code Schedule} of the {@code ScheduleDescriptor} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"    public ScheduleDescriptorBuilder withSchedule(String schedule) {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"        descriptor.setSchedule(new Schedule(schedule));","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"     * Sets the {@code ScheduleName} of the {@code ScheduleDescriptor} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"    public ScheduleDescriptorBuilder withScheduleName(String scheduleName) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        descriptor.setScheduleName(new ScheduleName(scheduleName));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"     * Sets the {@code LastModifiedDateTime} of the {@code ScheduleDescriptor} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"    public ScheduleDescriptorBuilder withLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"        descriptor.setLastModifiedDateTime(new LastModifiedDateTime(lastModifiedDateTime));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"    public ScheduleDescriptor build() {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"        return descriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"geoffong11":65}},{"path":"src/test/java/connexion/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":1,"-":71}},{"path":"src/test/java/connexion/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imkwokyong":4,"-":51}},{"path":"src/test/java/connexion/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import connexion.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"    public static final Index INDEX_MARKED_PERSON \u003d Index.fromOneBased(7);","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"imkwokyong":2,"-":10,"geoffong11":1}},{"path":"src/test/java/connexion/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_JOB_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_SCHEDULE_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_SCHEDULE_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_SCHEDULE_NAME_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_SCHEDULE_NAME_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"imkwokyong"},"content":"import static connexion.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_SCHEDULE;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"import static connexion.testutil.PersonBuilder.DEFAULT_SCHEDULE_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"imkwokyong"},"content":"import connexion.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"            .withCompany(\"Google\").withJob(\"AI Analyst\")","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(DEFAULT_SCHEDULE)","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(DEFAULT_SCHEDULE_NAME)","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"            .build();","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"            .withCompany(\"Mandai Wildlife Group\").withJob(\"Software Engineer\")","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(\"2024-01-27-07-00\")","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(\"Teams Interview\")","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"imkwokyong"},"content":"            .withMark(true)","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"imkwokyong"},"content":"            .withNote(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"imkwokyong"},"content":"                    + \"sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \")","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"            .withCompany(\"Grab\").withJob(\"AI Engineer\")","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(\"\")","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(\"\")","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"imkwokyong"},"content":"            .withMark(true)","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"            .build();","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"            .withCompany(\"Uber\").withJob(\"Data Analyst\")","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(\"2023-12-08-05-00\")","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(\"Morning meeting\")","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"            .withCompany(\"Central Provident Board\").withJob(\"Machine Learning Analyst\")","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(\"2023-12-13-08-00\")","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(\"Morning interview\")","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"            .build();","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"            .withEmail(\"lydia@example.com\").withCompany(\"Citadel\")","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"            .withJob(\"AI Engineer\")","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(\"2023-12-19-05-00\")","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(\"Morning meeting\")","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"    // marked Person for testing mark functionalities and dependencies","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"            .withEmail(\"anna@example.com\").withCompany(\"Morgan Stanley\")","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"            .withJob(\"Risk Analyst\")","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(\"2023-11-13-20-00\")","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(\"Evening seminar\")","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"imkwokyong"},"content":"            .withMark(true)","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"xavierpok"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"            .withEmail(\"stefan@example.com\").withCompany(\"Google\")","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"            .withJob(\"Software Developer\")","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(\"2023-12-15-05-00\")","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(\"Morning seminar\")","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"geoffong11"},"content":"            .withEmail(\"hans@example.com\").withCompany(\"Google\")","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"xavierpok"},"content":"            .withJob(\"Software Developer\")","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(\"2023-12-14-15-00\")","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(\"Afternoon tea break\")","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"xavierpok"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"geoffong11"},"content":"            .withEmail(VALID_EMAIL_AMY).withCompany(VALID_COMPANY_AMY)","lastModifiedDate":"2023-10-11"},{"lineNumber":114,"author":{"gitId":"xavierpok"},"content":"            .withJob(VALID_JOB_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(VALID_SCHEDULE_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(VALID_SCHEDULE_NAME_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"xavierpok"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"geoffong11"},"content":"            .withEmail(VALID_EMAIL_BOB).withCompany(VALID_COMPANY_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"geoffong11"},"content":"            .withJob(VALID_JOB_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"xavierpok"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"geoffong11"},"content":"            .withSchedule(VALID_SCHEDULE_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"geoffong11"},"content":"            .withScheduleName(VALID_SCHEDULE_NAME_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"geoffong11"},"content":"            .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"geoffong11"},"content":"    // Without schedule and schedule name","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"geoffong11"},"content":"    public static final Person ANDY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"geoffong11"},"content":"            .withEmail(VALID_EMAIL_AMY).withCompany(VALID_COMPANY_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"geoffong11"},"content":"            .withJob(VALID_JOB_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"geoffong11"},"content":"            .withLastModifiedDateTime(PersonBuilder.DEFAULT_LAST_MODIFIED)","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"xavierpok":26,"imkwokyong":20,"-":49,"geoffong11":56}},{"path":"src/test/java/connexion/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"imkwokyong":1,"-":44}},{"path":"src/test/java/connexion/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imkwokyong"},"content":"package connexion.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"import static connexion.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"imkwokyong"},"content":"import connexion.MainApp;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"imkwokyong":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"\u003c?import connexion.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"imkwokyong":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"imkwokyong"},"content":"\u003cfx:root type\u003d\"connexion.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"imkwokyong":1,"-":5}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# ClubMembersContacts","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W15-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/nus-cs2103-AY2324S1/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"![image](./docs/images/Ui.png)","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"ClubMembersContacts is an app to help EXCO members of School of Computing\u0027s CCAs to manage the contacts of all their members and applicants in a fast and convenient yet powerful way through a CLI or text-based interface for greater speed.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"-":6,"jonasongg":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"run {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"-":72,"jonasongg":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"### Antony Swami Alfred Ben","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"\u003cimg src\u003d\"images/alfredbenoel.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"[[github](https://github.com/AlfredBeNoel)]","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"[[portfolio](team/AlfredBeNoel.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"* Role: Documentation Expert","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"### Chan Rui Jia","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"\u003cimg src\u003d\"images/matochichap.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"[[github](http://github.com/matochichap)]","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"[[portfolio](team/matochichap.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"* Role: Intellij Expert","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"### Jonas Ong Si Wei","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"\u003cimg src\u003d\"images/jonasongg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"[[github](http://github.com/jonasongg)]","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"[[portfolio](team/jonasongg.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"* Role: Git Expert","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"### Lim Win Sheng","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"\u003cimg src\u003d\"images/winsheng1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"[[github](http://github.com/WinSheng1)]","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"[[portfolio](team/winsheng1.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"* Role: Scheduling and Tracking","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"### Teng Hui Xin Alicia","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"\u003cimg src\u003d\"images/saezenn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"[[github](http://github.com/Saezenn)]","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"[[portfolio](team/saezenn.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"* Role: UI Design Expert","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"matochichap":20,"WinSheng1":3,"-":30,"jonasongg":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"# ClubMembersContact","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"and edit diagrams.","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"**`Main`** (consisting of","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"the command `delete 1`.","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"The **API** of this component is specified","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"visible GUI.","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"jonasongg"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"jonasongg"},"content":"is specified","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"matochichap"},"content":"* depends on some classes in the `Model` component, as it displays `Member`, `Applicant` and `Tag` objects residing in the `Model`.","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"jonasongg"},"content":"**API","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"jonasongg"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"jonasongg"},"content":"call as an example.","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"jonasongg"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"jonasongg"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"jonasongg"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"jonasongg"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"jonasongg"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"jonasongg"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"jonasongg"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"jonasongg"},"content":"  a `Command` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"jonasongg"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"jonasongg"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"jonasongg"},"content":"**API","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"jonasongg"},"content":"** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"jonasongg"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"jonasongg"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"jonasongg"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"jonasongg"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"jonasongg"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"jonasongg"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"jonasongg"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"matochichap"},"content":"\u003cimg src\u003d\"images/ModelPersonClassDiagram.png\" width\u003d\"530\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"matochichap"},"content":"The `Member` and `Applicant` classes both extend from the abstract `Person` class, and each of these classes have the","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"matochichap"},"content":"associated fields specific to them.","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"jonasongg"},"content":"**API","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"jonasongg"},"content":"** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"jonasongg"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"jonasongg"},"content":"  objects.","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"jonasongg"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"jonasongg"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"jonasongg"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"jonasongg"},"content":"  that belong to the `Model`)","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"matochichap"},"content":"### Add `Member`/`Applicant` feature","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"matochichap"},"content":"The `addMember` and `addApplicant` command is used to add a member or an applicant to the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"jonasongg"},"content":"The commands are implemented in the `AddMemberCommand` and `AddApplicantCommand` class, which extends the `Command`","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"jonasongg"},"content":"class.","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"jonasongg"},"content":"The add mechanism is facilitated by `LogicManager` which parses the command input from the user to determine the","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"jonasongg"},"content":"appropriate","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"matochichap"},"content":"command to execute. The execute function checks whether the `member`/`applicant` is present in the `AddressBook`.","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"matochichap"},"content":"The `member`/`applicant` is added into the `AddressBook` if it is not present. Otherwise, an error message is returned.","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"Saezenn"},"content":"### Delete an applicant","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"jonasongg"},"content":"The applicant at the specific `applicantIndex` in the applicant list will be deleted. Compulsory fields for the","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"jonasongg"},"content":"`DeleteApplicantCommand` include: `applicantIndex`. An example of how this feature can be used is as follows:","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"jonasongg"},"content":"* Step 1. The `DeleteApplicantCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"jonasongg"},"content":"* Step 2. The `applicantIndex` is checked to be within the valid range of the applicant list. If the `applicantIndex`","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"jonasongg"},"content":"  given","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"jonasongg"},"content":"  is invalid, a `CommandException` is thrown.","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"jonasongg"},"content":"* Step 3. The applicant at the given `applicantIndex` is referenced.","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"jonasongg"},"content":"* Step 4. The model object\u0027s `deleteApplicant()` method is called. The input parameter is the referenced applicant.","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"Saezenn"},"content":"* Step 5. The applicant is deleted from the applicant list.","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"Saezenn"},"content":"### Delete a member","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"jonasongg"},"content":"The member at the specific memberIndex in the member list will be deleted. Compulsory fields for","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"jonasongg"},"content":"the `DeleteMemberCommand`","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"jonasongg"},"content":"include: `memberIndex`. An example of how this feature can be used is as follows:","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"jonasongg"},"content":"* Step 1. The `DeleteMemberCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"jonasongg"},"content":"* Step 2. The `memberIndex` is checked to be within the valid range of the member list. If the `memberIndex` given is","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"jonasongg"},"content":"  invalid, a `CommandException` is thrown.","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"jonasongg"},"content":"* Step 3. The member at the given `memberIndex` is referenced.","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"jonasongg"},"content":"* Step 4. The model object\u0027s `deleteMember()` method is called. The input parameter is the referenced member.","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"Saezenn"},"content":"* Step 5. The member is deleted from the member list.","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"WinSheng1"},"content":"### Delete an applicant","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"jonasongg"},"content":"The applicant at the specific `applicantIndex` in the applicant list will be deleted. Compulsory fields for the","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"jonasongg"},"content":"`DeleteApplicantCommand` include: `applicantIndex`. An example of how this feature can be used is as follows:","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"jonasongg"},"content":"* Step 1. The `DeleteApplicantCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"jonasongg"},"content":"* Step 2. The `applicantIndex` is checked to be within the valid range of the applicant list. If the `applicantIndex`","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"jonasongg"},"content":"  given","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"jonasongg"},"content":"  is invalid, a `CommandException` is thrown.","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"jonasongg"},"content":"* Step 3. The applicant at the given `applicantIndex` is referenced.","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"jonasongg"},"content":"* Step 4. The model object\u0027s `deleteApplicant()` method is called. The input parameter is the referenced applicant.","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"WinSheng1"},"content":"* Step 5. The applicant is deleted from the applicant list.","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"Saezenn"},"content":"### Find an applicant","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"jonasongg"},"content":"All applicants that contains any field with the specified keyword will be listed. Compulsory fields for the","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"jonasongg"},"content":"`FindApplicantCommand` include: `keyword`. An example of how this feature can be used is as follows:","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"jonasongg"},"content":"* Step 1. The `FindApplicantCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"jonasongg"},"content":"* Step 2. The model object\u0027s `updateFilteredApplicantList()` is called, with the keyword as the predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"jonasongg"},"content":"* Step 3. The applicant list is filtered to only reflect applicants with fields (name, phone number) that contain the","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"jonasongg"},"content":"  keyword.","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"Saezenn"},"content":"* Step 4. The filtered member list is shown.","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"Saezenn"},"content":"### Find a member","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"jonasongg"},"content":"All members that contains any field with the specified keyword will be listed. Compulsory fields for","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"jonasongg"},"content":"`FindApplicantCommand` include: `keyword`. An example of how this feature can be used is as follows:","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"jonasongg"},"content":"* Step 1. The `FindMemberCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"jonasongg"},"content":"* Step 2. The model object\u0027s `updateFilteredMemberList()` is called, with the keyword as the predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"jonasongg"},"content":"* Step 3. The member list is filtered to only reflect members with fields (name, email, phone number, telegram handle,","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"jonasongg"},"content":"  tag) that contain the keyword.","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"Saezenn"},"content":"* Step 4. The filtered member list is shown.","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"WinSheng1"},"content":"### Edit a member","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"jonasongg"},"content":"Edits the details of an existing member identified by their index number in the displayed member list. Existing values","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"jonasongg"},"content":"will be overwritten by the input values.","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"jonasongg"},"content":"* Step 1: The `EditMemberCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"jonasongg"},"content":"* Step 2: The member index is checked to be within the valid range of the member list. If the member index given is","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"jonasongg"},"content":"  invalid (e.g., out of range), a `CommandException` is thrown.","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"WinSheng1"},"content":"* Step 3: The member at the given index is referenced based on the provided member index.","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"jonasongg"},"content":"* Step 4: The `EditMemberCommand` calls the model object\u0027s `setMember()` method. It updates the member with the new","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"jonasongg"},"content":"  details","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"jonasongg"},"content":"  provided, effectively modifying the existing member\u0027s information.","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"jonasongg"},"content":"* Step 5: After the execution of the `EditMemberCommand`, the member\u0027s details are successfully edited in the member","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"jonasongg"},"content":"  list.","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"WinSheng1"},"content":"### Edit an applicant","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"jonasongg"},"content":"Edits the details of an existing applicant identified by their index number in the displayed applicant list. Existing","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"jonasongg"},"content":"values will be overwritten by the input values.","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"jonasongg"},"content":"* Step 1: The `EditApplicantCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":287,"author":{"gitId":"jonasongg"},"content":"* Step 2: The applicant index is checked to be within the valid range of the applicant list. If the applicant index","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"jonasongg"},"content":"  given is invalid (e.g., out of range), a `CommandException` is thrown.","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"WinSheng1"},"content":"* Step 3: The applicant at the given index is referenced based on the provided applicant index.","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"jonasongg"},"content":"* Step 4: The `EditApplicantCommand` calls the model object\u0027s `setApplicant()` method. It updates the member with the","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"jonasongg"},"content":"  new","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"jonasongg"},"content":"  details provided, effectively modifying the existing applicant\u0027s information.","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"jonasongg"},"content":"* Step 5: After the execution of the `EditApplicantCommand`, the applicant\u0027s details are successfully edited in the","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"jonasongg"},"content":"  applicant list.","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"jonasongg"},"content":"### View all members","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"jonasongg"},"content":"Lists all members in the address book to the user; e.g., If previous list was filtered (say by `FindMemberCommand`),","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"jonasongg"},"content":"then set it to unfiltered again.","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"jonasongg"},"content":"* Step 1: The `ViewMembersCommand` object\u0027s execute() method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"jonasongg"},"content":"* Step 2: The model object\u0027s `updateFilteredMemberList()` method is called with the predicate as always returning true.","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"jonasongg"},"content":"* Step 3: All members in the address book are shown to the user in the members list.","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"jonasongg"},"content":"### View all applicants","lastModifiedDate":"2023-10-27"},{"lineNumber":306,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":307,"author":{"gitId":"jonasongg"},"content":"Lists all applicants in the address book to the user; e.g., If previous list was filtered (say","lastModifiedDate":"2023-10-27"},{"lineNumber":308,"author":{"gitId":"jonasongg"},"content":"by `FindApplicantCommand`), then set it to unfiltered again.","lastModifiedDate":"2023-10-27"},{"lineNumber":309,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":310,"author":{"gitId":"jonasongg"},"content":"* Step 1: The `ViewApplicantsCommand` object\u0027s execute() method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":311,"author":{"gitId":"jonasongg"},"content":"* Step 2: The model object\u0027s `updateFilteredApplicantList()` method is called with the predicate as always returning","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"jonasongg"},"content":"  true.","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"jonasongg"},"content":"* Step 3: All applicants in the address book are shown to the user in the applicants list.","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"jonasongg"},"content":"### Copy a member","lastModifiedDate":"2023-10-27"},{"lineNumber":316,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":317,"author":{"gitId":"jonasongg"},"content":"Copies the details of an existing member identified by their index number in the displayed member list into the","lastModifiedDate":"2023-10-27"},{"lineNumber":318,"author":{"gitId":"jonasongg"},"content":"clipboard.","lastModifiedDate":"2023-10-27"},{"lineNumber":319,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"jonasongg"},"content":"* Step 1: The `CopyMemberCommand` object\u0027s execute() method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":321,"author":{"gitId":"jonasongg"},"content":"* Step 2: The member index is checked to be within the valid range of the member list. If the member index given is","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"jonasongg"},"content":"  invalid (e.g., out of range), a `CommandException` is thrown.","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"jonasongg"},"content":"* Step 3: The member at the given index is referenced based on the provided member index.","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"jonasongg"},"content":"* Step 4: The `CopyMemberCommand` calls the copies the member\u0027s details given by the `Member` `detailsToCopy()` method","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"jonasongg"},"content":"  into","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"jonasongg"},"content":"  the clipboard.","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"jonasongg"},"content":"### Copy an applicant","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"jonasongg"},"content":"Copies the details of an existing applicant identified by their index number in the displayed applicant list into the","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"jonasongg"},"content":"clipboard.","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"jonasongg"},"content":"* Step 1: The `CopyApplicantCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"jonasongg"},"content":"* Step 2: The applicant index is checked to be within the valid range of the applicant list. If the applicant index","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"jonasongg"},"content":"  given is invalid (e.g., out of range), a `CommandException` is thrown.","lastModifiedDate":"2023-10-27"},{"lineNumber":336,"author":{"gitId":"jonasongg"},"content":"* Step 3: The applicant at the given index is referenced based on the provided applicant index.","lastModifiedDate":"2023-10-27"},{"lineNumber":337,"author":{"gitId":"jonasongg"},"content":"* Step 4: The `CopyApplicantCommand` calls the copies the applicant\u0027s details given by the `Applicant` `detailsToCopy()`","lastModifiedDate":"2023-10-27"},{"lineNumber":338,"author":{"gitId":"jonasongg"},"content":"  method into the clipboard.","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"matochichap"},"content":"### View all available tags","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":342,"author":{"gitId":"matochichap"},"content":"The view tags mechanism lists all available tags in the address book that a user can use to tag a member.","lastModifiedDate":"2023-10-27"},{"lineNumber":343,"author":{"gitId":"matochichap"},"content":"All available tags in the address book are shown to the user in the tags list.","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"matochichap"},"content":"When a new member is added, deleted or edited, the `updateTags` method is called to update the list of available tags.","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":346,"author":{"gitId":"matochichap"},"content":"\u003cimg src\u003d\"images/ViewTagsSequenceDiagram.png\" width\u003d\"543\" alt\u003d\"ViewTagsSequenceDiagram\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":348,"author":{"gitId":"matochichap"},"content":"In the above diagram, when the `DeleteMemberCommand::execute` method is called,`Member` is deleted from ","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"matochichap"},"content":"the `ModelManager` using the `deleteMember()` method, which then updates the `tags` in `AddressBook` using ","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"matochichap"},"content":"the `updateTags()` method.","lastModifiedDate":"2023-11-02"},{"lineNumber":351,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"matochichap"},"content":"`tags` is an `ObservableList` which will update the `TagsListPanel` UI component when there is a change in the `tags`","lastModifiedDate":"2023-11-02"},{"lineNumber":353,"author":{"gitId":"matochichap"},"content":"list.","lastModifiedDate":"2023-11-02"},{"lineNumber":354,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":355,"author":{"gitId":"AlfredBeNoel"},"content":"### \\[Proposed\\] Allocating tasks to Members","lastModifiedDate":"2023-10-27"},{"lineNumber":356,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"AlfredBeNoel"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":358,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":359,"author":{"gitId":"AlfredBeNoel"},"content":"The proposed allocating tasks to `Member` objects is implemented using either `ToDo` or `Deadline` or `Events` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":360,"author":{"gitId":"AlfredBeNoel"},"content":"They extend from the `Tasks` class. A `Tasklist` object will be instantiated for each `Member` object, used to store the","lastModifiedDate":"2023-10-27"},{"lineNumber":361,"author":{"gitId":"AlfredBeNoel"},"content":"list of tasks assigned to each individual. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-27"},{"lineNumber":362,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":363,"author":{"gitId":"AlfredBeNoel"},"content":"* `ToDo#markAsDone()`— Will be used to mark the todo of each Member as done","lastModifiedDate":"2023-10-27"},{"lineNumber":364,"author":{"gitId":"AlfredBeNoel"},"content":"* `ToDo#markAsUnDone()`— Will be used to mark the todo of each Member as undone","lastModifiedDate":"2023-10-27"},{"lineNumber":365,"author":{"gitId":"AlfredBeNoel"},"content":"* `Deadline#markAsDone()`— Will be used to mark the deadline of each Member as done","lastModifiedDate":"2023-10-27"},{"lineNumber":366,"author":{"gitId":"AlfredBeNoel"},"content":"* `Deadline#markAsUnDone()`— Will be used to mark the deadline of each Member as done","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"AlfredBeNoel"},"content":"* `Event#markAsDone()`— Will be used to mark the deadline of each Member as done","lastModifiedDate":"2023-10-27"},{"lineNumber":368,"author":{"gitId":"AlfredBeNoel"},"content":"* `Event#markAsUnDone()`— Will be used to mark the deadline of each Member as done","lastModifiedDate":"2023-10-27"},{"lineNumber":369,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":370,"author":{"gitId":"AlfredBeNoel"},"content":"These operations are exposed in the `Task` parent class as `Task#markAsDone()` and `Task#markAsUnDone()` to execute the","lastModifiedDate":"2023-10-27"},{"lineNumber":371,"author":{"gitId":"AlfredBeNoel"},"content":"above-mentioned operations.","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":373,"author":{"gitId":"AlfredBeNoel"},"content":"Step 1: The user adds a new `Member` using the `addMember` command. At this point, a `TaskList` instance will be","lastModifiedDate":"2023-10-27"},{"lineNumber":374,"author":{"gitId":"AlfredBeNoel"},"content":"assigned to that member.","lastModifiedDate":"2023-10-27"},{"lineNumber":375,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"AlfredBeNoel"},"content":"Step 2: When the user uses the `addToDo` command, a `ToDo` object containing the details parsed in through the code will","lastModifiedDate":"2023-10-27"},{"lineNumber":377,"author":{"gitId":"AlfredBeNoel"},"content":"be stored and under the user identified by their telegram handle, which is passed as a parameter. It namely stores the","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"AlfredBeNoel"},"content":"`Tasks.taskName`.","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":380,"author":{"gitId":"jonasongg"},"content":"Step 3: When the user uses the `addDeadline` command, a `Deadline` object containing the details parsed in through the","lastModifiedDate":"2023-10-28"},{"lineNumber":381,"author":{"gitId":"jonasongg"},"content":"code will","lastModifiedDate":"2023-10-28"},{"lineNumber":382,"author":{"gitId":"AlfredBeNoel"},"content":"be stored and under the user identified by their telegram handle, which is passed as a parameter. It namely stores the","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"AlfredBeNoel"},"content":"`Tasks.taskName`, `Deadline.dueDate` and `Deadline.dueTime`.","lastModifiedDate":"2023-10-27"},{"lineNumber":384,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"jonasongg"},"content":"Step 4: When the user uses the `addEvent` command, an `Event` object containing the details parsed in through the code","lastModifiedDate":"2023-10-28"},{"lineNumber":386,"author":{"gitId":"jonasongg"},"content":"will","lastModifiedDate":"2023-10-28"},{"lineNumber":387,"author":{"gitId":"AlfredBeNoel"},"content":"be stored and under the user identified by their telegram handle, which is passed as a parameter. It namely stores the","lastModifiedDate":"2023-10-27"},{"lineNumber":388,"author":{"gitId":"AlfredBeNoel"},"content":"`Tasks.taskName`, `Event.startDate`, `Deadline.startTime`, `Event.endDate` and `Deadline.endTime`.","lastModifiedDate":"2023-10-27"},{"lineNumber":389,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":390,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2023-10-07"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-07"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":394,"author":{"gitId":"jonasongg"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2023-10-27"},{"lineNumber":395,"author":{"gitId":"jonasongg"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2023-10-27"},{"lineNumber":396,"author":{"gitId":"jonasongg"},"content":"following operations:","lastModifiedDate":"2023-10-27"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":398,"author":{"gitId":"jonasongg"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2023-10-27"},{"lineNumber":399,"author":{"gitId":"jonasongg"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"jonasongg"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-27"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":402,"author":{"gitId":"jonasongg"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2023-10-27"},{"lineNumber":403,"author":{"gitId":"jonasongg"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-10-27"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2023-10-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":407,"author":{"gitId":"jonasongg"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2023-10-27"},{"lineNumber":408,"author":{"gitId":"jonasongg"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-10-27"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":410,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2023-10-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":412,"author":{"gitId":"jonasongg"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2023-10-27"},{"lineNumber":413,"author":{"gitId":"jonasongg"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2023-10-27"},{"lineNumber":414,"author":{"gitId":"jonasongg"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2023-10-27"},{"lineNumber":415,"author":{"gitId":"jonasongg"},"content":"state.","lastModifiedDate":"2023-10-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2023-10-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":419,"author":{"gitId":"jonasongg"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also","lastModifiedDate":"2023-10-27"},{"lineNumber":420,"author":{"gitId":"jonasongg"},"content":"calls `Model#commitAddressBook()`, causing another modified address book state to be saved into","lastModifiedDate":"2023-10-27"},{"lineNumber":421,"author":{"gitId":"jonasongg"},"content":"the `addressBookStateList`.","lastModifiedDate":"2023-10-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2023-10-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":425,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-10-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":427,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":429,"author":{"gitId":"jonasongg"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2023-10-27"},{"lineNumber":430,"author":{"gitId":"jonasongg"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2023-10-27"},{"lineNumber":431,"author":{"gitId":"jonasongg"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-10-27"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":433,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2023-10-07"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-10-07"},{"lineNumber":436,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2023-10-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":438,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2023-10-07"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":442,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2023-10-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":444,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-07"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":446,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":448,"author":{"gitId":"jonasongg"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2023-10-27"},{"lineNumber":449,"author":{"gitId":"jonasongg"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-10-27"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-10-07"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":453,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":455,"author":{"gitId":"jonasongg"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2023-10-27"},{"lineNumber":456,"author":{"gitId":"jonasongg"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2023-10-27"},{"lineNumber":457,"author":{"gitId":"jonasongg"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-10-27"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":459,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2023-10-07"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":461,"author":{"gitId":"jonasongg"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2023-10-27"},{"lineNumber":462,"author":{"gitId":"jonasongg"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2023-10-27"},{"lineNumber":463,"author":{"gitId":"jonasongg"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2023-10-27"},{"lineNumber":464,"author":{"gitId":"jonasongg"},"content":"desktop applications follow.","lastModifiedDate":"2023-10-27"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":466,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2023-10-07"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":468,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-07"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":470,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":474,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2023-10-07"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":476,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":477,"author":{"gitId":"WinSheng1"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-10-07"},{"lineNumber":478,"author":{"gitId":"WinSheng1"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-10-07"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":480,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-10-07"},{"lineNumber":481,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2023-10-07"},{"lineNumber":482,"author":{"gitId":"WinSheng1"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-10-07"},{"lineNumber":483,"author":{"gitId":"WinSheng1"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-10-07"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":485,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2023-10-07"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":487,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2023-10-07"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":489,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2023-10-07"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":492,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-07"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":494,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2023-10-07"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":496,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2023-10-07"},{"lineNumber":497,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2023-10-07"},{"lineNumber":498,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2023-10-07"},{"lineNumber":499,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2023-10-07"},{"lineNumber":500,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2023-10-07"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":502,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-07"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":504,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"WinSheng1"},"content":"* is a member of an organisation","lastModifiedDate":"2023-10-06"},{"lineNumber":511,"author":{"gitId":"WinSheng1"},"content":"* has a responsibility in managing applicants who are applying into the organisation","lastModifiedDate":"2023-10-06"},{"lineNumber":512,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"WinSheng1"},"content":"* prefers data to be organized and separated into categories","lastModifiedDate":"2023-10-06"},{"lineNumber":514,"author":{"gitId":"WinSheng1"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2023-10-06"},{"lineNumber":515,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":516,"author":{"gitId":"WinSheng1"},"content":"* prefers to use a separate app that is made to manage CCA-related contacts efficiently","lastModifiedDate":"2023-10-06"},{"lineNumber":517,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"jonasongg"},"content":"**Value proposition**: categorises contacts into \u0027members\u0027 and \u0027applicants\u0027 groups, allowing for easier management of","lastModifiedDate":"2023-10-27"},{"lineNumber":520,"author":{"gitId":"jonasongg"},"content":"contacts","lastModifiedDate":"2023-10-27"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                                | So that I can…​                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"WinSheng1"},"content":"|----------|---------|-------------------------------------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2023-10-07"},{"lineNumber":528,"author":{"gitId":"WinSheng1"},"content":"| `* * *`  | user    | add existing members\u0027 contact                               | get the contact of existing members to contact them               |","lastModifiedDate":"2023-10-06"},{"lineNumber":529,"author":{"gitId":"WinSheng1"},"content":"| `* * *`  | user    | view existing members\u0027 contact                              | see a list of all current members in the organisation             |","lastModifiedDate":"2023-10-06"},{"lineNumber":530,"author":{"gitId":"WinSheng1"},"content":"| `* * *`  | user    | delete an existing members\u0027 contact                         | remove existing members\u0027 contacts that should be removed          |","lastModifiedDate":"2023-10-06"},{"lineNumber":531,"author":{"gitId":"WinSheng1"},"content":"| `* * *`  | user    | add prospective members\u0027 contact                            | get the contact of applicants to contact them for further updates |","lastModifiedDate":"2023-10-06"},{"lineNumber":532,"author":{"gitId":"WinSheng1"},"content":"| `* * *`  | user    | view prospective members\u0027 contact                           | see a list of all applicants                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":533,"author":{"gitId":"WinSheng1"},"content":"| `* * *`  | user    | delete a prospective members\u0027 contact                       | remove applicants\u0027 contacts that should be removed                |","lastModifiedDate":"2023-10-06"},{"lineNumber":534,"author":{"gitId":"WinSheng1"},"content":"| `* *  `  | user    | schedule a time and date for an interview with an applicant | mark out a time period of a specific date for an interview        |","lastModifiedDate":"2023-10-07"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"jonasongg"},"content":"(For all use cases below, the **System** is the `ClubMembersContact` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2023-10-27"},{"lineNumber":541,"author":{"gitId":"jonasongg"},"content":"otherwise)","lastModifiedDate":"2023-10-27"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"WinSheng1"},"content":"**Use case: Schedule a date for an interview**","lastModifiedDate":"2023-10-07"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"WinSheng1"},"content":"1. User requests to list applicants","lastModifiedDate":"2023-10-07"},{"lineNumber":548,"author":{"gitId":"WinSheng1"},"content":"2. ClubMembersContact shows a list of applicants","lastModifiedDate":"2023-10-07"},{"lineNumber":549,"author":{"gitId":"WinSheng1"},"content":"3. User requests to schedule a date and time for an interview for a specific applicant in the list","lastModifiedDate":"2023-10-07"},{"lineNumber":550,"author":{"gitId":"WinSheng1"},"content":"4. ClubMembersContact marks out the time of that date","lastModifiedDate":"2023-10-07"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"WinSheng1"},"content":"* 3a. The requested time and date is unavailable.","lastModifiedDate":"2023-10-07"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"WinSheng1"},"content":"    * 3a1. ClubMembersContact shows an error message.","lastModifiedDate":"2023-10-07"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"matochichap"},"content":"1. The system should respond to user requests within 2 seconds for all functions.","lastModifiedDate":"2023-10-07"},{"lineNumber":571,"author":{"gitId":"matochichap"},"content":"2. The user interface should be consistent across all modules and functions of the application.","lastModifiedDate":"2023-10-07"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"jonasongg"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2023-10-27"},{"lineNumber":596,"author":{"gitId":"jonasongg"},"content":"       optimum.","lastModifiedDate":"2023-10-27"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"jonasongg"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2023-10-27"},{"lineNumber":615,"author":{"gitId":"jonasongg"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-27"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"matochichap":27,"Saezenn":15,"WinSheng1":37,"AlfredBeNoel":31,"-":304,"jonasongg":217}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"# ClubMemberContacts","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"ClubMembersContacts is an app to help EXCO members of School of Computing\u0027s CCAs to manage the contacts of all their","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"members and applicants in a fast and convenient yet powerful way through a CLI or text-based interface for greater","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"speed.","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"* It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"  what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"* It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"  {:toc}","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"2. Download the latest clubmemberscontact.jar from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"3. Locate your jar file in your computer and double click on it to run the application. Alternatively, you can run the","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"   jar file from the command line using the java -jar clubmemberscontact.jar command.","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"4. A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"   Try the following commands in order:","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    1. `addm /name Alicia /phone 92345678 /email Alicia@xyz.com /tele @Alicia` : Adds a member named Alicia to the","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"       members list","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"    2. `addm /name John Doe /phone 92345677 /email Johndoe@xyz.com /tele @Johndoe` : Adds a member named John Doe to the","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"       members list","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"    3. `findm Alicia` : Only member Alicia will be listed under the members list","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"    4. `findm John Doe` : Only member John Doe will be listed under the members list","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"    5. `findm Alicia Johndoe@xyz.com` : Both members Alicia and John Doe will be listed under the members list","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"    6. `delm 2` : Member John Doe will be deleted from the members list","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"## Features","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"**Note:** Many of the commands below have _aliases_, or short-form versions that make them easier","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"to type. For example, the command `addMember` can be typed as `addm`. Usages of the aliases are documented below","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"alongside the full command word, and all aliases can be used interchangeably with the full command word.","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"### Add Member/Applicant","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"matochichap"},"content":"You can easily add a new member/applicant to the members/applicants list.","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"matochichap"},"content":"- Use `addMember` or `addm` to use add a member","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"matochichap"},"content":"- Use `addApplicant` or `adda` to use add an applicant","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"#### Usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"matochichap"},"content":"##### Adding member:","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"`addMember /name {memberName} /phone {phoneNumber} /email {email} /tele {telegramHandle} /tag {tag}`","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"`addm /name {memberName} /phone {phoneNumber} /email {email} /tele {telegramHandle} /tag {tag}`","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"matochichap"},"content":"##### Adding applicant:","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"matochichap"},"content":"`addApplicant /name {applicantName} /phone {phoneNumber}`","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"matochichap"},"content":"`adda /name {applicantName} /phone {phoneNumber}`","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"#### Acceptable values for parameters:","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"matochichap"},"content":"- `name`: Only alphabetical characters, @, () are allowed","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"- `phoneNumber`: Only numbers are allowed","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"jonasongg"},"content":"- `email`: Must follow the format of xyz@abc.wsd","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"- `telegramHandle`: Only alphanumeric characters and underscore are allowed","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"matochichap"},"content":"- `tag`: Only alphanumeric characters are allowed, tags are optional","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"#### Example of usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"matochichap"},"content":"`addm /name John Doe /phone 92345678 /email johndoe@xyz.com /tele @johndoe /tag WelfareHead`","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"matochichap"},"content":"`adda /name John Doe /phone 92345678`","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"### Delete Member","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"WinSheng1"},"content":"The member at the specified index will be deleted from the members list.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"#### Usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"Saezenn"},"content":"`deleteMember {index}`","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"jonasongg"},"content":"`delm {index}`","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"jonasongg"},"content":"#### Acceptable values for parameters:","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"- `index`: Only numbers are allowed, starting from 1","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jonasongg"},"content":"#### Example of usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"WinSheng1"},"content":"`deleteMember 1`","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"jonasongg"},"content":"`delm 1`","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"jonasongg"},"content":"#### Expected Outcome:","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"WinSheng1"},"content":"Deleted member: Alicia","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"jonasongg"},"content":"#### If index is out of range:","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"WinSheng1"},"content":"The member index provided is invalid","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"jonasongg"},"content":"#### If there are no members:","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"WinSheng1"},"content":"The member index provided is invalid","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"jonasongg"},"content":"### Edit Member","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"jonasongg"},"content":"The member at the specified index will have its specified fields edited. At least 1 field to be specified, not all","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"jonasongg"},"content":"fields have to be specified.","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"jonasongg"},"content":"#### Usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"WinSheng1"},"content":"`editMember {index} /name {memberName} /phone {phoneNumber} /email {email} /tele {telegramHandle} /tag {tag}`","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"jonasongg"},"content":"`editm {index} /name {memberName} /phone {phoneNumber} /email {email} /tele {telegramHandle} /tag {tag}`","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"jonasongg"},"content":"#### Acceptable values for parameters:","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jonasongg"},"content":"- `index`: Only numbers are allowed, starting from 1","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"jonasongg"},"content":"- `memberName`: Only alphabetical characters, @, () are allowed","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"jonasongg"},"content":"- `phoneNumber`: Only numbers are allowed","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"jonasongg"},"content":"- `email`: Must follow the format of xyz@abc.wsd","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"jonasongg"},"content":"- `telegramHandle`: Only alphanumeric characters and underscore are allowed","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"jonasongg"},"content":"- `tag`: Only alphanumeric characters are allowed","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"jonasongg"},"content":"#### Example of usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"WinSheng1"},"content":"`editMember 1 /name Aliciaa /phone 12345678`","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"jonasongg"},"content":"`editm 1 /name Aliciaa /phone 12345678`","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"jonasongg"},"content":"#### Expected Outcome:","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"WinSheng1"},"content":"Edited member: Aliciaa","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"jonasongg"},"content":"#### If name is invalid:","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"WinSheng1"},"content":"Names should only contain alphanumeric characters and spaces, and it should not be blank","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"jonasongg"},"content":"#### If phone number is invalid:","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"WinSheng1"},"content":"Phone numbers should only contain numbers, and it should be at least 3 digits long","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"jonasongg"},"content":"#### If telegram handle is invalid:","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"WinSheng1"},"content":"Telegram handle should follow the format: @exampleHandle ","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"jonasongg"},"content":"#### If tag is invalid:","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"WinSheng1"},"content":"Tags names should be alphanumeric","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"jonasongg"},"content":"### Find Member(s)","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"jonasongg"},"content":"Find and generate a list of all existing member(s) whose information contain any of specified keyword(s). Keywords to be","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"jonasongg"},"content":"separated by a spacing between 2 keywords.","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"jonasongg"},"content":"#### Usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":197,"author":{"gitId":"WinSheng1"},"content":"`findMember {keyword(s)}`","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"jonasongg"},"content":"`findm {keyword(s)}`","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"jonasongg"},"content":"#### Acceptable values for parameters:","lastModifiedDate":"2023-10-28"},{"lineNumber":202,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"jonasongg"},"content":"- `keyword(s)`: All alphanumerical characters are allowed","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"jonasongg"},"content":"#### Example of usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"WinSheng1"},"content":"`findMember Alicia`","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":209,"author":{"gitId":"jonasongg"},"content":"`findm Alicia`","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"jonasongg"},"content":"#### Expected Outcome:","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":214,"author":{"gitId":"WinSheng1"},"content":"1 member listed!","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":217,"author":{"gitId":"jonasongg"},"content":"#### If unable to find member(s) with matching keyword(s)","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":219,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":220,"author":{"gitId":"WinSheng1"},"content":"0 members listed!","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":222,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":223,"author":{"gitId":"jonasongg"},"content":"### View Members/Applicants","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":225,"author":{"gitId":"jonasongg"},"content":"Generates a list of all existing member(s)/applicant(s). An example of where you might want to use this command is if","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"jonasongg"},"content":"you want to go back to viewing all members after a search with `findMember`.","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"jonasongg"},"content":"#### Usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":229,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":230,"author":{"gitId":"jonasongg"},"content":"##### Viewing all members:","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"WinSheng1"},"content":"`viewMembers`","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":234,"author":{"gitId":"jonasongg"},"content":"`viewm`","lastModifiedDate":"2023-10-28"},{"lineNumber":235,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":236,"author":{"gitId":"jonasongg"},"content":"##### Viewing all applicants:","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"jonasongg"},"content":"`viewApplicants`","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"jonasongg"},"content":"`viewa`","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"jonasongg"},"content":"[//]: # (#### Expected Outcome:)","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"jonasongg"},"content":"[//]: # ()","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"jonasongg"},"content":"[//]: # (##### Members:)","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"jonasongg"},"content":"[//]: # (```)","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"jonasongg"},"content":"[//]: # (Listed all members)","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"jonasongg"},"content":"[//]: # (```)","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"jonasongg"},"content":"[//]: # (##### Applicants:)","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"jonasongg"},"content":"[//]: # (```)","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"jonasongg"},"content":"[//]: # (Listed all applicants)","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"jonasongg"},"content":"[//]: # (```)","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"jonasongg"},"content":"### Delete Applicant","lastModifiedDate":"2023-10-28"},{"lineNumber":263,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":264,"author":{"gitId":"WinSheng1"},"content":"The applicant at the specified index will be deleted from the applicants list.","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":266,"author":{"gitId":"jonasongg"},"content":"#### Usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":267,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":268,"author":{"gitId":"Saezenn"},"content":"`deleteApplicant {index}`","lastModifiedDate":"2023-10-06"},{"lineNumber":269,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":270,"author":{"gitId":"jonasongg"},"content":"`dela {index}`","lastModifiedDate":"2023-10-28"},{"lineNumber":271,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":272,"author":{"gitId":"jonasongg"},"content":"#### Acceptable values for parameters:","lastModifiedDate":"2023-10-28"},{"lineNumber":273,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":274,"author":{"gitId":"jonasongg"},"content":"- `index`: Only numbers are allowed, starting from 1","lastModifiedDate":"2023-10-28"},{"lineNumber":275,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":276,"author":{"gitId":"jonasongg"},"content":"#### Example of usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":277,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":278,"author":{"gitId":"WinSheng1"},"content":"`deleteApplicant 1`","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"jonasongg"},"content":"`dela 1`","lastModifiedDate":"2023-10-28"},{"lineNumber":281,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":282,"author":{"gitId":"jonasongg"},"content":"#### Expected Outcome:","lastModifiedDate":"2023-10-28"},{"lineNumber":283,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":284,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":285,"author":{"gitId":"WinSheng1"},"content":"Deleted applicant: Alicia","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":287,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":288,"author":{"gitId":"jonasongg"},"content":"#### If index is out of range:","lastModifiedDate":"2023-10-28"},{"lineNumber":289,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":291,"author":{"gitId":"WinSheng1"},"content":"The applicant index provided is invalid","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":293,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":294,"author":{"gitId":"jonasongg"},"content":"#### If there are no applicants:","lastModifiedDate":"2023-10-28"},{"lineNumber":295,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":296,"author":{"gitId":"WinSheng1"},"content":"Generates a list of all existing applicants in the applicants list.","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":298,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":299,"author":{"gitId":"WinSheng1"},"content":"The applicant index provided is invalid","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":301,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":302,"author":{"gitId":"jonasongg"},"content":"### Edit Applicant","lastModifiedDate":"2023-10-28"},{"lineNumber":303,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":304,"author":{"gitId":"jonasongg"},"content":"The applicant at the specified index will have its specified fields edited. At least 1 field to be specified, not all","lastModifiedDate":"2023-10-28"},{"lineNumber":305,"author":{"gitId":"jonasongg"},"content":"fields have to be specified.","lastModifiedDate":"2023-10-28"},{"lineNumber":306,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":307,"author":{"gitId":"jonasongg"},"content":"#### Usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":308,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"WinSheng1"},"content":"`editApplicant {index} /name {applicantName} /phone {phoneNumber}`","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"jonasongg"},"content":"`edita {index} /name {applicantName} /phone {phoneNumber}`","lastModifiedDate":"2023-10-28"},{"lineNumber":312,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":313,"author":{"gitId":"jonasongg"},"content":"#### Acceptable values for parameters:","lastModifiedDate":"2023-10-28"},{"lineNumber":314,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":315,"author":{"gitId":"jonasongg"},"content":"- `index`: Only numbers are allowed, starting from 1","lastModifiedDate":"2023-10-28"},{"lineNumber":316,"author":{"gitId":"jonasongg"},"content":"- `applicantName`: Only alphabetical characters, @, () are allowed","lastModifiedDate":"2023-10-28"},{"lineNumber":317,"author":{"gitId":"jonasongg"},"content":"- `phoneNumber`: Only numbers are allowed","lastModifiedDate":"2023-10-28"},{"lineNumber":318,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":319,"author":{"gitId":"jonasongg"},"content":"#### Example of usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":320,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":321,"author":{"gitId":"WinSheng1"},"content":"`editApplicant 1 /name Aliciaa /phone 12345678`","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"jonasongg"},"content":"`edita 1 /name Aliciaa /phone 12345678`","lastModifiedDate":"2023-10-28"},{"lineNumber":324,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":325,"author":{"gitId":"jonasongg"},"content":"#### Expected Outcome:","lastModifiedDate":"2023-10-28"},{"lineNumber":326,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":327,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":328,"author":{"gitId":"WinSheng1"},"content":"Edited applicant: Aliciaa","lastModifiedDate":"2023-10-26"},{"lineNumber":329,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":330,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":331,"author":{"gitId":"jonasongg"},"content":"#### If name is invalid:","lastModifiedDate":"2023-10-28"},{"lineNumber":332,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":333,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":334,"author":{"gitId":"WinSheng1"},"content":"Names should only contain alphanumeric characters and spaces, and it should not be blank","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":337,"author":{"gitId":"jonasongg"},"content":"#### If phone number is invalid:","lastModifiedDate":"2023-10-28"},{"lineNumber":338,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":339,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":340,"author":{"gitId":"WinSheng1"},"content":"Phone numbers should only contain numbers, and it should be at least 3 digits long","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":343,"author":{"gitId":"jonasongg"},"content":"### Find Applicant(s)","lastModifiedDate":"2023-10-28"},{"lineNumber":344,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":345,"author":{"gitId":"jonasongg"},"content":"Find and generate a list of all existing applicant(s) whose information contain any of specified keyword(s). Keywords to","lastModifiedDate":"2023-10-28"},{"lineNumber":346,"author":{"gitId":"jonasongg"},"content":"be separated by a spacing between 2 keywords.","lastModifiedDate":"2023-10-28"},{"lineNumber":347,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":348,"author":{"gitId":"jonasongg"},"content":"#### Usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":349,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":350,"author":{"gitId":"WinSheng1"},"content":"`findApplicant {keyword(s)}`","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":352,"author":{"gitId":"jonasongg"},"content":"`finda {keyword(s)}`","lastModifiedDate":"2023-10-28"},{"lineNumber":353,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":354,"author":{"gitId":"jonasongg"},"content":"#### Acceptable values for parameters:","lastModifiedDate":"2023-10-28"},{"lineNumber":355,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":356,"author":{"gitId":"jonasongg"},"content":"- `keyword(s)`: All alphanumerical characters are allowed","lastModifiedDate":"2023-10-28"},{"lineNumber":357,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"jonasongg"},"content":"#### Example of usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":359,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":360,"author":{"gitId":"WinSheng1"},"content":"`findApplicant Alicia`","lastModifiedDate":"2023-10-26"},{"lineNumber":361,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":362,"author":{"gitId":"jonasongg"},"content":"`finda Alicia`","lastModifiedDate":"2023-10-28"},{"lineNumber":363,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":364,"author":{"gitId":"jonasongg"},"content":"#### Expected Outcome:","lastModifiedDate":"2023-10-28"},{"lineNumber":365,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":366,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":367,"author":{"gitId":"WinSheng1"},"content":"1 applicant listed!","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"WinSheng1"},"content":"```","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":370,"author":{"gitId":"jonasongg"},"content":"#### If unable to find applicant(s) with matching keyword(s)","lastModifiedDate":"2023-10-28"},{"lineNumber":371,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":372,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":373,"author":{"gitId":"WinSheng1"},"content":"0 applicants listed!","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":375,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":376,"author":{"gitId":"jonasongg"},"content":"### Copy Member/Applicant","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":378,"author":{"gitId":"jonasongg"},"content":"Copies the details of the member/applicant at the specified index to the clipboard.","lastModifiedDate":"2023-11-02"},{"lineNumber":379,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"jonasongg"},"content":"#### Usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":381,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":382,"author":{"gitId":"jonasongg"},"content":"##### Copying member:","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":384,"author":{"gitId":"jonasongg"},"content":"`copyMember {index}`","lastModifiedDate":"2023-11-02"},{"lineNumber":385,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"jonasongg"},"content":"`cpm {index}`","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"jonasongg"},"content":"##### Copying applicant:","lastModifiedDate":"2023-11-02"},{"lineNumber":389,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":390,"author":{"gitId":"jonasongg"},"content":"`copyApplicant {index}`","lastModifiedDate":"2023-11-02"},{"lineNumber":391,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"jonasongg"},"content":"`cpa {index}`","lastModifiedDate":"2023-11-02"},{"lineNumber":393,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":394,"author":{"gitId":"jonasongg"},"content":"#### Acceptable values for parameters:","lastModifiedDate":"2023-11-02"},{"lineNumber":395,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":396,"author":{"gitId":"jonasongg"},"content":"- `index`: Only numbers are allowed, starting from 1","lastModifiedDate":"2023-11-02"},{"lineNumber":397,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":398,"author":{"gitId":"jonasongg"},"content":"#### Example of usage:","lastModifiedDate":"2023-11-02"},{"lineNumber":399,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":400,"author":{"gitId":"jonasongg"},"content":"`copyMember 1`","lastModifiedDate":"2023-11-02"},{"lineNumber":401,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":402,"author":{"gitId":"jonasongg"},"content":"`cpm 1`","lastModifiedDate":"2023-11-02"},{"lineNumber":403,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":404,"author":{"gitId":"jonasongg"},"content":"#### Expected Outcome:","lastModifiedDate":"2023-10-28"},{"lineNumber":405,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":406,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":407,"author":{"gitId":"jonasongg"},"content":"Copied details of member to clipboard:","lastModifiedDate":"2023-11-02"},{"lineNumber":408,"author":{"gitId":"jonasongg"},"content":"Name: Alex Yeoh","lastModifiedDate":"2023-11-02"},{"lineNumber":409,"author":{"gitId":"jonasongg"},"content":"Phone: 87438807","lastModifiedDate":"2023-11-02"},{"lineNumber":410,"author":{"gitId":"jonasongg"},"content":"Email: alexyeoh@example.com","lastModifiedDate":"2023-11-02"},{"lineNumber":411,"author":{"gitId":"jonasongg"},"content":"Telegram: @alexyeoh","lastModifiedDate":"2023-11-02"},{"lineNumber":412,"author":{"gitId":"jonasongg"},"content":"Tags: [Friend]","lastModifiedDate":"2023-11-02"},{"lineNumber":413,"author":{"gitId":"jonasongg"},"content":"Tasks: [Finish Proposal]","lastModifiedDate":"2023-11-02"},{"lineNumber":414,"author":{"gitId":"jonasongg"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":416,"author":{"gitId":"jonasongg"},"content":"#### If index is out of range:","lastModifiedDate":"2023-11-02"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":418,"author":{"gitId":"jonasongg"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":419,"author":{"gitId":"jonasongg"},"content":"The member index provided is invalid","lastModifiedDate":"2023-11-02"},{"lineNumber":420,"author":{"gitId":"Saezenn"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":422,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-06"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":424,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2023-10-06"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":426,"author":{"gitId":"WinSheng1"},"content":"| Action                | Format                                                                                                   | Example(s)                                                                     |","lastModifiedDate":"2023-10-26"},{"lineNumber":427,"author":{"gitId":"WinSheng1"},"content":"|-----------------------|----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-26"},{"lineNumber":428,"author":{"gitId":"WinSheng1"},"content":"| **Add Member**        | `addm /name {memberName} /phone {phoneNumber} /email {email} /tele {telegramHandle} /tag {tag}`          | `addm /name Alicia /phone 92345678 /email Alicia@xyz.com /tele @Alicia`        |","lastModifiedDate":"2023-10-26"},{"lineNumber":429,"author":{"gitId":"WinSheng1"},"content":"| **Delete Member**     | `delm {index}`                                                                                           | `delm 1`                                                                       |","lastModifiedDate":"2023-10-26"},{"lineNumber":430,"author":{"gitId":"WinSheng1"},"content":"| **Edit Member**       | `editm {index} /name {memberName} /phone {phoneNumber} /email {email} /tele {telegramHandle} /tag {tag}` | `editm 1 /name Aliciaa /phone 12345678`  \u003cbr/\u003e`editm 1 /email Aliciaa@xyz.com` |","lastModifiedDate":"2023-10-26"},{"lineNumber":431,"author":{"gitId":"WinSheng1"},"content":"| **Find Member(s)**    | `findm {keyword}`                                                                                        | `findm Alicia`\u003cbr/\u003e`findm John 92345678`                                       |","lastModifiedDate":"2023-10-26"},{"lineNumber":432,"author":{"gitId":"WinSheng1"},"content":"| **View Member(s)**    | `viewm`                                                                                                  | `viewm`                                                                        |","lastModifiedDate":"2023-10-26"},{"lineNumber":433,"author":{"gitId":"WinSheng1"},"content":"| **Add Applicant**     | `adda /name {applicantName} /phone {phoneNumber}`                                                        | `adda /name Alicia /phone 92345678`                                            |","lastModifiedDate":"2023-10-26"},{"lineNumber":434,"author":{"gitId":"WinSheng1"},"content":"| **Delete Applicant**  | `dela {index}`                                                                                           | `dela 1`                                                                       |","lastModifiedDate":"2023-10-26"},{"lineNumber":435,"author":{"gitId":"WinSheng1"},"content":"| **Edit Applicant**    | `edita {index} /name {applicantName} /phone {phoneNumber}`                                               | `edita 1 /name John`\u003cbr/\u003e`edita 1 /name Aliciaa /phone 12345678`               |","lastModifiedDate":"2023-10-26"},{"lineNumber":436,"author":{"gitId":"WinSheng1"},"content":"| **Find Applicant(s)** | `finda {keyword}`                                                                                        | `finda Alicia`\u003cbr/\u003e`finda John 92345678`                                       |","lastModifiedDate":"2023-10-26"},{"lineNumber":437,"author":{"gitId":"WinSheng1"},"content":"| **View Applicant(s)** | `viewa`                                                                                                  | `viewa`                                                                        |","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"matochichap":18,"Saezenn":51,"WinSheng1":82,"-":88,"jonasongg":198}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jonasongg"},"content":"    content: \"ClubMembersContacts\";","lastModifiedDate":"2023-10-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"jonasongg":1}},{"path":"docs/diagrams/ModelPersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"!include style.puml","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"class \"{abstract}\\nPerson\" as Person","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"class Member extends Person","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"class Applicant extends Person","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"class Name","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"class Phone","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"class Email","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"class Telegram","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"class Tags","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"Person *-\u003e \"1\" Name","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"Member *-\u003e \"1\" Phone","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"Member *-\u003e \"1\" Email","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"Member *-\u003e \"1\" Telegram","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"Member *-\u003e \"*\" Tags","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"Applicant *-\u003e \"1\" Phone","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"matochichap":23}},{"path":"docs/diagrams/TagListClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"!include style.puml","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nObserver\" as Observer {","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"    + update()","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"class TagList {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"    + addUi(Observer)","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"    - notifyUis()","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"class TagListPanel implements Observer {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"    + update()","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"TagList -\u003e \"*\" Observer","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"matochichap":23}},{"path":"docs/diagrams/ViewTagsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"!include style.puml","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"participant \":DeleteMemberCommand\" as DeleteMemberCommand LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"-\u003e DeleteMemberCommand: execute(modelManager)","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"activate DeleteMemberCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"DeleteMemberCommand -\u003e ModelManager: deleteMember(m)","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"activate ModelManager","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"ModelManager -\u003e AddressBook: updateTags()","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"activate AddressBook","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"ModelManager \u003c-- AddressBook","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"deactivate AddressBook","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"DeleteMemberCommand \u003c-- ModelManager","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"deactivate ModelManager","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"matochichap":29}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"title: ClubMembersContacts","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"ClubMembersContacts is an app to help EXCO members of School of Computing\u0027s CCAs to manage the contacts of all their members and applicants in a fast and convenient yet powerful way through a CLI or text-based interface for greater speed.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"* It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"* It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"* If you are interested in using ClubMembersContacts, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"* If you are interested about developing ClubMembersContacts, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"-":15,"jonasongg":7}},{"path":"docs/team/alfredbenoel.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"layout: page","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"title: Alfred\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"### Project: ClubMembersContacts","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"ClubMembersContacts is an application that allows users to keep track of their club members\u0027 contact information.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"Below is a summary of my contributions to the project.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"* Code Contributed: [link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dalfredbenoel\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"* Enhancements Implemented:","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"    * to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"* Contributions to the UG:","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"    * to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"* Contributions to the DG:","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"    * to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"* Contributions to team-based tasks:","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"    * to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"* Review/mentoring contributions:","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"    * to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"* Contributions beyond the project team:","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"    * to be added soon","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"AlfredBeNoel":24}},{"path":"docs/team/jonasongg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"title: Jonas\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"### Project: ClubMembersContacts","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"ClubMembersContacts is an application that allows users to keep track of their club members\u0027 contact information.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"Below is a summary of my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"* Code Contributed: [link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djonasongg\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"* Enhancements Implemented:","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"* Contributions to the UG:","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"* Contributions to the DG:","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"* Contributions to team-based tasks:","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"* Review/mentoring contributions:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"* Contributions beyond the project team:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"jonasongg":24}},{"path":"docs/team/matochichap.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"layout: page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"title: Chan Rui Jia\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"### Project: ClubMembersContacts","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"ClubMembersContacts is an application that allows users to keep track of their club members\u0027 contact information.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"* Code Contributed: [link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djonasongg\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"    * What it does: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"    * Justification: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"    * Highlights: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"    * Credits: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"    * to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"    * to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"    * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"        * to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"        * to be added soon","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"        * to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"    * to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"    * to be added soon","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"matochichap":41}},{"path":"docs/team/saezenn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"title: Saezenn\u0027s (Alicia) Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"### Project: ClubMembersContacts","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"ClubMembersContacts is an application that allows users to keep track of their club members\u0027 contact information.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"Below is a summary of my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"* Code Contributed: [link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsaezenn\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"* Enhancements Implemented:","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"* Contributions to the UG:","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"* Contributions to the DG:","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"* Contributions to team-based tasks:","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"* Review/mentoring contributions:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"* Contributions beyond the project team:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"Saezenn":25}},{"path":"docs/team/winsheng1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"title: Lim Win Sheng\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"### Project: ClubMembersContacts","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"ClubMembersContacts is an application that allows users to keep track of their club members\u0027 contact information.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"WinSheng1":32}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"Let\u0027s walk you through the implementation of a new command —`remark`.","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"edit it if required. The command should have the following format:","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command`","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"the `ResultDisplay`.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"a `CommandResult` with an accompanying message.","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"instance of `RemarkCommand`.","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"You can refer to the changes in","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do.","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"progress.","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"our code is functioning as intended.","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"jonasongg"},"content":"Your code should look something","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"jonasongg"},"content":"like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594)","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"jonasongg"},"content":"after you are done.","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"jonasongg"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser`","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"jonasongg"},"content":"interface.","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"jonasongg"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"jonasongg"},"content":"provided for the function to understand what it does.","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"jonasongg"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"jonasongg"},"content":"of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"jonasongg"},"content":"look through `ArgumentMultimap` :","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"jonasongg"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"jonasongg"},"content":"existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"jonasongg"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"jonasongg"},"content":"create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"jonasongg"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"jonasongg"},"content":"in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"jonasongg"},"content":"implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark`","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"jonasongg"},"content":"class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"jonasongg"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"jonasongg"},"content":"reuse a significant bit of code.","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"jonasongg"},"content":"A copy-paste and search-replace later, you should have something","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"jonasongg"},"content":"like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece).","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"jonasongg"},"content":"Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"jonasongg"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"jonasongg"},"content":"should be relatively simple changes.","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"jonasongg"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each","lastModifiedDate":"2023-10-18"},{"lineNumber":268,"author":{"gitId":"jonasongg"},"content":"person.","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"jonasongg"},"content":"Simply add the following","lastModifiedDate":"2023-10-18"},{"lineNumber":271,"author":{"gitId":"jonasongg"},"content":"to [`seedu.address.ui.MemberCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"jonasongg"},"content":"**`MemberCard.java`:**","lastModifiedDate":"2023-10-18"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"jonasongg"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like","lastModifiedDate":"2023-10-18"},{"lineNumber":281,"author":{"gitId":"jonasongg"},"content":"Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2023-10-18"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"jonasongg"},"content":"Then insert the following","lastModifiedDate":"2023-10-18"},{"lineNumber":284,"author":{"gitId":"jonasongg"},"content":"into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"jonasongg"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors","lastModifiedDate":"2023-10-18"},{"lineNumber":303,"author":{"gitId":"jonasongg"},"content":"accordingly to store our new addition.","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"jonasongg"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use","lastModifiedDate":"2023-10-18"},{"lineNumber":308,"author":{"gitId":"jonasongg"},"content":"the updated `Person`!","lastModifiedDate":"2023-10-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"jonasongg"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and","lastModifiedDate":"2023-10-18"},{"lineNumber":317,"author":{"gitId":"jonasongg"},"content":"check that you have got everything in order!","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"jonasongg"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson.","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"jonasongg"},"content":"Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2023-10-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"jonasongg"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not","lastModifiedDate":"2023-10-18"},{"lineNumber":329,"author":{"gitId":"jonasongg"},"content":"doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-10-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"jonasongg"},"content":"Just","lastModifiedDate":"2023-10-18"},{"lineNumber":341,"author":{"gitId":"jonasongg"},"content":"add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2023-10-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"jonasongg"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However,","lastModifiedDate":"2023-10-18"},{"lineNumber":357,"author":{"gitId":"jonasongg"},"content":"this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the","lastModifiedDate":"2023-10-18"},{"lineNumber":358,"author":{"gitId":"jonasongg"},"content":"last few steps.","lastModifiedDate":"2023-10-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"jonasongg"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in","lastModifiedDate":"2023-10-18"},{"lineNumber":363,"author":{"gitId":"jonasongg"},"content":"a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2023-10-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":394,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":395,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":407,"author":{"gitId":"jonasongg"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code","lastModifiedDate":"2023-10-18"},{"lineNumber":408,"author":{"gitId":"jonasongg"},"content":"bases where a change might lead to unintended behavior.","lastModifiedDate":"2023-10-18"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":410,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":412,"author":{"gitId":"jonasongg"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would","lastModifiedDate":"2023-10-18"},{"lineNumber":413,"author":{"gitId":"jonasongg"},"content":"be like the test cases","lastModifiedDate":"2023-10-18"},{"lineNumber":414,"author":{"gitId":"jonasongg"},"content":"in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01).","lastModifiedDate":"2023-10-18"},{"lineNumber":415,"author":{"gitId":"jonasongg"},"content":"Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next","lastModifiedDate":"2023-10-18"},{"lineNumber":416,"author":{"gitId":"jonasongg"},"content":"section.","lastModifiedDate":"2023-10-18"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":420,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":422,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":423,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":425,"author":{"gitId":"jonasongg"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring","lastModifiedDate":"2023-10-18"},{"lineNumber":426,"author":{"gitId":"jonasongg"},"content":"up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2023-10-18"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":428,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":430,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":434,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":436,"author":{"gitId":"jonasongg"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the","lastModifiedDate":"2023-10-18"},{"lineNumber":437,"author":{"gitId":"jonasongg"},"content":"expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the","lastModifiedDate":"2023-10-18"},{"lineNumber":438,"author":{"gitId":"jonasongg"},"content":"best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2023-10-18"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":440,"author":{"gitId":"jonasongg"},"content":"You should end up with a test that looks something","lastModifiedDate":"2023-10-18"},{"lineNumber":441,"author":{"gitId":"jonasongg"},"content":"like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2023-10-18"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":443,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":445,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":360,"jonasongg":85}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.fields.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"matochichap":1,"-":111}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     * Returns an unmodifiable view of the filtered list of member","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"    ObservableList\u003cMember\u003e getFilteredMemberList();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"     * Returns an unmodifiable view of the filtered list of applicant","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"     * Returns an unmodifiable view of the filtered list of tags","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"    ObservableList\u003cTag\u003e getFilteredTagList();","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"matochichap":6,"AlfredBeNoel":4,"-":47,"jonasongg":10}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"AlfredBeNoel"},"content":"    public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"AlfredBeNoel"},"content":"        return model.getFilteredMemberList();","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"matochichap"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"matochichap"},"content":"        return model.getFilteredApplicantList();","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"matochichap"},"content":"    public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"matochichap"},"content":"        return model.getFilteredTagList();","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"AlfredBeNoel"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"AlfredBeNoel"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"matochichap":12,"AlfredBeNoel":8,"-":85}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"    public static final String MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX \u003d \"The applicant index provided is invalid\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX \u003d \"The member index provided is invalid\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_MEMBERS_LISTED_OVERVIEW \u003d \"%1$d members listed!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"    public static final String MESSAGE_APPLICANTS_LISTED_OVERVIEW \u003d \"%1$d applicants listed!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"        // Note: only name is shown since Person class only has a name field.","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"        builder.append(person.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"matochichap":2,"Saezenn":3,"WinSheng1":3,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/AddApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":" * Adds an applicant to the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"public class AddApplicantCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"    public static final String COMMAND_WORD \u003d \"addApplicant\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"adda\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an applicant to the applicant list. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"        + \"\\nParameters: \"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"        + PREFIX_NAME + \" {applicantName} \"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"        + PREFIX_PHONE + \" {phoneNumber} \"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"        + \"\\nExample: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"        + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"        + PREFIX_PHONE + \" 98765432\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New applicant added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in the address book\";","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"    private final Applicant toAdd;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"     * Creates an AddApplicantCommand to add the specified {@code Applicant}","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     * @param applicant The applicant to add.","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"    public AddApplicantCommand(Applicant applicant) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"        toAdd \u003d applicant;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"        if (model.hasApplicant(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"        model.addApplicant(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"matochichap"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"matochichap"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"matochichap"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"matochichap"},"content":"        if (!(other instanceof AddApplicantCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"matochichap"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"matochichap"},"content":"        AddApplicantCommand otherCommand \u003d (AddApplicantCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"matochichap"},"content":"        return toAdd.equals(otherCommand.toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"matochichap"},"content":"            .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"matochichap"},"content":"            .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"matochichap":72,"jonasongg":5}},{"path":"src/main/java/seedu/address/logic/commands/AddMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":" * Adds a member to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"public class AddMemberCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String COMMAND_WORD \u003d \"addMember\";","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"addm\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a member to the member list. \"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"        + \"\\nParameters: \"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"        + PREFIX_NAME + \" {memberName} \"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"        + PREFIX_PHONE + \" {phoneNumber} \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"        + PREFIX_EMAIL + \" {email} \"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"        + PREFIX_TELEGRAM + \" {telegramHandle} \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        + \"\\nExample: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"        + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"        + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"        + PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"        + PREFIX_TELEGRAM + \" @johndoe \"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"        + PREFIX_TAG + \" WelfareHead\";","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New member added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"This member already exists in the member list\";","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"    private final Member toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"     * Creates an AddMemberCommand to add the specified {@code Member}","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"     * @param member The member to add.","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlfredBeNoel"},"content":"    public AddMemberCommand(Member member) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(member);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"AlfredBeNoel"},"content":"        toAdd \u003d member;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"AlfredBeNoel"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"        if (model.hasMember(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"AlfredBeNoel"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"AlfredBeNoel"},"content":"        model.addMember(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"AlfredBeNoel"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"AlfredBeNoel"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"AlfredBeNoel"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"AlfredBeNoel"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"AlfredBeNoel"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"AlfredBeNoel"},"content":"        if (!(other instanceof AddMemberCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"AlfredBeNoel"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"AlfredBeNoel"},"content":"        AddMemberCommand otherAddMemberCommand \u003d (AddMemberCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"AlfredBeNoel"},"content":"        return toAdd.equals(otherAddMemberCommand.toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"AlfredBeNoel"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"AlfredBeNoel"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"AlfredBeNoel"},"content":"            .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"AlfredBeNoel"},"content":"            .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"matochichap":1,"AlfredBeNoel":79,"jonasongg":6}},{"path":"src/main/java/seedu/address/logic/commands/AddMemberTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":" * Assigns a task to the Member in the address book.","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"public class AddMemberTaskCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String COMMAND_WORD \u003d \"addTask\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String COMMAND_ALIAS \u003d \"addt\";","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the specified member \"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"        + \"by the index number used in the displayed member list. \\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"        + PREFIX_TASK + \" {taskName} \";","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String MESSAGE_ADD_TODO_SUCCESS \u003d \"Task added to member %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"    private final Index index;","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"    private final AddMemberTaskDescriptor addMemberTaskDescriptor;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     * Creates an AddMemberTaskCommand to add the specified {@code Member}","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"     * @param index                   The index of the member to add the task to.","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"     * @param addMemberTaskDescriptor The AddMemberTaskDescriptor containing the task to be added.","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"    public AddMemberTaskCommand(Index index, AddMemberTaskDescriptor addMemberTaskDescriptor) {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(addMemberTaskDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"        this.addMemberTaskDescriptor \u003d new AddMemberTaskDescriptor(addMemberTaskDescriptor);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"AlfredBeNoel"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"AlfredBeNoel"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"AlfredBeNoel"},"content":"        Member memberToAssign \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"AlfredBeNoel"},"content":"        Member taskAddedMember \u003d assignTaskToMember(memberToAssign, addMemberTaskDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"AlfredBeNoel"},"content":"        model.setMember(memberToAssign, taskAddedMember);","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"AlfredBeNoel"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"AlfredBeNoel"},"content":"        model.setTaskListForMember(taskAddedMember);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"AlfredBeNoel"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TODO_SUCCESS, Messages.format(memberToAssign)));","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"AlfredBeNoel"},"content":"    private static Member assignTaskToMember(Member member, AddMemberTaskDescriptor addMemberTaskDescriptor) {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"AlfredBeNoel"},"content":"        assert member !\u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"AlfredBeNoel"},"content":"        List\u003cTask\u003e updatedTasks;","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"AlfredBeNoel"},"content":"        if (addMemberTaskDescriptor.getTasks().isPresent()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"AlfredBeNoel"},"content":"            updatedTasks \u003d addMemberTaskDescriptor.getTasks().get();","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"AlfredBeNoel"},"content":"            updatedTasks.addAll(member.getTasks());","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"AlfredBeNoel"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"AlfredBeNoel"},"content":"            updatedTasks \u003d member.getTasks();","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"AlfredBeNoel"},"content":"        return new Member(member.getName(), member.getPhone(), member.getEmail(),","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"AlfredBeNoel"},"content":"            member.getTelegram(), member.getTags(), updatedTasks);","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"AlfredBeNoel"},"content":"     * Helper function for AddMemberTaskCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"AlfredBeNoel"},"content":"    public static class AddMemberTaskDescriptor {","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"AlfredBeNoel"},"content":"        private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"        /**","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"         * Default constructor.","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"         */","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"AlfredBeNoel"},"content":"        public AddMemberTaskDescriptor() {","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"AlfredBeNoel"},"content":"        /**","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"AlfredBeNoel"},"content":"         * Copy constructor.","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"AlfredBeNoel"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"         *","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"         * @param toCopy The AddMemberTaskDescriptor to copy from.","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"AlfredBeNoel"},"content":"         */","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"AlfredBeNoel"},"content":"        public AddMemberTaskDescriptor(AddMemberTaskDescriptor toCopy) {","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"AlfredBeNoel"},"content":"            setTasks(toCopy.tasks);","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"AlfredBeNoel"},"content":"        public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"AlfredBeNoel"},"content":"            this.tasks \u003d tasks;","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"AlfredBeNoel"},"content":"        public Optional\u003cList\u003cTask\u003e\u003e getTasks() {","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"AlfredBeNoel"},"content":"            return Optional.ofNullable(this.tasks);","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"AlfredBeNoel"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"AlfredBeNoel"},"content":"        public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"AlfredBeNoel"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"AlfredBeNoel"},"content":"                .add(\"tasks\", tasks)","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"AlfredBeNoel"},"content":"                .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"AlfredBeNoel":112,"jonasongg":10}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"     * The application should exit.","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     * @param feedbackToUser The feedback to show to the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     * @param showHelp       Whether to show help information to the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"     * @param exit           Whether to exit the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"     * @param feedbackToUser The feedback to show to the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":80,"jonasongg":12}},{"path":"src/main/java/seedu/address/logic/commands/CopyApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import java.awt.datatransfer.Clipboard;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import java.awt.datatransfer.StringSelection;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":" * Copies an applicant from the address book to the clipboard.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"public class CopyApplicantCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_WORD \u003d \"copyApplicant\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"cpa\";","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"            + \": Copies the name and phone number of the applicant at the specified index to clipboard.\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    public static final String MESSAGE_COPY_APPLICANT_SUCCESS \u003d \"Copied details of applicant to clipboard:\\n%1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    private final Index applicantIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"     * Creates a CopyApplicantCommand to copy the {@code Applicant} at the specified {@code Index}.","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     * @param applicantIndex The index of the applicant to copy.","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    public CopyApplicantCommand(Index applicantIndex) {","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"        this.applicantIndex \u003d applicantIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        if (applicantIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"        Applicant applicantToCopy \u003d lastShownList.get(applicantIndex.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        String applicantString \u003d applicantToCopy.detailsToCopy();","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"        Clipboard clipboard \u003d Toolkit.getDefaultToolkit().getSystemClipboard();","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"        clipboard.setContents(new StringSelection(applicantString), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"        return new CommandResult(String.format(MESSAGE_COPY_APPLICANT_SUCCESS, applicantString));","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"        if (!(other instanceof CopyApplicantCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"        CopyApplicantCommand otherCopyCommand \u003d (CopyApplicantCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"        return applicantIndex.equals(otherCopyCommand.applicantIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"                .add(\"applicantIndex\", applicantIndex)","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jonasongg":80}},{"path":"src/main/java/seedu/address/logic/commands/CopyMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import java.awt.datatransfer.Clipboard;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import java.awt.datatransfer.StringSelection;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":" * Copies a member from the address book to the clipboard.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"public class CopyMemberCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_WORD \u003d \"copyMember\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"cpm\";","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"            + \": Copies the details (name, phone number, email, telegram, and tags) of the member\"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"            + \" at the specified index to clipboard\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    public static final String MESSAGE_COPY_MEMBER_SUCCESS \u003d \"Copied details of member to clipboard:\\n%1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    private final Index memberIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     * Creates a CopyMemberCommand to copy the {@code Member} at the specified {@code Index}.","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * @param memberIndex The index of the member to copy.","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    public CopyMemberCommand(Index memberIndex) {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        this.memberIndex \u003d memberIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"        if (memberIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        Member memberToCopy \u003d lastShownList.get(memberIndex.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"        String memberString \u003d memberToCopy.detailsToCopy();","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"        Clipboard clipboard \u003d Toolkit.getDefaultToolkit().getSystemClipboard();","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"        clipboard.setContents(new StringSelection(memberString), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"        return new CommandResult(String.format(MESSAGE_COPY_MEMBER_SUCCESS, memberString));","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"        if (!(other instanceof CopyMemberCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"        CopyMemberCommand otherCopyCommand \u003d (CopyMemberCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"        return memberIndex.equals(otherCopyCommand.memberIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"                .add(\"memberIndex\", memberIndex)","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jonasongg":81}},{"path":"src/main/java/seedu/address/logic/commands/DeleteApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":" * Deletes an applicant identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"public class DeleteApplicantCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"    public static final String COMMAND_WORD \u003d \"deleteApplicant\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"dela\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"        + \": Deletes the applicant identified by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"    public static final String MESSAGE_DELETE_APPLICANT_SUCCESS \u003d \"Deleted applicant: %1$s\";","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"    private final Index applicantIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"     * Creates a DeleteApplicantCommand to delete the specified {@code Applicant}","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"     * @param applicantIndex The index of the applicant to delete.","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"    public DeleteApplicantCommand(Index applicantIndex) {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"        this.applicantIndex \u003d applicantIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"        if (applicantIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"        Applicant applicantToDelete \u003d lastShownList.get(applicantIndex.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"        model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPLICANT_SUCCESS, Messages.format(applicantToDelete)));","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"        if (!(other instanceof DeleteApplicantCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand otherDeleteCommand \u003d (DeleteApplicantCommand) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"        return applicantIndex.equals(otherDeleteCommand.applicantIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"            .add(\"applicantIndex\", applicantIndex)","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"            .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Saezenn":69,"jonasongg":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":" * Deletes a member from the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"public class DeleteMemberCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"    public static final String COMMAND_WORD \u003d \"deleteMember\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"delm\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"        + \": Deletes the member identified by the index number used in the displayed member list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_DELETE_MEMBER_SUCCESS \u003d \"Deleted member: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"    private final Index memberIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"     * Creates a DeleteMemberCommand to delete the specified {@code Member}","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"     * @param memberIndex The index of the member to delete.","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"    public DeleteMemberCommand(Index memberIndex) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        this.memberIndex \u003d memberIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"        if (memberIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"        Member memberToDelete \u003d lastShownList.get(memberIndex.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"        model.deleteMember(memberToDelete);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEMBER_SUCCESS, Messages.format(memberToDelete)));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"        if (!(other instanceof DeleteMemberCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"        DeleteMemberCommand otherDeleteCommand \u003d (DeleteMemberCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"        return memberIndex.equals(otherDeleteCommand.memberIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"            .add(\"memberIndex\", memberIndex)","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"            .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"WinSheng1":68,"jonasongg":7}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMemberTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":" * Deletes a task from the Member in the address book.","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"public class DeleteMemberTaskCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTask\";","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"    public static final String COMMAND_ALIAS \u003d \"delt\";","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a specified task from the specified member \"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"            + \"by the index number used in the displayed member list \"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"            + \"and the task index used in the displayed task list. \\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"            + \"Parameters: MEMBER_INDEX (must be a positive integer) \"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"            + PREFIX_TASK + \"TASK_INDEX\";","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Task %1$s deleted from member %2$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"    private final Index memberIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"    private final Index taskIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"     * Creates an DeleteMemberTaskCommand to delete the specified {@code Task}","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"    public DeleteMemberTaskCommand(Index memberIndex, Index taskIndex) {","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(memberIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"        this.memberIndex \u003d memberIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"        if (memberIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"        Member memberToDeleteTaskFrom \u003d lastShownList.get(memberIndex.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d memberToDeleteTaskFrom.getTasks().size()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"        Task taskToDelete \u003d memberToDeleteTaskFrom.getTasks().get(taskIndex.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"        Member taskDeletedMember \u003d removeTaskFromMember(memberToDeleteTaskFrom, taskToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"        model.setMember(memberToDeleteTaskFrom, taskDeletedMember);","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"        model.setTaskListForMember(taskDeletedMember);","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete,","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"                Messages.format(memberToDeleteTaskFrom)));","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"    private static Member removeTaskFromMember(Member member, Task taskToDelete) {","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"        assert member !\u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"        List\u003cTask\u003e updatedTasks \u003d new ArrayList\u003c\u003e(member.getTasks());","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"        updatedTasks.remove(taskToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"        return new Member(member.getName(), member.getPhone(), member.getEmail(),","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"                member.getTelegram(), member.getTags(), updatedTasks);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"WinSheng1":81}},{"path":"src/main/java/seedu/address/logic/commands/EditApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.fields.InterviewTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":" * Edits the details of an existing applicant in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"public class EditApplicantCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"    public static final String COMMAND_WORD \u003d \"editApplicant\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"edita\";","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the applicant identified \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"        + \"by the index number used in the displayed applicant list. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"        + PREFIX_NAME + \" {applicantName} \"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"        + PREFIX_PHONE + \" {phoneNumber} \"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"        + PREFIX_INTERVIEW + \"{interviewTime}\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"        + PREFIX_NAME + \" Johnny Doe \"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"        + PREFIX_PHONE + \" 91234567\";","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_EDIT_APPLICANT_SUCCESS \u003d \"Edited applicant: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in the address book.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"    private final EditApplicantDescriptor editApplicantDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"     * @param index                   of the applicant in the filtered applicant list to edit","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"     * @param editApplicantDescriptor details to edit the applicant with","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"    public EditApplicantCommand(Index index, EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"        this.editApplicantDescriptor \u003d new EditApplicantDescriptor(editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"        Applicant applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"        Applicant editedApplicant \u003d createEditedApplicant(applicantToEdit, editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"        if (!applicantToEdit.isSamePerson(editedApplicant) \u0026\u0026 model.hasApplicant(editedApplicant)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"        model.setApplicant(applicantToEdit, editedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPLICANT_SUCCESS, Messages.format(editedApplicant)));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"     * Creates and returns a {@code Applicant} with the details of {@code applicantToEdit}","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"     * edited with {@code editApplicantDescriptor}.","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"    private static Applicant createEditedApplicant(Applicant applicantToEdit,","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"        EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"        assert applicantToEdit !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"WinSheng1"},"content":"        Name updatedName \u003d editApplicantDescriptor.getName().orElse(applicantToEdit.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"WinSheng1"},"content":"        Phone updatedPhone \u003d editApplicantDescriptor.getPhone().orElse(applicantToEdit.getPhone());","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"Saezenn"},"content":"        InterviewTime updatedInterviewTime \u003d editApplicantDescriptor.getInterviewTime()","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Saezenn"},"content":"            .orElse(applicantToEdit.getInterviewTime());","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"        return new Applicant(updatedName, updatedPhone, updatedInterviewTime);","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"WinSheng1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"WinSheng1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"WinSheng1"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"WinSheng1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"WinSheng1"},"content":"        if (!(other instanceof EditApplicantCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"WinSheng1"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand otherEditApplicantCommand \u003d (EditApplicantCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"WinSheng1"},"content":"        return index.equals(otherEditApplicantCommand.index)","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"WinSheng1"},"content":"            \u0026\u0026 editApplicantDescriptor.equals(otherEditApplicantCommand.editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"WinSheng1"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"WinSheng1"},"content":"            .add(\"index\", index)","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"WinSheng1"},"content":"            .add(\"editApplicantDescriptor\", editApplicantDescriptor)","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"WinSheng1"},"content":"            .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"WinSheng1"},"content":"     * Stores the details to edit the applicant with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"WinSheng1"},"content":"     * corresponding field value of the applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"WinSheng1"},"content":"    public static class EditApplicantDescriptor {","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"WinSheng1"},"content":"        private Name name;","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"WinSheng1"},"content":"        private Phone phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"Saezenn"},"content":"        private InterviewTime interviewTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"jonasongg"},"content":"        /**","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"jonasongg"},"content":"         * Default constructor.","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"jonasongg"},"content":"         */","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"jonasongg"},"content":"        public EditApplicantDescriptor() {","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"WinSheng1"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"WinSheng1"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"WinSheng1"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"jonasongg"},"content":"         *","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"jonasongg"},"content":"         * @param toCopy The {@code EditApplicantDescriptor} to copy.","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"WinSheng1"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"WinSheng1"},"content":"        public EditApplicantDescriptor(EditApplicantDescriptor toCopy) {","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"WinSheng1"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"WinSheng1"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"Saezenn"},"content":"            setInterviewTime(toCopy.interviewTime);","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"WinSheng1"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"WinSheng1"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"WinSheng1"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"WinSheng1"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"Saezenn"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, interviewTime);","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"WinSheng1"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"WinSheng1"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"WinSheng1"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"WinSheng1"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"WinSheng1"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"WinSheng1"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"WinSheng1"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"WinSheng1"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"Saezenn"},"content":"        public void setInterviewTime(InterviewTime interviewTime) {","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"Saezenn"},"content":"            this.interviewTime \u003d interviewTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"Saezenn"},"content":"        public Optional\u003cInterviewTime\u003e getInterviewTime() {","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"Saezenn"},"content":"            return Optional.ofNullable(interviewTime);","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"WinSheng1"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"WinSheng1"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"WinSheng1"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"WinSheng1"},"content":"                return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"WinSheng1"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"WinSheng1"},"content":"            if (!(other instanceof EditApplicantDescriptor)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"WinSheng1"},"content":"                return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"WinSheng1"},"content":"            EditApplicantDescriptor otherEditApplicantDescriptor \u003d (EditApplicantDescriptor) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"WinSheng1"},"content":"            return Objects.equals(name, otherEditApplicantDescriptor.name)","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"Saezenn"},"content":"                \u0026\u0026 Objects.equals(phone, otherEditApplicantDescriptor.phone)","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"Saezenn"},"content":"                \u0026\u0026 Objects.equals(interviewTime, otherEditApplicantDescriptor.interviewTime);","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"WinSheng1"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"WinSheng1"},"content":"        public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"WinSheng1"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"WinSheng1"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"WinSheng1"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"Saezenn"},"content":"                .add(\"interview time\", interviewTime)","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"WinSheng1"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Saezenn":22,"WinSheng1":174,"jonasongg":11}},{"path":"src/main/java/seedu/address/logic/commands/EditMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Telegram;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"public class EditMemberCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"    public static final String COMMAND_WORD \u003d \"editMember\";","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"editm\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the member identified \"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"        + \"by the index number used in the displayed member list. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"        + PREFIX_NAME + \" {memberName} \"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"        + PREFIX_PHONE + \" {phoneNumber} \"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"        + PREFIX_EMAIL + \" {email} \"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"        + PREFIX_TELEGRAM + \" {telegramHandle} \"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"        + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"        + PREFIX_EMAIL + \" johndoe@example.com\";","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_EDIT_MEMBER_SUCCESS \u003d \"Edited member: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"This member already exists in the address book.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"    private final EditMemberDescriptor editMemberDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"     * @param editMemberDescriptor details to edit the person with","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberCommand(Index index, EditMemberDescriptor editMemberDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(editMemberDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"        this.editMemberDescriptor \u003d new EditMemberDescriptor(editMemberDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"        Member memberToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"        Member editedMember \u003d createEditedMember(memberToEdit, editMemberDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"matochichap"},"content":"        if (!memberToEdit.isSamePerson(editedMember) \u0026\u0026 model.hasMember(editedMember)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"        model.setMember(memberToEdit, editedMember);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"matochichap"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEMBER_SUCCESS, Messages.format(editedMember)));","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"WinSheng1"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit}","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"WinSheng1"},"content":"     * edited with {@code editMemberDescriptor}.","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"WinSheng1"},"content":"    private static Member createEditedMember(Member memberToEdit, EditMemberDescriptor editMemberDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"WinSheng1"},"content":"        assert memberToEdit !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"WinSheng1"},"content":"        Name updatedName \u003d editMemberDescriptor.getName().orElse(memberToEdit.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"WinSheng1"},"content":"        Phone updatedPhone \u003d editMemberDescriptor.getPhone().orElse(memberToEdit.getPhone());","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"WinSheng1"},"content":"        Email updatedEmail \u003d editMemberDescriptor.getEmail().orElse(memberToEdit.getEmail());","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"WinSheng1"},"content":"        Telegram updatedTelegram \u003d editMemberDescriptor.getTelegram().orElse(memberToEdit.getTelegram());","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"WinSheng1"},"content":"        Set\u003cTag\u003e updatedTags \u003d editMemberDescriptor.getTags().orElse(memberToEdit.getTags());","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"WinSheng1"},"content":"        return new Member(updatedName, updatedPhone, updatedEmail, updatedTelegram, updatedTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"WinSheng1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"WinSheng1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"WinSheng1"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"WinSheng1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"WinSheng1"},"content":"        if (!(other instanceof EditMemberCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"WinSheng1"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand otherEditMemberCommand \u003d (EditMemberCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"WinSheng1"},"content":"        return index.equals(otherEditMemberCommand.index)","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"WinSheng1"},"content":"            \u0026\u0026 editMemberDescriptor.equals(otherEditMemberCommand.editMemberDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"WinSheng1"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"WinSheng1"},"content":"            .add(\"index\", index)","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"WinSheng1"},"content":"            .add(\"editMemberDescriptor\", editMemberDescriptor)","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"WinSheng1"},"content":"            .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"WinSheng1"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"WinSheng1"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"WinSheng1"},"content":"    public static class EditMemberDescriptor {","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"WinSheng1"},"content":"        private Name name;","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"WinSheng1"},"content":"        private Phone phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"WinSheng1"},"content":"        private Email email;","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"WinSheng1"},"content":"        private Telegram telegram;","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"WinSheng1"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"jonasongg"},"content":"        /**","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"jonasongg"},"content":"         * Default constructor.","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"jonasongg"},"content":"         */","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"jonasongg"},"content":"        public EditMemberDescriptor() {","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"WinSheng1"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"WinSheng1"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"WinSheng1"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"jonasongg"},"content":"         *","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"jonasongg"},"content":"         * @param toCopy The {@code EditMemberDescriptor} to copy.","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"WinSheng1"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"WinSheng1"},"content":"        public EditMemberDescriptor(EditMemberDescriptor toCopy) {","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"WinSheng1"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"WinSheng1"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"WinSheng1"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"WinSheng1"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"WinSheng1"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"WinSheng1"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"WinSheng1"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"WinSheng1"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"WinSheng1"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"WinSheng1"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, telegram, tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"WinSheng1"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"WinSheng1"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"WinSheng1"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"WinSheng1"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"WinSheng1"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"WinSheng1"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"WinSheng1"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"WinSheng1"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"WinSheng1"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"WinSheng1"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"WinSheng1"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"WinSheng1"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"WinSheng1"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"WinSheng1"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"WinSheng1"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"WinSheng1"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"WinSheng1"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"WinSheng1"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"WinSheng1"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"WinSheng1"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"WinSheng1"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"WinSheng1"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"WinSheng1"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"WinSheng1"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"WinSheng1"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"WinSheng1"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"WinSheng1"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"WinSheng1"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"WinSheng1"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"WinSheng1"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"WinSheng1"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"WinSheng1"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"WinSheng1"},"content":"                return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"WinSheng1"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"WinSheng1"},"content":"            if (!(other instanceof EditMemberDescriptor)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"WinSheng1"},"content":"                return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"WinSheng1"},"content":"            EditMemberDescriptor otherEditMemberDescriptor \u003d (EditMemberDescriptor) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"WinSheng1"},"content":"            return Objects.equals(name, otherEditMemberDescriptor.name)","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"WinSheng1"},"content":"                \u0026\u0026 Objects.equals(phone, otherEditMemberDescriptor.phone)","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"WinSheng1"},"content":"                \u0026\u0026 Objects.equals(email, otherEditMemberDescriptor.email)","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"WinSheng1"},"content":"                \u0026\u0026 Objects.equals(telegram, otherEditMemberDescriptor.telegram)","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"WinSheng1"},"content":"                \u0026\u0026 Objects.equals(tags, otherEditMemberDescriptor.tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"WinSheng1"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"WinSheng1"},"content":"        public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"WinSheng1"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"WinSheng1"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"WinSheng1"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"WinSheng1"},"content":"                .add(\"email\", email)","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"WinSheng1"},"content":"                .add(\"telegram\", telegram)","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"WinSheng1"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"WinSheng1"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"matochichap":3,"WinSheng1":233,"jonasongg":13}},{"path":"src/main/java/seedu/address/logic/commands/FindApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.ApplicantContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":" * Finds and lists all members in address book whose fields contains any of the argument keywords.","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"public class FindApplicantCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"    public static final String COMMAND_WORD \u003d \"findApplicant\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"finda\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all applicants whose information contain any of \"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"        + \"Example: \" + COMMAND_WORD + \" alice 91119111 design\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"    private final ApplicantContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     * Creates a FindApplicantCommand to find the specified {@code Applicant}","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     * @param predicate The predicate to find the applicant.","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"    public FindApplicantCommand(ApplicantContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"        model.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"            String.format(Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW, model.getFilteredApplicantList().size()));","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"        if (!(other instanceof FindApplicantCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"        FindApplicantCommand otherFindCommand \u003d (FindApplicantCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"            .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"            .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Saezenn":59,"jonasongg":6}},{"path":"src/main/java/seedu/address/logic/commands/FindMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.MemberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":" * Finds and lists all members in address book whose fields contains any of the argument keywords.","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"public class FindMemberCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"    public static final String COMMAND_WORD \u003d \"findMember\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"findm\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all members whose information contain any of \"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"        + \"Example: \" + COMMAND_WORD + \" alice 91119111 design\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"    private final MemberContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     * Creates a FindMemberCommand to find the specified {@code Member}","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     * @param predicate The predicate to find the member.","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"    public FindMemberCommand(MemberContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"        model.updateFilteredMemberList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"            String.format(Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW, model.getFilteredMemberList().size()));","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"        if (!(other instanceof FindMemberCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"        FindMemberCommand otherFindCommand \u003d (FindMemberCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"            .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"            .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"matochichap":1,"Saezenn":58,"jonasongg":6}},{"path":"src/main/java/seedu/address/logic/commands/ViewApplicantsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":" * Lists all applicants in the address book to the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"public class ViewApplicantsCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_WORD \u003d \"viewApplicants\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"viewa\";","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all applicants\";","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"matochichap":2,"jonasongg":22}},{"path":"src/main/java/seedu/address/logic/commands/ViewMemberTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":" * Views tasks assigned to the Member in the address book.","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"public class ViewMemberTaskCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String COMMAND_WORD \u003d \"viewTask\";","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String COMMAND_ALIAS \u003d \"viewt\";","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Views all tasks assigned to the specified member \"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"        + \"by the index number used in the displayed member list. \\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"        + \"Parameters: INDEX (must be a positive integer) \";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String MESSAGE_ADD_TODO_SUCCESS \u003d \"Task output for member %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"    private final Index index;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"     * Creates an AddMemberCommand to add the specified {@code Member}","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"     * @param index The index of the member to view.","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"    public ViewMemberTaskCommand(Index index) {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"AlfredBeNoel"},"content":"        Member memberToView \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"        model.setTaskListForMember(memberToView);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TODO_SUCCESS, Messages.format(memberToView)));","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"AlfredBeNoel":53,"jonasongg":2}},{"path":"src/main/java/seedu/address/logic/commands/ViewMembersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":" * Lists all applicants in the address book to the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"public class ViewMembersCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_WORD \u003d \"viewMembers\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    public static final String COMMAND_ALIAS \u003d \"viewm\";","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all members\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"matochichap":2,"jonasongg":22}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message}.","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"     * @param cause   The cause.","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":17,"jonasongg":10}},{"path":"src/main/java/seedu/address/logic/parser/AddApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.fields.InterviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":" * Parses input arguments and creates a new AddApplicantCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"public class AddApplicantCommandParser implements Parser\u003cAddApplicantCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"     * Parses the given {@code String} of arguments in the context of the AddApplicantCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"     * and returns an AddApplicantCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"    public AddApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_INTERVIEW);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_INTERVIEW);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"        InterviewTime interviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        if (argMultimap.getValue(PREFIX_INTERVIEW).isPresent()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"            interviewTime \u003d ParserUtil.parseInterviewTime(argMultimap.getValue(PREFIX_INTERVIEW).get());","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"            interviewTime \u003d new InterviewTime(\"cancel\");","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"        Applicant applicant \u003d new Applicant(name, phone, interviewTime);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"        return new AddApplicantCommand(applicant);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"matochichap":46,"jonasongg":12}},{"path":"src/main/java/seedu/address/logic/parser/AddMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Telegram;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":" * Parses input arguments and creates a new AddMemberCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"public class AddMemberCommandParser implements Parser\u003cAddMemberCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMemberCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"     * and returns an AddMemberCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"    public AddMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM, PREFIX_TAG);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM)","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"        Telegram telegram \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"AlfredBeNoel"},"content":"        Member member \u003d new Member(name, phone, email, telegram, tagList);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"        return new AddMemberCommand(member);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"matochichap":5,"AlfredBeNoel":16,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/AddMemberTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.Collection;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.commands.AddMemberTaskCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.commands.AddMemberTaskCommand.AddMemberTaskDescriptor;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":" * Parses input arguments and creates a new AddMemberTaskCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"public class AddMemberTaskCommandParser implements Parser\u003cAddMemberTaskCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"    public AddMemberTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"                    AddMemberTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TASK);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"        AddMemberTaskDescriptor addMemberTaskDescriptor \u003d new AddMemberTaskDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"        if (argMultimap.getValue(PREFIX_TASK).isPresent()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"            parseTasksForEdit(argMultimap.getAllValues(PREFIX_TASK)).ifPresent(addMemberTaskDescriptor::setTasks);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"        return new AddMemberTaskCommand(index, addMemberTaskDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"AlfredBeNoel"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"AlfredBeNoel"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"    private Optional\u003cList\u003cTask\u003e\u003e parseTasksForEdit(Collection\u003cString\u003e tasks) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"AlfredBeNoel"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"AlfredBeNoel"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"            return Optional.empty();","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"AlfredBeNoel"},"content":"        Collection\u003cString\u003e taskSet \u003d tasks.size() \u003d\u003d 1 \u0026\u0026 tasks.contains(\"\") ? Collections.emptyList() : tasks;","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"AlfredBeNoel"},"content":"        return Optional.of(ParserUtil.parseTasks(taskSet));","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"AlfredBeNoel":61,"WinSheng1":1}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.AddMemberTaskCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.CopyApplicantCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.CopyMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.DeleteApplicantCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.DeleteMemberTaskCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditApplicantCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.FindApplicantCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.FindMemberCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.ViewApplicantsCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.ViewMemberTaskCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.ViewMembersCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"AlfredBeNoel"},"content":"        case AddMemberCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"        case AddMemberCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"AlfredBeNoel"},"content":"            return new AddMemberCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"matochichap"},"content":"        case AddApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"        case AddApplicantCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"            return new AddApplicantCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"        case EditMemberCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"        case EditMemberCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"            return new EditMemberCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"        case EditApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"        case EditApplicantCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"            return new EditApplicantCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Saezenn"},"content":"        case DeleteApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"        case DeleteApplicantCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Saezenn"},"content":"            return new DeleteApplicantCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"        case DeleteMemberCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"        case DeleteMemberCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"WinSheng1"},"content":"            return new DeleteMemberCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"Saezenn"},"content":"        case FindMemberCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jonasongg"},"content":"        case FindMemberCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Saezenn"},"content":"            return new FindMemberCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Saezenn"},"content":"        case FindApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"jonasongg"},"content":"        case FindApplicantCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Saezenn"},"content":"            return new FindApplicantCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"        case ViewMembersCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"        case ViewMembersCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"            return new ViewMembersCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"jonasongg"},"content":"        case ViewApplicantsCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"jonasongg"},"content":"        case ViewApplicantsCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"jonasongg"},"content":"            return new ViewApplicantsCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"WinSheng1"},"content":"        case AddMemberTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"WinSheng1"},"content":"        case AddMemberTaskCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"WinSheng1"},"content":"            return new AddMemberTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"WinSheng1"},"content":"        case ViewMemberTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"WinSheng1"},"content":"        case ViewMemberTaskCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"WinSheng1"},"content":"            return new ViewMemberTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"WinSheng1"},"content":"        case DeleteMemberTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"WinSheng1"},"content":"        case DeleteMemberTaskCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"WinSheng1"},"content":"            return new DeleteMemberTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"jonasongg"},"content":"        case CopyMemberCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"jonasongg"},"content":"        case CopyMemberCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"jonasongg"},"content":"            return new CopyMemberCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"jonasongg"},"content":"        case CopyApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"jonasongg"},"content":"        case CopyApplicantCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jonasongg"},"content":"            return new CopyApplicantCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"matochichap":2,"Saezenn":17,"WinSheng1":25,"AlfredBeNoel":2,"-":71,"jonasongg":24}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"/name\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"/phone\");","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"/email\");","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"/tele\");","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"/tag\");","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"    public static final Prefix PREFIX_INTERVIEW \u003d new Prefix(\"/interview\");","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"    public static final Prefix PREFIX_TASK \u003d new Prefix(\"/task\");","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Saezenn":1,"AlfredBeNoel":5,"WinSheng1":1,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/CopyApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.CopyApplicantCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" * Parses input arguments and creates a new CopyMemberCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"public class CopyApplicantCommandParser implements Parser\u003cCopyApplicantCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * Parses the given {@code String} of arguments in the context of the CopyApplicantCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * and returns a CopyApplicantCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    public CopyApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"            return new CopyApplicantCommand(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CopyApplicantCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jonasongg":29}},{"path":"src/main/java/seedu/address/logic/parser/CopyMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.CopyMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" * Parses input arguments and creates a new CopyMemberCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"public class CopyMemberCommandParser implements Parser\u003cCopyMemberCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * Parses the given {@code String} of arguments in the context of the CopyMemberCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * and returns a CopyMemberCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    public CopyMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"            return new CopyMemberCommand(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CopyMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"-":20,"jonasongg":9}},{"path":"src/main/java/seedu/address/logic/parser/DeleteApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.DeleteApplicantCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":" * Parses input arguments and creates a new DeleteApplicantCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"public class DeleteApplicantCommandParser implements Parser\u003cDeleteApplicantCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteApplicantCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"     * and returns a DeleteApplicantCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"    public DeleteApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"            return new DeleteApplicantCommand(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteApplicantCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Saezenn":29,"jonasongg":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" * Parses input arguments and creates a new DeleteMemberCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"public class DeleteMemberCommandParser implements Parser\u003cDeleteMemberCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMemberCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * and returns a DeleteMemberCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"    public DeleteMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"            return new DeleteMemberCommand(index);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"WinSheng1":25,"jonasongg":4}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMemberTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.DeleteMemberTaskCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":" * Parses input arguments and creates a new DeleteMemberTaskCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"public class DeleteMemberTaskCommandParser implements Parser\u003cDeleteMemberTaskCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"    public DeleteMemberTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK);","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"        Index memberIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"        Index taskIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"            memberIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"            taskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"                    DeleteMemberTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"        return new DeleteMemberTaskCommand(memberIndex, taskIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"WinSheng1":35}},{"path":"src/main/java/seedu/address/logic/parser/EditApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditApplicantCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditApplicantCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":" * Parses input arguments and creates a new EditApplicantCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"public class EditApplicantCommandParser implements Parser\u003cEditApplicantCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"     * Parses the given {@code String} of arguments in the context of the EditApplicantCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"     * and returns an EditApplicantCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"    public EditApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_INTERVIEW);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"                    EditApplicantCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_INTERVIEW);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"            editApplicantDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"            editApplicantDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"        if (argMultimap.getValue(PREFIX_INTERVIEW).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"            editApplicantDescriptor.setInterviewTime(ParserUtil","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"                    .parseInterviewTime(argMultimap.getValue(PREFIX_INTERVIEW).get()));","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"        if (!editApplicantDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"            throw new ParseException(EditApplicantCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"        return new EditApplicantCommand(index, editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Saezenn":10,"WinSheng1":45,"jonasongg":6}},{"path":"src/main/java/seedu/address/logic/parser/EditMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":" * Parses input arguments and creates a new EditMemberCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"public class EditMemberCommandParser implements Parser\u003cEditMemberCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMemberCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     * and returns an EditMemberCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM, PREFIX_TAG);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"                    EditMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor editMemberDescriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"            editMemberDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"            editMemberDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"            editMemberDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"            editMemberDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editMemberDescriptor::setTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"        if (!editMemberDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"            throw new ParseException(EditMemberCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"        return new EditMemberCommand(index, editMemberDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"WinSheng1":16,"-":64,"jonasongg":7}},{"path":"src/main/java/seedu/address/logic/parser/FindApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.FindApplicantCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.ApplicantContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":" * Parses input arguments and creates a new FindApplicantCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"public class FindApplicantCommandParser implements Parser\u003cFindApplicantCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"     * Parses the given {@code String} of arguments in the context of the FindApplicantCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"     * and returns a FindApplicantCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"    public FindApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"        return new FindApplicantCommand(new ApplicantContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Saezenn":33,"jonasongg":2}},{"path":"src/main/java/seedu/address/logic/parser/FindMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.FindMemberCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.MemberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":" * Parses input arguments and creates a new FindMemberCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"public class FindMemberCommandParser implements Parser\u003cFindMemberCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMemberCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"     * and returns a FindMemberCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"    public FindMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"        return new FindMemberCommand(new MemberContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Saezenn":9,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.fields.InterviewTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Telegram;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"     * Parses a {@code String interviewTime} into an {@code InterviewTime}.","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"     * @param interviewTime A valid interview time string.","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"     * @return An {@code InterviewTime} object representing the parsed time.","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"     * @throws ParseException if the given {@code interviewTime} is invalid or cannot be parsed.","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"    public static InterviewTime parseInterviewTime(String interviewTime) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"        requireNonNull(interviewTime);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"        String trimmedTime \u003d interviewTime.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"        if (!InterviewTime.isValidTime(trimmedTime)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"            throw new ParseException(InterviewTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"        return new InterviewTime(trimmedTime);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"AlfredBeNoel"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"AlfredBeNoel"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"AlfredBeNoel"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"AlfredBeNoel"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"AlfredBeNoel"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"AlfredBeNoel"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"AlfredBeNoel"},"content":"        if (!Telegram.isValidHandle(trimmedTelegram)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"AlfredBeNoel"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"AlfredBeNoel"},"content":"        return new Telegram(trimmedTelegram);","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"AlfredBeNoel"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"AlfredBeNoel"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"AlfredBeNoel"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"AlfredBeNoel"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"AlfredBeNoel"},"content":"    public static Task parseTask(String task) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"AlfredBeNoel"},"content":"        String trimmedTask \u003d task.trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"AlfredBeNoel"},"content":"        return new Task(trimmedTask);","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"AlfredBeNoel"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"AlfredBeNoel"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"AlfredBeNoel"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"AlfredBeNoel"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"AlfredBeNoel"},"content":"    public static List\u003cTask\u003e parseTasks(Collection\u003cString\u003e tasks) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(tasks);","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"AlfredBeNoel"},"content":"        final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"AlfredBeNoel"},"content":"        for (String taskName : tasks) {","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"AlfredBeNoel"},"content":"            taskList.add(parseTask(taskName));","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"AlfredBeNoel"},"content":"        return taskList;","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"matochichap":5,"Saezenn":20,"AlfredBeNoel":45,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/ViewMemberTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.Collection;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.commands.ViewMemberTaskCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":" * Parses input arguments and creates a new ViewMemberTaskCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"public class ViewMemberTaskCommandParser implements Parser\u003cViewMemberTaskCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"    public ViewMemberTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"        Index index;","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"                    ViewMemberTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"        return new ViewMemberTaskCommand(index);","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"    private Optional\u003cList\u003cTask\u003e\u003e parseTasksForEdit(Collection\u003cString\u003e tasks) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"            return Optional.empty();","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"AlfredBeNoel"},"content":"        Collection\u003cString\u003e taskSet \u003d tasks.size() \u003d\u003d 1 \u0026\u0026 tasks.contains(\"\") ? Collections.emptySet() : tasks;","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"AlfredBeNoel"},"content":"        return Optional.of(ParserUtil.parseTasks(taskSet));","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"AlfredBeNoel":52}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import static java.util.Objects.hash;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    private final UniquePersonList\u003cMember\u003e members;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"    private final UniquePersonList\u003cApplicant\u003e applicants;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"    private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"        members \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"        applicants \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"     * Default constructor.","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"    public AddressBook() {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"     * @param toBeCopied The ReadOnlyAddressBook to copy from.","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"    public void setMembers(List\u003cMember\u003e members) {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"        this.members.setPersons(members);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"        this.applicants.setPersons(applicants);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"     * @param newData The new data.","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"        setMembers(newData.getMemberList());","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"        setApplicants(newData.getApplicantList());","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"AlfredBeNoel"},"content":"    /// member-level methods","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"AlfredBeNoel"},"content":"     * Returns true if a member with the same identity as {@code member} exists in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"     * @param member The member to check.","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"     * @return True if the member exists, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"AlfredBeNoel"},"content":"    public boolean hasMember(Member member) {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(member);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"        return members.contains(member);","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"AlfredBeNoel"},"content":"     * Adds a member to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"AlfredBeNoel"},"content":"     * The member must not already exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"     * @param m The member to add.","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"AlfredBeNoel"},"content":"    public void addMember(Member m) {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"jonasongg"},"content":"        members.add(m);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"AlfredBeNoel"},"content":"     * Replaces the given member {@code target} in the list with {@code editedMember}.","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"AlfredBeNoel"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"jonasongg"},"content":"     * @param target       The member to replace.","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"jonasongg"},"content":"     * @param editedMember The member to replace with.","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"AlfredBeNoel"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(editedMember);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"jonasongg"},"content":"        members.setPerson(target, editedMember);","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"AlfredBeNoel"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"AlfredBeNoel"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"jonasongg"},"content":"     * @param key The key of the member to remove.","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"AlfredBeNoel"},"content":"    public void removeMember(Member key) {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"jonasongg"},"content":"        members.remove(key);","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"matochichap"},"content":"    //// applicant-level methods","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"jonasongg"},"content":"     * Returns true if an applicant with the same identity as {@code applicant} exists in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"jonasongg"},"content":"     * @param applicant The applicant to check.","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"jonasongg"},"content":"     * @return True if the applicant exists, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"matochichap"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"matochichap"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"matochichap"},"content":"        return applicants.contains(applicant);","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"jonasongg"},"content":"     * Adds an applicant to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"matochichap"},"content":"     * The applicant must not already exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"jonasongg"},"content":"     * @param a The applicant to add.","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"matochichap"},"content":"    public void addApplicant(Applicant a) {","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"matochichap"},"content":"        applicants.add(a);","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"matochichap"},"content":"     * Replaces the given applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"matochichap"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"matochichap"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"matochichap"},"content":"     * address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"jonasongg"},"content":"     * @param target          The applicant to replace.","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"jonasongg"},"content":"     * @param editedApplicant The applicant to replace with.","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"matochichap"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"matochichap"},"content":"        requireNonNull(editedApplicant);","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"matochichap"},"content":"        applicants.setPerson(target, editedApplicant);","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"jonasongg"},"content":"     * @param key The key of the applicant to remove.","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"matochichap"},"content":"    public void removeApplicant(Applicant key) {","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"matochichap"},"content":"        applicants.remove(key);","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"jonasongg"},"content":"            .add(\"members\", members)","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"matochichap"},"content":"            .add(\"applicants\", applicants)","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"AlfredBeNoel"},"content":"    public ObservableList\u003cMember\u003e getMemberList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"jonasongg"},"content":"        return members.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"matochichap"},"content":"    public ObservableList\u003cApplicant\u003e getApplicantList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"matochichap"},"content":"        return applicants.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"matochichap"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"matochichap"},"content":"        updateTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"matochichap"},"content":"        return tags;","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"matochichap"},"content":"     * Updates the tags list to contain all tags in the address book.","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"matochichap"},"content":"    public void updateTags() {","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"matochichap"},"content":"        ObservableList\u003cMember\u003e allMembers \u003d getMemberList();","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"matochichap"},"content":"        HashSet\u003cTag\u003e allTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"matochichap"},"content":"        for (Member member : allMembers) {","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"matochichap"},"content":"            allTags.addAll(member.getTags());","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"matochichap"},"content":"        tags.setAll(allTags);","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"matochichap"},"content":"        return members.equals(otherAddressBook.members)","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"matochichap"},"content":"            \u0026\u0026 applicants.equals(otherAddressBook.applicants);","lastModifiedDate":"2023-10-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":235,"author":{"gitId":"matochichap"},"content":"        return hash(members.hashCode(), applicants.hashCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"matochichap":56,"AlfredBeNoel":25,"-":104,"jonasongg":52}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"    Predicate\u003cTag\u003e PREDICATE_SHOW_ALL_TAGS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"AlfredBeNoel"},"content":"     * Returns true if a member with the same identity as {@code member} exists in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"     * @param member The member to check.","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"AlfredBeNoel"},"content":"    boolean hasMember(Member member);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"     * Returns true if an applicant with the same identity as {@code applicant} exists in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"     * @param applicant The applicant to check.","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"matochichap"},"content":"    boolean hasApplicant(Applicant applicant);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"matochichap"},"content":"     * Deletes the given applicant.","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"matochichap"},"content":"     * The applicant must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"     * @param target The applicant to delete.","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"matochichap"},"content":"    void deleteApplicant(Applicant target);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"matochichap"},"content":"     * Adds the given member.","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"matochichap"},"content":"     * {@code member} must not already exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"     * @param toAdd The member to add.","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"matochichap"},"content":"    void addMember(Member toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"matochichap"},"content":"     * Adds the given applicant.","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"matochichap"},"content":"     * {@code applicant} must not already exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"jonasongg"},"content":"     * @param toAdd The applicant to add.","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"matochichap"},"content":"    void addApplicant(Applicant toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"matochichap"},"content":"     * Replaces the given member {@code target} with {@code editedMember}.","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"matochichap"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in the","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"matochichap"},"content":"     * address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"     * @param target       The member to replace.","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"jonasongg"},"content":"     * @param editedMember The member to replace with.","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"matochichap"},"content":"    void setMember(Member target, Member editedMember);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"matochichap"},"content":"     * Replaces the given applicant {@code target} with {@code editedApplicant}.","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"WinSheng1"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"matochichap"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"WinSheng1"},"content":"     * address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"jonasongg"},"content":"     * @param target          The applicant to replace.","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"jonasongg"},"content":"     * @param editedApplicant The applicant to replace with.","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"matochichap"},"content":"    void setApplicant(Applicant target, Applicant editedApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"jonasongg"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"AlfredBeNoel"},"content":"    ObservableList\u003cMember\u003e getFilteredMemberList();","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"jonasongg"},"content":"     * Returns an unmodifiable view of the filtered applicant list","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"matochichap"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"matochichap"},"content":"     * Returns an unmodifiable view of the filtered tag list","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"matochichap"},"content":"    ObservableList\u003cTag\u003e getFilteredTagList();","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"AlfredBeNoel"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"AlfredBeNoel"},"content":"    void setTaskListForMember(Member member);","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"matochichap"},"content":"     * Updates the filter of the filtered member list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"jonasongg"},"content":"     * @param predicate The predicate to filter by.","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"matochichap"},"content":"    void updateFilteredMemberList(Predicate\u003c? super Member\u003e predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"matochichap"},"content":"     * Updates the filter of the filtered applicant list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"jonasongg"},"content":"     * @param predicate The predicate to filter by.","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"matochichap"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"jonasongg"},"content":"    void updateFilteredApplicantList(Predicate\u003c? super Applicant\u003e predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"matochichap"},"content":"     * Updates the filter of the filtered tag list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"jonasongg"},"content":"     * @param predicate The predicate to filter by.","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"matochichap"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"matochichap"},"content":"    void updateFilteredTagList(Predicate\u003c? super Tag\u003e predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"WinSheng1"},"content":"     * Deletes the member person.","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"WinSheng1"},"content":"     * The member must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"jonasongg"},"content":"     * @param toDelete The member to delete.","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"WinSheng1"},"content":"    void deleteMember(Member toDelete);","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"matochichap":46,"AlfredBeNoel":11,"WinSheng1":10,"-":70,"jonasongg":37}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"    private final FilteredList\u003cMember\u003e filteredMembers;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"    private final FilteredList\u003cApplicant\u003e filteredApplicants;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    private final FilteredList\u003cTag\u003e filteredTags;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    private final ObservableList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     * @param addressBook The addressBook to be used.","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * @param userPrefs   The userPrefs to be used.","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"        filteredMembers \u003d new FilteredList\u003c\u003e(this.addressBook.getMemberList());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.addressBook.getApplicantList());","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"        filteredTags \u003d new FilteredList\u003c\u003e(this.addressBook.getTagList());","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"AlfredBeNoel"},"content":"        // Displayed tasks should be empty at first","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"        filteredTasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"     * Default constructor.","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"AlfredBeNoel"},"content":"    public boolean hasMember(Member member) {","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(member);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"AlfredBeNoel"},"content":"        return addressBook.hasMember(member);","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"matochichap"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"matochichap"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"matochichap"},"content":"        return addressBook.hasApplicant(applicant);","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"matochichap"},"content":"    public void deleteMember(Member target) {","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"matochichap"},"content":"        addressBook.removeMember(target);","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"matochichap"},"content":"        addressBook.updateTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"matochichap"},"content":"    public void deleteApplicant(Applicant target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"matochichap"},"content":"        addressBook.removeApplicant(target);","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"matochichap"},"content":"    public void addMember(Member member) {","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"matochichap"},"content":"        addressBook.addMember(member);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"matochichap"},"content":"        addressBook.updateTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"matochichap"},"content":"        updateFilteredMemberList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"matochichap"},"content":"        updateFilteredTagList(PREDICATE_SHOW_ALL_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"matochichap"},"content":"    public void addApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"matochichap"},"content":"        addressBook.addApplicant(applicant);","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"jonasongg"},"content":"        updateFilteredApplicantList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"matochichap"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"matochichap"},"content":"        requireAllNonNull(target, editedMember);","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"matochichap"},"content":"        addressBook.setMember(target, editedMember);","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"matochichap"},"content":"        addressBook.updateTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"matochichap"},"content":"        updateFilteredMemberList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"matochichap"},"content":"        updateFilteredTagList(PREDICATE_SHOW_ALL_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"matochichap"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"matochichap"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"matochichap"},"content":"        addressBook.setApplicant(target, editedApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"matochichap"},"content":"        updateFilteredApplicantList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":169,"author":{"gitId":"matochichap"},"content":"     * Returns an unmodifiable view of the list of {@code Member} backed by the internal list of","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"AlfredBeNoel"},"content":"    public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"AlfredBeNoel"},"content":"        return filteredMembers;","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"matochichap"},"content":"     * Returns an unmodifiable view of the list of {@code Applicant} backed by the internal list of","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"matochichap"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"matochichap"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"matochichap"},"content":"        return filteredApplicants;","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"matochichap"},"content":"     * Returns an unmodifiable view of the list of {@code Tag} backed by the internal list of","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"matochichap"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"matochichap"},"content":"    public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"matochichap"},"content":"        return filteredTags;","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"AlfredBeNoel"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"AlfredBeNoel"},"content":"        return filteredTasks;","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"AlfredBeNoel"},"content":"    public void setTaskListForMember(Member member) {","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"AlfredBeNoel"},"content":"        this.filteredTasks.setAll(member.getTasks());","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"matochichap"},"content":"    public void updateFilteredMemberList(Predicate\u003c? super Member\u003e predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"AlfredBeNoel"},"content":"        filteredMembers.setPredicate(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"jonasongg"},"content":"    public void updateFilteredApplicantList(Predicate\u003c? super Applicant\u003e predicate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":213,"author":{"gitId":"matochichap"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"matochichap"},"content":"        filteredApplicants.setPredicate(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"matochichap"},"content":"    public void updateFilteredTagList(Predicate\u003c? super Tag\u003e predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"matochichap"},"content":"        filteredTags.setPredicate(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"matochichap"},"content":"            \u0026\u0026 filteredMembers.equals(otherModelManager.filteredMembers)","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"matochichap"},"content":"            \u0026\u0026 filteredApplicants.equals(otherModelManager.filteredApplicants);","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"matochichap":69,"AlfredBeNoel":31,"WinSheng1":2,"-":128,"jonasongg":11}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"     * Returns an unmodifiable view of the members list.","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"     * This list will not contain any duplicate members.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"    ObservableList\u003cMember\u003e getMemberList();","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"     * Returns an unmodifiable view of the applicants list.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"     * This list will not contain any duplicate applicants.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"    ObservableList\u003cApplicant\u003e getApplicantList();","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"     * Returns an unmodifiable view of the tag list.","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"     * This list will not contain any duplicate tags.","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"    ObservableList\u003cTag\u003e getTagList();","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"matochichap":16,"AlfredBeNoel":1,"-":13}},{"path":"src/main/java/seedu/address/model/person/Applicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.fields.InterviewTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":" * Represents an Applicant in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"public class Applicant extends Person {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"    private final Phone phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"    private InterviewTime interviewTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"     * @param name          The name of the applicant.","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     * @param phone         The phone number of the applicant.","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     * @param interviewTime The interview time of the applicant.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    public Applicant(Name name, Phone phone, InterviewTime interviewTime) {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"        this(name, phone);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"        this.interviewTime \u003d interviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     * @param name  The name of the applicant.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     * @param phone The phone number of the applicant.","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"    public Applicant(Name name, Phone phone) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"        super(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"        this.interviewTime \u003d new InterviewTime(\"cancel\");","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"     * Returns true if both applicants have the same name and phone.","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"     * This defines a weaker notion of equality between two applicants.","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"    public boolean isSamePerson(Person other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"matochichap"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"        if (!(other instanceof Applicant)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"matochichap"},"content":"        Applicant otherApplicant \u003d (Applicant) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"matochichap"},"content":"        // applicants are considered the same if they have the same name or phone","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"        return getName().equals(otherApplicant.getName())","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"            || this.phone.equals(otherApplicant.phone);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"matochichap"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"matochichap"},"content":"        return phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"    public InterviewTime getInterviewTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"        return interviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"matochichap"},"content":"     * Returns true if both applicants have the same identity and data fields.","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"matochichap"},"content":"     * This defines a stronger notion of equality between two applicants.","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"matochichap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"matochichap"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"matochichap"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"matochichap"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"matochichap"},"content":"        if (!(other instanceof Applicant)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"matochichap"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"matochichap"},"content":"        Applicant otherApplicant \u003d (Applicant) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"matochichap"},"content":"        return getName().equals(otherApplicant.getName())","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"Saezenn"},"content":"            \u0026\u0026 this.phone.equals(otherApplicant.phone)","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Saezenn"},"content":"            \u0026\u0026 this.interviewTime.equals(otherApplicant.interviewTime);","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"matochichap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"matochichap"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"matochichap"},"content":"        return Objects.hash(getName(), phone);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"matochichap"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"matochichap"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"matochichap"},"content":"            .add(\"name\", getName())","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"matochichap"},"content":"            .add(\"phone\", phone)","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Saezenn"},"content":"            .add(\"interview time\", interviewTime)","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"matochichap"},"content":"            .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jonasongg"},"content":"    public String detailsToCopy() {","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jonasongg"},"content":"        return \"Name: \" + getName() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Saezenn"},"content":"            + \"Phone: \" + getPhone() + \"\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"Saezenn"},"content":"            + \"Interview Time: \" + interviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"matochichap":80,"Saezenn":12,"jonasongg":23}},{"path":"src/main/java/seedu/address/model/person/ApplicantContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":" * Tests that a {@code Applicant}\u0027s {@code Field\u0027s} matches any of the keywords given.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"public class ApplicantContainsKeywordsPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * Constructs a predicate that returns true if the applicant\u0027s name or phone number contains any of the keywords.","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     * @param keywords The keywords to check.","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"    public ApplicantContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(applicant.getName().fullName, keyword)","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"                || StringUtil.containsWordIgnoreCase(applicant.getPhone().value, keyword));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"        if (!(other instanceof ApplicantContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate otherApplicantContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"            (ApplicantContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"        return keywords.equals(otherApplicantContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Saezenn":47,"jonasongg":5}},{"path":"src/main/java/seedu/address/model/person/Member.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Telegram;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":" * Represents a Member in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"public class Member extends Person {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"    // Identity Fields","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"    private final Phone phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"    private final Email email;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"    private final Telegram telegram;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * @param name     The name of the member.","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     * @param phone    The phone number of the member.","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"     * @param email    The email of the member.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"     * @param telegram The telegram handle of the member.","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"     * @param tags     The tags of the member.","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"    public Member(Name name, Phone phone, Email email, Telegram telegram, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"        super(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"        requireAllNonNull(telegram);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"AlfredBeNoel"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"AlfredBeNoel"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"     * @param name     The name of the member.","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"AlfredBeNoel"},"content":"     * @param phone    The phone number of the member.","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"     * @param email    The email of the member.","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"AlfredBeNoel"},"content":"     * @param telegram The telegram handle of the member.","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"AlfredBeNoel"},"content":"     * @param tags     The tags of the member.","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"AlfredBeNoel"},"content":"     * @param tasks    The tasks of the member.","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"AlfredBeNoel"},"content":"    public Member(Name name, Phone phone, Email email, Telegram telegram, Set\u003cTag\u003e tags, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"AlfredBeNoel"},"content":"        super(name);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"AlfredBeNoel"},"content":"        requireAllNonNull(telegram);","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"AlfredBeNoel"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"AlfredBeNoel"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"AlfredBeNoel"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"AlfredBeNoel"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"AlfredBeNoel"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"        return phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"matochichap"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"matochichap"},"content":"        return email;","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"AlfredBeNoel"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"AlfredBeNoel"},"content":"        return telegram;","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"matochichap"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"matochichap"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"matochichap"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"matochichap"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"AlfredBeNoel"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"AlfredBeNoel"},"content":"        return Collections.unmodifiableList(tasks);","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"matochichap"},"content":"     * Returns true if both members have the same name, phone, email and telegram handle.","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"AlfredBeNoel"},"content":"     * This defines a weaker notion of equality between two members.","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"matochichap"},"content":"    public boolean isSamePerson(Person other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"matochichap"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"AlfredBeNoel"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"matochichap"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"matochichap"},"content":"        if (!(other instanceof Member)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"matochichap"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"matochichap"},"content":"        Member otherMember \u003d (Member) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"matochichap"},"content":"        // members are considered the same if they have the same name, phone, email or telegram handle","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"matochichap"},"content":"        return getName().equals(otherMember.getName())","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"matochichap"},"content":"            || this.phone.equals(otherMember.phone)","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"matochichap"},"content":"            || this.email.equals(otherMember.email)","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"matochichap"},"content":"            || this.telegram.equals(otherMember.telegram);","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"AlfredBeNoel"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"AlfredBeNoel"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"AlfredBeNoel"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"AlfredBeNoel"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"AlfredBeNoel"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"AlfredBeNoel"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"AlfredBeNoel"},"content":"        if (!(other instanceof Member)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"AlfredBeNoel"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"matochichap"},"content":"        Member otherMember \u003d (Member) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"matochichap"},"content":"        return getName().equals(otherMember.getName())","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"matochichap"},"content":"            \u0026\u0026 getPhone().equals(otherMember.getPhone())","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"matochichap"},"content":"            \u0026\u0026 getEmail().equals(otherMember.getEmail())","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"matochichap"},"content":"            \u0026\u0026 getTags().equals(otherMember.getTags())","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"matochichap"},"content":"            \u0026\u0026 getTelegram().equals(otherMember.getTelegram());","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"AlfredBeNoel"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"AlfredBeNoel"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"matochichap"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getTelegram(), getTags());","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"AlfredBeNoel"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"AlfredBeNoel"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"AlfredBeNoel"},"content":"            .add(\"name\", getName())","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"AlfredBeNoel"},"content":"            .add(\"phone\", getPhone())","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"AlfredBeNoel"},"content":"            .add(\"email\", getEmail())","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"AlfredBeNoel"},"content":"            .add(\"telegram\", getTelegram())","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"AlfredBeNoel"},"content":"            .add(\"tags\", getTags())","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"AlfredBeNoel"},"content":"            .add(\"tasks\", getTasks())","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"AlfredBeNoel"},"content":"            .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"jonasongg"},"content":"    public String detailsToCopy() {","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"jonasongg"},"content":"        return \"Name: \" + getName() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"jonasongg"},"content":"            + \"Phone: \" + getPhone() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"jonasongg"},"content":"            + \"Email: \" + getEmail() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"jonasongg"},"content":"            + \"Telegram: \" + getTelegram() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"jonasongg"},"content":"            + \"Tags: \" + getTags().stream().map(Tag::toString).collect(Collectors.joining(\", \")) + \"\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"AlfredBeNoel"},"content":"            + \"Tasks: \" + getTasks().stream().map(Task::toString).collect(Collectors.joining(\", \"));","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"matochichap":52,"AlfredBeNoel":101,"jonasongg":16}},{"path":"src/main/java/seedu/address/model/person/MemberContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":" * Tests that a {@code Member}\u0027s {@code Fields} matches any of the keywords given.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"public class MemberContainsKeywordsPredicate implements Predicate\u003cMember\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * Constructs a {@code MemberContainsKeywordsPredicate} with the specified keywords.","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     * @param keywords The keywords to test.","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"    public MemberContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"    public boolean test(Member member) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(member.getName().fullName, keyword)","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"                || StringUtil.containsWordIgnoreCase(member.getPhone().value, keyword)","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"                || StringUtil.containsWordIgnoreCase(member.getEmail().value, keyword)","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"                || StringUtil.containsWordIgnoreCase(member.getTelegram().toString(), keyword)","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"                || member.getTags().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"                .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"        if (!(other instanceof MemberContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate otherMemberContainsKeywordsPredicate \u003d (MemberContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"        return keywords.equals(otherMemberContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Saezenn":50,"jonasongg":5}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"public abstract class Person {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * Name must be present and not null.","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     * @param name The name of the person.","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"    public Person(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"    public abstract boolean isSamePerson(Person otherPerson);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"    public abstract int hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"    public abstract String toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    public abstract String detailsToCopy();","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"matochichap":8,"-":28,"jonasongg":4}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":" * Generic class that can take in classes extending Person.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"public class UniquePersonList\u003cT extends Person\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"    public void setPerson(T target, T editedPerson) {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"matochichap"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"matochichap"},"content":"    public void setPersons(UniquePersonList\u003cT\u003e replacement) {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"matochichap"},"content":"    public void setPersons(List\u003cT\u003e persons) {","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"matochichap"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"matochichap"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"matochichap"},"content":"        if (!(other instanceof UniquePersonList\u003c?\u003e)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"matochichap"},"content":"        UniquePersonList\u003c?\u003e otherUniquePersonList \u003d (UniquePersonList\u003c?\u003e) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"matochichap"},"content":"    private boolean personsAreUnique(List\u003cT\u003e persons) {","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"matochichap":15,"-":135}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"     * Constructs a new {@code DuplicatePersonException} with the specified detail {@code message}.","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":11,"jonasongg":3}},{"path":"src/main/java/seedu/address/model/person/fields/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * @return True if the string is a valid address, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"matochichap":1,"-":63,"jonasongg":4}},{"path":"src/main/java/seedu/address/model/person/fields/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"     * @return True if the string is a valid email, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"matochichap":1,"-":78,"jonasongg":3}},{"path":"src/main/java/seedu/address/model/person/fields/InterviewTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":" * Represents a Person\u0027s interview time in the address book.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"public class InterviewTime {","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"        \"Interview time should be in the format of DD/MM/YYYY HHmm. To cancel the interview, enter \"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"            + \"\u0027cancel\u0027 (case sensitive)\";","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{4}$\";","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    private final String time;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"     * Constructs a {@code InterviewTime}.","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"     * @param interviewTime A valid interview time.","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"    public InterviewTime(String interviewTime) {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"        checkArgument(isValidTime(interviewTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"        this.time \u003d interviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"     * Returns true if a given string is a valid interview time.","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     * @return True if the string is a valid interview time, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"        return test.equals(\"cancel\") || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"        //instanceof handles null","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"        if (!(other instanceof InterviewTime)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"        InterviewTime otherInterviewTime \u003d (InterviewTime) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"        return time.equals(otherInterviewTime.time);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"        if (time.equals(\"cancel\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"            return \"Interview time has not been set\";","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(this.time, inputFormatter);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy h:mma\");","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"        String formattedDateTime \u003d dateTime.format(outputFormatter);","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"        return \"Interview scheduled at: \" + formattedDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"        return time.hashCode();","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"    public String getTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Saezenn"},"content":"        return this.time;","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Saezenn":70,"jonasongg":8}},{"path":"src/main/java/seedu/address/model/person/fields/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     * @return True if the string is a valid name, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"matochichap":1,"-":66,"jonasongg":3}},{"path":"src/main/java/seedu/address/model/person/fields/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"     * @return True if the string is a valid phone number, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"matochichap":1,"-":60,"jonasongg":3}},{"path":"src/main/java/seedu/address/model/person/fields/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":" * Represents a Member\u0027s telegram handle in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"public class Telegram {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String TELE_REGEX \u003d \"^@[a-zA-Z0-9_]{5,32}$\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram handle should follow the format: @exampleHandle\"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"            + \" and have between 5 to 32 characters.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"    public final String value;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"     * Constructs an {@code Telegram}.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"     * @param telegramHandle A valid Telegram Handle.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"    public Telegram(String telegramHandle) {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"        checkArgument(isValidHandle(telegramHandle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"        value \u003d telegramHandle;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"     * Returns if a given string is a valid telegram handle.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"     * @return True if the string is a valid telegram handle, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"    public static boolean isValidHandle(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"        return test.matches(TELE_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"        return value;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlfredBeNoel"},"content":"        if (!(other instanceof Telegram)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"AlfredBeNoel"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"        Telegram otherTele \u003d (Telegram) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"AlfredBeNoel"},"content":"        return value.equals(otherTele.value);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"AlfredBeNoel"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"AlfredBeNoel"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"matochichap":3,"AlfredBeNoel":56,"jonasongg":3}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric and \"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"            + \"have between 1 to 15 characters\";","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}{1,15}$\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"     * @return True if the string is a valid tag name, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"matochichap":3,"-":60,"jonasongg":3}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTaskName(String)}","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"public class Task {","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Task names should be alphanumeric\";","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\w\\\\s]+$\";","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"    public final String taskName;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     * @param taskName A valid task name.","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * Returns true if a given string is a valid task name.","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     * @return True if the string is a valid task name, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"    public static boolean isValidTaskName(String test) {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"        return taskName.equals(otherTask.taskName);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"        return taskName.hashCode();","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"AlfredBeNoel"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"AlfredBeNoel"},"content":"        return \u0027[\u0027 + taskName + \u0027]\u0027;","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"AlfredBeNoel":52,"jonasongg":11}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Telegram;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"    public static Member[] getSampleMembers() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"        return new Member[] {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"            new Member(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"                new Telegram(\"@alexyeoh\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"                getTaskList(\"Finish Proposal\")),","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"            new Member(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"                new Telegram(\"@berniceyu\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"            new Member(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"                new Telegram(\"@charlotteoliveiro\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"            new Member(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"                new Telegram(\"@davidli\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"            new Member(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"                new Telegram(\"@irfanibrahim\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"            new Member(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"                new Telegram(\"@roybalakrishnan\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"    public static Applicant[] getSampleApplicants() {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"        return new Applicant[] {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"            new Applicant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"            new Applicant(new Name(\"Bernice Yu\"), new Phone(\"99272758\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"            new Applicant(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"            new Applicant(new Name(\"David Li\"), new Phone(\"91031282\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"matochichap"},"content":"            new Applicant(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"            new Applicant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"))","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"        };","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"        for (Member sampleMember : getSampleMembers()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"            sampleAb.addMember(sampleMember);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"matochichap"},"content":"        for (Applicant sampleApplicant : getSampleApplicants()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"matochichap"},"content":"            sampleAb.addApplicant(sampleApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"AlfredBeNoel"},"content":"     * Returns a task set containing the list of strings given.","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"AlfredBeNoel"},"content":"    public static List\u003cTask\u003e getTaskList(String... strings) {","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"AlfredBeNoel"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"AlfredBeNoel"},"content":"            .map(Task::new)","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"AlfredBeNoel"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"matochichap":31,"AlfredBeNoel":12,"-":38,"jonasongg":7}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"     * @return {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":44,"jonasongg":2}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedApplicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.fields.InterviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":" * Jackson-friendly version of {@link Applicant}.","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"public class JsonAdaptedApplicant {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Applicant\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"    private final String name;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"    private final String phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"    private final String interviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"     * Constructs a {@code JsonAdaptedApplicant} with the given applicant details.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"    public JsonAdaptedApplicant(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"        @JsonProperty(\"interviewTime\") String interviewTime) {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        this.interviewTime \u003d interviewTime \u003d\u003d null ? \"cancel\" : interviewTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"     * Converts a given {@code Applicant} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"    public JsonAdaptedApplicant(Applicant source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        interviewTime \u003d source.getInterviewTime().getTime() \u003d\u003d null ? \"cancel\" : source.getInterviewTime().getTime();","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"     * Converts this Jackson-friendly adapted applicant object into the model\u0027s {@code Applicant} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted applicant.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"    public Applicant toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"matochichap"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"        if (!InterviewTime.isValidTime(interviewTime)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"            throw new IllegalValueException(InterviewTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"matochichap"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"        final InterviewTime interviewTime \u003d new InterviewTime(this.interviewTime);","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"        return new Applicant(modelName, modelPhone, interviewTime);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"matochichap":59,"Saezenn":11,"jonasongg":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMember.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Telegram;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"class JsonAdaptedMember {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"    private final String telegram;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"    public JsonAdaptedMember(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"telegram\") String telegram,","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"                             @JsonProperty(\"todo\") List\u003cJsonAdaptedTask\u003e tasklist) {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"        if (tasklist !\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"            this.tasklist.addAll(tasklist);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"     * Converts a given {@code Member} into this class for Jackson use.","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"AlfredBeNoel"},"content":"    public JsonAdaptedMember(Member source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"AlfredBeNoel"},"content":"        telegram \u003d source.getTelegram().value;","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"AlfredBeNoel"},"content":"        tasklist.addAll(source.getTasks().stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"AlfredBeNoel"},"content":"                .map(JsonAdaptedTask::new)","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"AlfredBeNoel"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"AlfredBeNoel"},"content":"     * Converts this Jackson-friendly adapted member object into the model\u0027s {@code Member} object.","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"AlfredBeNoel"},"content":"    public Member toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"matochichap"},"content":"        final List\u003cTag\u003e memberTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"matochichap"},"content":"            memberTags.add(tag.toModelType());","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"AlfredBeNoel"},"content":"        final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"AlfredBeNoel"},"content":"        for (JsonAdaptedTask task : tasklist) {","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"AlfredBeNoel"},"content":"            taskList.add(task.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"AlfredBeNoel"},"content":"        if (telegram \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"AlfredBeNoel"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"AlfredBeNoel"},"content":"                    Telegram.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"AlfredBeNoel"},"content":"        if (!Telegram.isValidHandle(telegram)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"AlfredBeNoel"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"AlfredBeNoel"},"content":"        final Telegram modelTelegram \u003d new Telegram(telegram);","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"matochichap"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(memberTags);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"AlfredBeNoel"},"content":"        final List\u003cTask\u003e modelTasks \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"AlfredBeNoel"},"content":"        return new Member(modelName, modelPhone, modelEmail, modelTelegram, modelTags, modelTasks);","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"matochichap":8,"AlfredBeNoel":35,"-":85}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"    private final String taskName;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"    public JsonAdaptedTask(String taskName) {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"        taskName \u003d source.taskName;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"    @JsonValue","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"        return taskName;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"        if (!Task.isValidTaskName(taskName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"            throw new IllegalValueException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"        return new Task(taskName);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"AlfredBeNoel":45,"jonasongg":3}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"Members list contains duplicate member(s).\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"Applicants list contains duplicate applicant(s).\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"    private final List\u003cJsonAdaptedMember\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"    private final List\u003cJsonAdaptedApplicant\u003e applicants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"members\") List\u003cJsonAdaptedMember\u003e members,","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"                                       @JsonProperty(\"applicants\") List\u003cJsonAdaptedApplicant\u003e applicants) {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"        this.members.addAll(members);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"        this.applicants.addAll(applicants);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"        members.addAll(source.getMemberList().stream().map(JsonAdaptedMember::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"        applicants.addAll(source.getApplicantList().stream().map(JsonAdaptedApplicant::new)","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"AlfredBeNoel"},"content":"        for (JsonAdaptedMember jsonAdaptedMember : members) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"AlfredBeNoel"},"content":"            Member member \u003d jsonAdaptedMember.toModelType();","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"AlfredBeNoel"},"content":"            if (addressBook.hasMember(member)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"AlfredBeNoel"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"AlfredBeNoel"},"content":"            addressBook.addMember(member);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"matochichap"},"content":"        for (JsonAdaptedApplicant jsonAdaptedApplicant : applicants) {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"matochichap"},"content":"            Applicant applicant \u003d jsonAdaptedApplicant.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"matochichap"},"content":"            if (addressBook.hasApplicant(applicant)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"matochichap"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"matochichap"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"matochichap"},"content":"            addressBook.addApplicant(applicant);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"matochichap":18,"AlfredBeNoel":11,"-":48}},{"path":"src/main/java/seedu/address/ui/ApplicantCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" * An UI component that displays information of a {@code Applicant}.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"public class ApplicantCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    private static final String FXML \u003d \"ApplicantListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"    public final Applicant applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    private Label name;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    private Label id;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"    private Label phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"    private Label interviewTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     * Creates a {@code ApplicantCard} with the given {@code Applicant} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"     * @param applicant      The applicant to display.","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"     * @param displayedIndex The index to display.","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"    public ApplicantCard(Applicant applicant, int displayedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        name.setText(applicant.getName().fullName);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"        phone.setText(applicant.getPhone().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"        interviewTime.setText(applicant.getInterviewTime().toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Saezenn":3,"jonasongg":48}},{"path":"src/main/java/seedu/address/ui/ApplicantListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":" * Panel containing the list of applicants.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"public class ApplicantListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"    private static final String FXML \u003d \"ApplicantListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ApplicantListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    private ListView\u003cApplicant\u003e applicantListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     * Creates a {@code ApplicantListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * @param applicantList The list of applicants to display.","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"    public ApplicantListPanel(ObservableList\u003cApplicant\u003e applicantList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"        applicantListView.setItems(applicantList);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        applicantListView.setCellFactory(listView -\u003e new ApplicantListViewCell());","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Applicant} using a {@code ApplicantCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    class ApplicantListViewCell extends ListCell\u003cApplicant\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"        protected void updateItem(Applicant applicant, boolean empty) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"            super.updateItem(applicant, empty);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"            if (empty || applicant \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"                setGraphic(new ApplicantCard(applicant, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonasongg":51}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import java.awt.Desktop;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import java.net.URI;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w15-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to our user guide for more information.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"    private Button openUrlButton;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"matochichap"},"content":"    private void openUrl() {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"matochichap"},"content":"        // Try to open the URL in the default web browser","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"matochichap"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"matochichap"},"content":"            Desktop.getDesktop().browse(new URI(USERGUIDE_URL));","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"matochichap"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"matochichap"},"content":"            logger.warning(\"Failed to open user guide in browser: \" + e.getMessage());","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"matochichap":14,"-":92}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"    private final Logic logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"    private MemberListPanel memberListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"    private ApplicantListPanel applicantListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"    private TagListPanel tagListPanel;","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"    private StackPane memberListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"    private StackPane applicantListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"AlfredBeNoel"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"    @FXML","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"    private StackPane tagListPanelPlaceholder;","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"AlfredBeNoel"},"content":"        memberListPanel \u003d new MemberListPanel(logic.getFilteredMemberList());","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"jonasongg"},"content":"        applicantListPanel \u003d new ApplicantListPanel(logic.getFilteredApplicantList());","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"matochichap"},"content":"        tagListPanel \u003d new TagListPanel(logic.getFilteredTagList());","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"AlfredBeNoel"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"jonasongg"},"content":"        memberListPanelPlaceholder.getChildren().add(memberListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"jonasongg"},"content":"        applicantListPanelPlaceholder.getChildren().add(applicantListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"matochichap"},"content":"        tagListPanelPlaceholder.getChildren().add(tagListPanel.getRoot());","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"AlfredBeNoel"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"jonasongg"},"content":"    public MemberListPanel getMemberListPanel() {","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"AlfredBeNoel"},"content":"        return memberListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"jonasongg"},"content":"    public ApplicantListPanel getApplicantListPanel() {","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"jonasongg"},"content":"        return applicantListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"matochichap"},"content":"    public TagListPanel getTagListPanel() {","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"matochichap"},"content":"        return tagListPanel;","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"matochichap":7,"AlfredBeNoel":12,"-":190,"jonasongg":15}},{"path":"src/main/java/seedu/address/ui/MemberCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":" * An UI component that displays information of a {@code Member}.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"public class MemberCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"    private static final String FXML \u003d \"MemberListCard.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"    public final Member member;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"    private Label name;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"    private Label id;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"    private Label phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"    private Label email;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"    private Label telegram;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"    private Label tasks;","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"     * Creates a {@code MemberCard} with the given {@code Member} and index to display.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"     * @param member         The member to display.","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"     * @param displayedIndex The index to display.","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"    public MemberCard(Member member, int displayedIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"AlfredBeNoel"},"content":"        this.member \u003d member;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"AlfredBeNoel"},"content":"        name.setText(member.getName().fullName);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"        phone.setText(member.getPhone().value);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"AlfredBeNoel"},"content":"        email.setText(member.getEmail().value);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"AlfredBeNoel"},"content":"        telegram.setText(member.getTelegram().value);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"AlfredBeNoel"},"content":"        member.getTags().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"AlfredBeNoel"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"AlfredBeNoel"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"AlfredBeNoel"},"content":"        int numTasks \u003d member.getTasks().size();","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"AlfredBeNoel"},"content":"        tasks.setText((numTasks \u003d\u003d 0 ? \"No\" : numTasks) + \" task\" + (numTasks \u003d\u003d 1 ? \"\" : \"s\") + \" assigned.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"matochichap":1,"AlfredBeNoel":62,"jonasongg":3}},{"path":"src/main/java/seedu/address/ui/MemberListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":" * Panel containing the list of members.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"public class MemberListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"    private static final String FXML \u003d \"MemberListPanel.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MemberListPanel.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"    private ListView\u003cMember\u003e memberListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     * Creates a {@code MemberListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"    public MemberListPanel(ObservableList\u003cMember\u003e memberList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"        memberListView.setItems(memberList);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"        memberListView.setCellFactory(listView -\u003e new MemberListViewCell());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Member} using a {@code MemberCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"    class MemberListViewCell extends ListCell\u003cMember\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"        protected void updateItem(Member member, boolean empty) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"            super.updateItem(member, empty);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"            if (empty || member \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"                setText(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"            } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"                setGraphic(new MemberCard(member, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"matochichap":1,"AlfredBeNoel":45,"jonasongg":3}},{"path":"src/main/java/seedu/address/ui/TagListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":" * Panel containing the list of tags.","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"public class TagListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"    private static final String FXML \u003d \"TagListPanel.fxml\";","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TagListPanel.class);","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"    @FXML","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"    private ListView\u003cTag\u003e tagListView;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"     * Creates a {@code TagListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * @param tagList The list of tags to be displayed.","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"    public TagListPanel(ObservableList\u003cTag\u003e tagList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"        super(FXML);","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"        tagListView.setItems(tagList);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"        tagListView.setCellFactory(listView -\u003e new TagListViewCell());","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"    class TagListViewCell extends ListCell\u003cTag\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"        protected void updateItem(Tag tag, boolean empty) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"            super.updateItem(tag, empty);","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"            if (empty || tag \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"                setText(null);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"                setGraphic(new Label(tag.tagName));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"matochichap":45,"jonasongg":2}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"    public final Task task;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"    private Label id;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"    private Label taskName;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"     * Creates a {@code MemberCard} with the given {@code Member} and index to display.","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     * @param task           The task to display.","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * @param displayedIndex The index of the task to display.","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"        super(FXML);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"        taskName.setText(task.taskName);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"AlfredBeNoel":42,"jonasongg":3}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":" * Panel containing the list of members.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"        super(FXML);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Member} using a {@code MemberCard}.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"AlfredBeNoel"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"                setGraphic(null);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"                setText(null);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"AlfredBeNoel":49,"jonasongg":2}},{"path":"src/main/resources/view/ApplicantListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"      \u003cLabel fx:id\u003d\"interviewTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$interviewTime\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Saezenn":1,"-":33}},{"path":"src/main/resources/view/ApplicantListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"  \u003cListView fx:id\u003d\"applicantListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":6,"jonasongg":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    -fx-font-size: 15pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    -fx-padding: 4 0 10 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"matochichap"},"content":"#tags .label, #tagListView .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"matochichap"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-10-31"},{"lineNumber":353,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":354,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":355,"author":{"gitId":"matochichap"},"content":"#tagListView .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":356,"author":{"gitId":"matochichap"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-31"},{"lineNumber":357,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":358,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":359,"author":{"gitId":"matochichap"},"content":"#tagListView .list-cell {","lastModifiedDate":"2023-10-31"},{"lineNumber":360,"author":{"gitId":"matochichap"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":361,"author":{"gitId":"matochichap"},"content":"    -fx-height: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":362,"author":{"gitId":"matochichap"},"content":"    -fx-padding: 0 5px;","lastModifiedDate":"2023-10-31"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":365,"author":{"gitId":"matochichap"},"content":".highlight {","lastModifiedDate":"2023-11-02"},{"lineNumber":366,"author":{"gitId":"matochichap"},"content":"    -fx-background-color: #454545;","lastModifiedDate":"2023-11-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"matochichap":15,"-":348,"jonasongg":4}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"\u003cfx:root","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"        resizable\u003d\"false\"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"        title\u003d\"Help\"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"        type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"        xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"          \u003cButton fx:id\u003d\"openUrlButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openUrl\" text\u003d\"View user guide\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"matochichap":8,"-":40,"jonasongg":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"\u003cfx:root minHeight\u003d\"800\" minWidth\u003d\"600\" onCloseRequest\u003d\"#handleExit\" title\u003d\"ClubMembersContacts\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"            \u003cVBox alignment\u003d\"CENTER\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"              \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Tags\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"              \u003cStackPane fx:id\u003d\"tagListPanelPlaceholder\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"            \u003cVBox alignment\u003d\"CENTER\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"              \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Members\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"              \u003cHBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"AlfredBeNoel"},"content":"                \u003cStackPane fx:id\u003d\"memberListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"matochichap"},"content":"                \u003cVBox styleClass\u003d\"highlight\" alignment\u003d\"CENTER\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"AlfredBeNoel"},"content":"                  \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Tasks\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"AlfredBeNoel"},"content":"                  \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"AlfredBeNoel"},"content":"                  \u003c/StackPane\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"AlfredBeNoel"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"AlfredBeNoel"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"            \u003cVBox alignment\u003d\"CENTER\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"              \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Applicants\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"              \u003cStackPane fx:id\u003d\"applicantListPanelPlaceholder\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"matochichap":7,"AlfredBeNoel":16,"-":40,"jonasongg":14}},{"path":"src/main/resources/view/MemberListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cLabel fx:id\u003d\"tasks\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$tasks\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlfredBeNoel"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"AlfredBeNoel"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"AlfredBeNoel"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlfredBeNoel":41}},{"path":"src/main/resources/view/MemberListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"    \u003cListView fx:id\u003d\"memberListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlfredBeNoel":8}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"jonasongg":2}},{"path":"src/main/resources/view/TagListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"        \u003cInsets right\u003d\"20\" left\u003d\"20\"/\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"    \u003cListView fx:id\u003d\"tagListView\" orientation\u003d\"HORIZONTAL\" maxHeight\u003d\"100\"/\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"matochichap":12}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AlfredBeNoel"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AlfredBeNoel"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"AlfredBeNoel"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"AlfredBeNoel"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"AlfredBeNoel"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"AlfredBeNoel"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"AlfredBeNoel"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"AlfredBeNoel"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"AlfredBeNoel"},"content":"                \u003cLabel fx:id\u003d\"taskName\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$taskName\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"AlfredBeNoel"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AlfredBeNoel"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"AlfredBeNoel":35}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"AlfredBeNoel"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"AlfredBeNoel":1,"-":7}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import static seedu.address.testutil.TypicalApplicants.AMY_APPLICANT;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.ViewMembersCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"        String deleteCommand \u003d \"deleteMember 9\";","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"        String viewMembersCommand \u003d ViewMembersCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"        assertCommandSuccess(viewMembersCommand, ViewMembersCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"matochichap"},"content":"    public void getFilteredMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"matochichap"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredMemberList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"matochichap"},"content":"    public void getFilteredApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"matochichap"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredApplicantList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"matochichap"},"content":"    public void getFilteredTagList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"matochichap"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTagList().remove(0));","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"matochichap"},"content":"        String addApplicantCommand \u003d AddApplicantCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"matochichap"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(AMY_APPLICANT).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"matochichap"},"content":"        expectedModel.addApplicant(expectedApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"matochichap"},"content":"        assertCommandFailure(addApplicantCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"matochichap":24,"-":158,"jonasongg":8}},{"path":"src/test/java/seedu/address/logic/commands/AddApplicantCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import static seedu.address.testutil.TypicalApplicants.getTypicalAddressBookWithApplicants;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"public class AddApplicantCommandIntegrationTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"    private Model model;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"        model \u003d new ModelManager(getTypicalAddressBookWithApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"    public void execute_newApplicant_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"        expectedModel.addApplicant(validApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"        assertCommandSuccess(new AddApplicantCommand(validApplicant), model,","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"                String.format(AddApplicantCommand.MESSAGE_SUCCESS, Messages.format(validApplicant)),","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"                expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"    public void execute_duplicateApplicant_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"        Applicant applicantInList \u003d model.getAddressBook().getApplicantList().get(0);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"        assertCommandFailure(new AddApplicantCommand(applicantInList), model,","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"                AddApplicantCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"matochichap":42}},{"path":"src/test/java/seedu/address/logic/commands/AddApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE_APPLICANT;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.ModelStub;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"public class AddApplicantCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"    public void constructor_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddApplicantCommand(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"    public void execute_applicantAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"        ModelStubAcceptingApplicantAdded modelStub \u003d new ModelStubAcceptingApplicantAdded();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"        CommandResult commandResult \u003d new AddApplicantCommand(validApplicant).execute(modelStub);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"        assertEquals(String.format(AddApplicantCommand.MESSAGE_SUCCESS, Messages.format(validApplicant)),","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"        assertEquals(Arrays.asList(validApplicant), modelStub.applicantsAdded);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"    public void execute_duplicateApplicant_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"        AddApplicantCommand addApplicantCommand \u003d new AddApplicantCommand(validApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"        ModelStub modelStub \u003d new ModelStubWithApplicant(validApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"        assertThrows(CommandException.class, AddApplicantCommand.MESSAGE_DUPLICATE_APPLICANT, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"                addApplicantCommand.execute(modelStub)","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"matochichap"},"content":"        Applicant alice \u003d new ApplicantBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"        Applicant bob \u003d new ApplicantBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"        AddApplicantCommand addAliceCommand \u003d new AddApplicantCommand(alice);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"        AddApplicantCommand addBobCommand \u003d new AddApplicantCommand(bob);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"matochichap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"matochichap"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"matochichap"},"content":"        AddApplicantCommand addAliceCommandCopy \u003d new AddApplicantCommand(alice);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"matochichap"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"matochichap"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"matochichap"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"matochichap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"matochichap"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"matochichap"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"matochichap"},"content":"        AddApplicantCommand addApplicantCommand \u003d new AddApplicantCommand(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"matochichap"},"content":"        String expected \u003d AddApplicantCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE_APPLICANT + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"matochichap"},"content":"        assertEquals(expected, addApplicantCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"matochichap"},"content":"     * A Model stub that contains a single applicant.","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"matochichap"},"content":"    private class ModelStubWithApplicant extends ModelStub {","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"matochichap"},"content":"        private final Applicant applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"matochichap"},"content":"        ModelStubWithApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"matochichap"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"matochichap"},"content":"            this.applicant \u003d applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"matochichap"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"matochichap"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"matochichap"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"matochichap"},"content":"            return this.applicant.isSamePerson(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"matochichap"},"content":"    private class ModelStubAcceptingApplicantAdded extends ModelStub {","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"matochichap"},"content":"        final ArrayList\u003cApplicant\u003e applicantsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"matochichap"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"matochichap"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"matochichap"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"matochichap"},"content":"            return applicantsAdded.stream().anyMatch(applicant::isSamePerson);","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"matochichap"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"matochichap"},"content":"        public void addApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"matochichap"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"matochichap"},"content":"            applicantsAdded.add(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"matochichap"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"matochichap"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"matochichap"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"matochichap":123}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithMembersApplicants;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookWithMembersApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithMembersApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":29,"jonasongg":3}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AlfredBeNoel"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.ApplicantContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.MemberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"@amybee123\";","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"@bobchoo456\";","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String VALID_TASK_AMY \u003d \"finish proposal\";","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String VALID_TASK_BOB \u003d \"book interviews\";","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String TASK_DESC_AMY \u003d \" \" + PREFIX_TASK + VALID_TASK_AMY;","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String TASK_DESC_BOB \u003d \" \" + PREFIX_TASK + VALID_TASK_BOB;","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM; // empty string not allowed for addresses","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"AlfredBeNoel"},"content":"    public static final String INVALID_TASK_DESC \u003d \" \" + PREFIX_TASK + \"read pro*\"; // \u0027*\u0027 not allowed in task name","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"    public static final EditMemberCommand.EditMemberDescriptor DESC_AMY_MEMBER;","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"    public static final EditMemberCommand.EditMemberDescriptor DESC_BOB_MEMBER;","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"        DESC_AMY_MEMBER \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"        DESC_BOB_MEMBER \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"    public static final EditApplicantCommand.EditApplicantDescriptor DESC_AMY_APPLICANT;","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"    public static final EditApplicantCommand.EditApplicantDescriptor DESC_BOB_APPLICANT;","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"    static {","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"        DESC_AMY_APPLICANT \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"                .withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"        DESC_BOB_APPLICANT \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"WinSheng1"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"matochichap"},"content":"        List\u003cMember\u003e expectedFilteredMemberList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredMemberList());","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"matochichap"},"content":"        List\u003cApplicant\u003e expectedFilteredApplicantList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"matochichap"},"content":"        assertEquals(expectedFilteredMemberList, actualModel.getFilteredMemberList());","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"matochichap"},"content":"        assertEquals(expectedFilteredApplicantList, actualModel.getFilteredApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"jonasongg"},"content":"     * Updates {@code model}\u0027s filtered list to show only the member at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"jonasongg"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"jonasongg"},"content":"    public static void showMemberAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"jonasongg"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredMemberList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"jonasongg"},"content":"        Member member \u003d model.getFilteredMemberList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"jonasongg"},"content":"        final String[] splitName \u003d member.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"jonasongg"},"content":"        model.updateFilteredMemberList(new MemberContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"jonasongg"},"content":"        assertEquals(1, model.getFilteredMemberList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"jonasongg"},"content":"     * Updates {@code model}\u0027s filtered list to show only the applicant at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"jonasongg"},"content":"    public static void showApplicantAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"jonasongg"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"jonasongg"},"content":"        Applicant applicant \u003d model.getFilteredApplicantList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"jonasongg"},"content":"        final String[] splitName \u003d applicant.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"jonasongg"},"content":"        model.updateFilteredApplicantList(new ApplicantContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"jonasongg"},"content":"        assertEquals(1, model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"matochichap":6,"AlfredBeNoel":9,"WinSheng1":19,"-":106,"jonasongg":24}},{"path":"src/test/java/seedu/address/logic/commands/CopyApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CopyCommandTestUtil.checkClipboardContents;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CopyCommandTestUtil.getClipboardContents;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CopyCommandTestUtil.replaceClipboardContents;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalApplicants.getTypicalAddressBookWithApplicants;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"import java.awt.datatransfer.Transferable;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.condition.DisabledIf;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":" * {@code CopyApplicantCommand}.","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"public class CopyApplicantCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBookWithApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    @DisabledIf(\"java.awt.GraphicsEnvironment.isHeadless()\")","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        // Save clipboard contents before executing command","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"        Transferable clipboardContentsBefore \u003d getClipboardContents();","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"        Applicant applicantToCopy \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        CopyApplicantCommand copyApplicantCommand \u003d new CopyApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d String.format(CopyApplicantCommand.MESSAGE_COPY_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"                applicantToCopy.detailsToCopy());","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"        // Expected model is the same as the model before executing the command","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"        assertCommandSuccess(copyApplicantCommand, model, expectedMessage, model);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        // Check clipboard contents is correct","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"        checkClipboardContents(applicantToCopy.detailsToCopy());","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"        // Restore clipboard contents","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"        replaceClipboardContents(clipboardContentsBefore);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"        CopyApplicantCommand copyApplicantCommand \u003d new CopyApplicantCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"        assertCommandFailure(copyApplicantCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"    @DisabledIf(\"java.awt.GraphicsEnvironment.isHeadless()\")","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"        // Save clipboard contents before executing command","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"        Transferable clipboardContentsBefore \u003d getClipboardContents();","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"        Applicant applicantToCopy \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"        CopyApplicantCommand copyApplicantCommand \u003d new CopyApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d String.format(CopyApplicantCommand.MESSAGE_COPY_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"                applicantToCopy.detailsToCopy());","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"        // Expected model is the same as the model before executing the command","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"        assertCommandSuccess(copyApplicantCommand, model, expectedMessage, model);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"jonasongg"},"content":"        // Check clipboard contents is correct","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"        checkClipboardContents(applicantToCopy.detailsToCopy());","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"        // Restore clipboard contents","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"        replaceClipboardContents(clipboardContentsBefore);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"jonasongg"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jonasongg"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getApplicantList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jonasongg"},"content":"        CopyApplicantCommand copyApplicantCommand \u003d new CopyApplicantCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"        assertCommandFailure(copyApplicantCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"jonasongg"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"jonasongg"},"content":"        CopyApplicantCommand copyApplicantFirstCommand \u003d new CopyApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"jonasongg"},"content":"        CopyApplicantCommand copyApplicantSecondCommand \u003d new CopyApplicantCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jonasongg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jonasongg"},"content":"        assertEquals(copyApplicantFirstCommand, copyApplicantFirstCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jonasongg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"jonasongg"},"content":"        CopyApplicantCommand copyApplicantFirstCommandCopy \u003d new CopyApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"jonasongg"},"content":"        assertEquals(copyApplicantFirstCommand, copyApplicantFirstCommandCopy);","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"jonasongg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"jonasongg"},"content":"        assertFalse(copyApplicantFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"jonasongg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"jonasongg"},"content":"        assertNotEquals(null, copyApplicantFirstCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"jonasongg"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"jonasongg"},"content":"        assertNotEquals(copyApplicantFirstCommand, copyApplicantSecondCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jonasongg"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"jonasongg"},"content":"        Index applicantIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"jonasongg"},"content":"        CopyApplicantCommand copyApplicantCommand \u003d new CopyApplicantCommand(applicantIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"jonasongg"},"content":"        String expected \u003d CopyApplicantCommand.class.getCanonicalName() + \"{applicantIndex\u003d\" + applicantIndex + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expected, copyApplicantCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jonasongg":133}},{"path":"src/test/java/seedu/address/logic/commands/CopyCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import java.awt.datatransfer.DataFlavor;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import java.awt.datatransfer.Transferable;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import java.awt.datatransfer.UnsupportedFlavorException;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":" * Contains helper methods for testing CopyCommands that copy text to the clipboard.","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"public class CopyCommandTestUtil {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * Gets the contents of the clipboard.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     * @return the contents of the clipboard as a {@code Transferable} object.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    public static Transferable getClipboardContents() {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"        return Toolkit.getDefaultToolkit().getSystemClipboard().getContents(null);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * Checks that the contents of the clipboard is equal to the correct text.","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     * @param correctText the correct text to check against.","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    public static void checkClipboardContents(String correctText) {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"            assertEquals(correctText,","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"                    Toolkit.getDefaultToolkit().getSystemClipboard().getData(DataFlavor.stringFlavor));","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"        } catch (UnsupportedFlavorException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"            throw new AssertionError(\"DataFlavor.stringFlavor is not supported\", e);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"            throw new AssertionError(\"IOException when getting clipboard contents\", e);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"     * Replaces the contents of the clipboard with the specified {@code Transferable} object.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"     * @param clipboardContent the {@code Transferable} object to replace the clipboard contents with.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"    public static void replaceClipboardContents(Transferable clipboardContent) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        if (clipboardContent !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"            Toolkit.getDefaultToolkit().getSystemClipboard().setContents(clipboardContent, null);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jonasongg":51}},{"path":"src/test/java/seedu/address/logic/commands/CopyMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CopyCommandTestUtil.checkClipboardContents;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CopyCommandTestUtil.getClipboardContents;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CopyCommandTestUtil.replaceClipboardContents;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBookWithMembers;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"import java.awt.datatransfer.Transferable;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.condition.DisabledIf;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":" * {@code CopyMemberCommand}.","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"public class CopyMemberCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBookWithMembers(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    @DisabledIf(\"java.awt.GraphicsEnvironment.isHeadless()\")","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        // Save clipboard contents before executing command","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"        Transferable clipboardContentsBefore \u003d getClipboardContents();","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"        Member memberToCopy \u003d model.getFilteredMemberList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        CopyMemberCommand copyMemberCommand \u003d new CopyMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d String.format(CopyMemberCommand.MESSAGE_COPY_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"                memberToCopy.detailsToCopy());","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"        // Expected model is the same as the model before executing the command","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"        assertCommandSuccess(copyMemberCommand, model, expectedMessage, model);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        // Check clipboard contents is correct","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"        checkClipboardContents(memberToCopy.detailsToCopy());","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"        // Restore clipboard contents","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"        replaceClipboardContents(clipboardContentsBefore);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMemberList().size() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"        CopyMemberCommand copyMemberCommand \u003d new CopyMemberCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"        assertCommandFailure(copyMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"    @DisabledIf(\"java.awt.GraphicsEnvironment.isHeadless()\")","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"        // Save clipboard contents before executing command","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"        Transferable clipboardContentsBefore \u003d getClipboardContents();","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"        showMemberAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"        Member memberToCopy \u003d model.getFilteredMemberList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"        CopyMemberCommand copyMemberCommand \u003d new CopyMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d String.format(CopyMemberCommand.MESSAGE_COPY_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"                memberToCopy.detailsToCopy());","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"        // Expected model is the same as the model before executing the command","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"        assertCommandSuccess(copyMemberCommand, model, expectedMessage, model);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"jonasongg"},"content":"        // Check clipboard contents is correct","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"        checkClipboardContents(memberToCopy.detailsToCopy());","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"        // Restore clipboard contents","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"        replaceClipboardContents(clipboardContentsBefore);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"        showMemberAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"jonasongg"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jonasongg"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMemberList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jonasongg"},"content":"        CopyMemberCommand copyMemberCommand \u003d new CopyMemberCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"        assertCommandFailure(copyMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"jonasongg"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"jonasongg"},"content":"        CopyMemberCommand copyMemberFirstCommand \u003d new CopyMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"jonasongg"},"content":"        CopyMemberCommand copyMemberSecondCommand \u003d new CopyMemberCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jonasongg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jonasongg"},"content":"        assertEquals(copyMemberFirstCommand, copyMemberFirstCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jonasongg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"jonasongg"},"content":"        CopyMemberCommand copyMemberFirstCommandCopy \u003d new CopyMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"jonasongg"},"content":"        assertEquals(copyMemberFirstCommand, copyMemberFirstCommandCopy);","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"jonasongg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"jonasongg"},"content":"        assertFalse(copyMemberFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"jonasongg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"jonasongg"},"content":"        assertNotEquals(null, copyMemberFirstCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"jonasongg"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"jonasongg"},"content":"        assertNotEquals(copyMemberFirstCommand, copyMemberSecondCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jonasongg"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"jonasongg"},"content":"        Index memberIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"jonasongg"},"content":"        CopyMemberCommand copyMemberCommand \u003d new CopyMemberCommand(memberIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"jonasongg"},"content":"        String expected \u003d CopyMemberCommand.class.getCanonicalName() + \"{memberIndex\u003d\" + memberIndex + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expected, copyMemberCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jonasongg":133}},{"path":"src/test/java/seedu/address/logic/commands/DeleteApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithMembersApplicants;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for * {@code DeleteMemberCommand}.","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"public class DeleteApplicantTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithMembersApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"    * Test case to verify the successful execution of a delete operation on a valid index","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"    * in an unfiltered list of applicants. The test checks whether the operation produces the","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"    * expected results.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"    */","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand deleteCommand \u003d new DeleteApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"        String expectedMessage \u003d String.format(DeleteApplicantCommand.MESSAGE_DELETE_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"                Messages.format(applicantToDelete));","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"        expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"     * Test case to verify that executing a delete operation with an invalid index in an","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"     * unfiltered list of applicants results in a {@link CommandException}. The test checks","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"     * whether the operation correctly throws the expected exception.","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand deleteApplicantCommand \u003d new DeleteApplicantCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"        assertCommandFailure(deleteApplicantCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"     * Test case to verify the successful execution of a delete operation on a valid index","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"     * within a filtered list of members. The test checks whether the operation produces the","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"     * expected results.","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand deleteCommand \u003d new DeleteApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Saezenn"},"content":"        String expectedMessage \u003d String.format(DeleteApplicantCommand.MESSAGE_DELETE_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Saezenn"},"content":"                Messages.format(applicantToDelete));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Saezenn"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Saezenn"},"content":"        expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Saezenn"},"content":"        showNoApplicant(expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Saezenn"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Saezenn"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Saezenn"},"content":"    private void showNoApplicant(Model model) {","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Saezenn"},"content":"        model.updateFilteredApplicantList(p -\u003e false);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Saezenn"},"content":"        assertTrue(model.getFilteredApplicantList().isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Saezenn"},"content":"     * Test case to verify that executing a delete operation with an invalid index in a","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Saezenn"},"content":"     * filtered list of applicants results in a {@link CommandException}. The test checks","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Saezenn"},"content":"     * whether the operation correctly throws the expected exception.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Saezenn"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Saezenn"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Saezenn"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Saezenn"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Saezenn"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getApplicantList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand deleteCommand \u003d new DeleteApplicantCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Saezenn"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Saezenn"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand deleteFirstCommand \u003d new DeleteApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand deleteSecondCommand \u003d new DeleteApplicantCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Saezenn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Saezenn"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Saezenn"},"content":"        // same values(index) -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand deleteFirstCommandCopy \u003d new DeleteApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Saezenn"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Saezenn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Saezenn"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Saezenn"},"content":"        //different types(index vs int) -\u003e returns false;","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Saezenn"},"content":"        assertFalse(deleteSecondCommand.equals(2));","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Saezenn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Saezenn"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Saezenn"},"content":"        // different applicant(index) -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"Saezenn"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"Saezenn"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"Saezenn"},"content":"        Index applicantIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand deleteApplicantCommand \u003d new DeleteApplicantCommand(applicantIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Saezenn"},"content":"        String expected \u003d DeleteApplicantCommand.class.getCanonicalName() + \"{applicantIndex\u003d\" + applicantIndex + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Saezenn"},"content":"        assertEquals(expected, deleteApplicantCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Saezenn":147}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMemberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithMembersApplicants;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for * {@code DeleteMemberCommand}.","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"public class DeleteMemberTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithMembersApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"    * Test case to verify the successful execution of a delete operation on a valid index","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"    * in an unfiltered list of members. The test checks whether the operation produces the","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"    * expected results.","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"    */","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"        Member memberToDelete \u003d model.getFilteredMemberList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"        DeleteMemberCommand deleteCommand \u003d new DeleteMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"        String expectedMessage \u003d String.format(DeleteMemberCommand.MESSAGE_DELETE_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"                Messages.format(memberToDelete));","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"        expectedModel.deleteMember(memberToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"     * Test case to verify that executing a delete operation with an invalid index in an","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"     * unfiltered list of members results in a {@link CommandException}. The test checks","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"     * whether the operation correctly throws the expected exception.","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMemberList().size() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"        assertCommandFailure(deleteMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"     * Test case to verify the successful execution of a delete operation on a valid index","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"     * within a filtered list of members. The test checks whether the operation produces the","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"     * expected results.","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"        showMemberAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"        Member memberToDelete \u003d model.getFilteredMemberList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"        DeleteMemberCommand deleteCommand \u003d new DeleteMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Saezenn"},"content":"        String expectedMessage \u003d String.format(DeleteMemberCommand.MESSAGE_DELETE_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Saezenn"},"content":"                Messages.format(memberToDelete));","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Saezenn"},"content":"        expectedModel.deleteMember(memberToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Saezenn"},"content":"        showNoMember(expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Saezenn"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Saezenn"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Saezenn"},"content":"    private void showNoMember(Model model) {","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Saezenn"},"content":"        model.updateFilteredMemberList(p -\u003e false);","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Saezenn"},"content":"        assertTrue(model.getFilteredMemberList().isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Saezenn"},"content":"     * Test case to verify that executing a delete operation with an invalid index in a","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Saezenn"},"content":"     * filtered list of members results in a {@link CommandException}. The test checks","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Saezenn"},"content":"     * whether the operation correctly throws the expected exception.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Saezenn"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Saezenn"},"content":"        showMemberAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Saezenn"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Saezenn"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Saezenn"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMemberList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Saezenn"},"content":"        DeleteMemberCommand deleteCommand \u003d new DeleteMemberCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Saezenn"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Saezenn"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Saezenn"},"content":"        DeleteMemberCommand deleteFirstCommand \u003d new DeleteMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Saezenn"},"content":"        DeleteMemberCommand deleteSecondCommand \u003d new DeleteMemberCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Saezenn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Saezenn"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Saezenn"},"content":"        // same values(index) -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Saezenn"},"content":"        DeleteMemberCommand deleteFirstCommandCopy \u003d new DeleteMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Saezenn"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Saezenn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Saezenn"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Saezenn"},"content":"        //different types(index vs int) -\u003e returns false;","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Saezenn"},"content":"        assertFalse(deleteSecondCommand.equals(2));","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Saezenn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Saezenn"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Saezenn"},"content":"        // different member(index) -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Saezenn"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Saezenn"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"Saezenn"},"content":"        Index memberIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"Saezenn"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(memberIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Saezenn"},"content":"        String expected \u003d DeleteMemberCommand.class.getCanonicalName() + \"{memberIndex\u003d\" + memberIndex + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Saezenn"},"content":"        assertEquals(expected, deleteMemberCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Saezenn":146}},{"path":"src/test/java/seedu/address/logic/commands/EditApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY_APPLICANT;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB_APPLICANT;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithMembersApplicants;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditApplicantCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditApplicantCommand.","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"public class EditApplicantCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithMembersApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(editedApplicant).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"        String expectedMessage \u003d String.format(EditApplicantCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"        expectedModel.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"        assertCommandSuccess(editApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"        Index indexLastApplicant \u003d Index.fromOneBased(model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"        Applicant lastApplicant \u003d model.getFilteredApplicantList().get(indexLastApplicant.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"        ApplicantBuilder applicantInList \u003d new ApplicantBuilder(lastApplicant);","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"        Applicant editedApplicant \u003d applicantInList.withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(indexLastApplicant, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"        String expectedMessage \u003d String.format(EditApplicantCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"        expectedModel.setApplicant(lastApplicant, editedApplicant);","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"        assertCommandSuccess(editApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"                new EditApplicantDescriptor());","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"        Applicant editedApplicant \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"        String expectedMessage \u003d String.format(EditApplicantCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"        assertCommandSuccess(editApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"        Applicant applicantInFilteredList \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"WinSheng1"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder(applicantInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"WinSheng1"},"content":"                new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"WinSheng1"},"content":"        String expectedMessage \u003d String.format(EditApplicantCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"WinSheng1"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"WinSheng1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"WinSheng1"},"content":"        expectedModel.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"WinSheng1"},"content":"        assertCommandSuccess(editApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"WinSheng1"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"WinSheng1"},"content":"        Applicant firstApplicant \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(firstApplicant).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"WinSheng1"},"content":"        assertCommandFailure(editApplicantCommand, model, EditApplicantCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"WinSheng1"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"WinSheng1"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"WinSheng1"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"WinSheng1"},"content":"        Applicant applicantInList \u003d model.getAddressBook().getApplicantList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"WinSheng1"},"content":"                new EditApplicantDescriptorBuilder(applicantInList).build());","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"WinSheng1"},"content":"        assertCommandFailure(editApplicantCommand, model, EditApplicantCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"WinSheng1"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"WinSheng1"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"WinSheng1"},"content":"        assertCommandFailure(editApplicantCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"WinSheng1"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"WinSheng1"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"WinSheng1"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"WinSheng1"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"WinSheng1"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"WinSheng1"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"WinSheng1"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMemberList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"WinSheng1"},"content":"                new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"WinSheng1"},"content":"        assertCommandFailure(editApplicantCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"WinSheng1"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"WinSheng1"},"content":"        final EditApplicantCommand standardCommand \u003d new EditApplicantCommand(INDEX_FIRST_PERSON, DESC_AMY_APPLICANT);","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"WinSheng1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor copyDescriptor \u003d new EditApplicantDescriptor(DESC_AMY_APPLICANT);","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand commandWithSameValues \u003d new EditApplicantCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"WinSheng1"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"WinSheng1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"WinSheng1"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"WinSheng1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"WinSheng1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"WinSheng1"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(standardCommand.equals(new EditApplicantCommand(INDEX_SECOND_PERSON, DESC_AMY_APPLICANT)));","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"WinSheng1"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(standardCommand.equals(new EditApplicantCommand(INDEX_FIRST_PERSON, DESC_BOB_APPLICANT)));","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"WinSheng1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"WinSheng1"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(index, editApplicantDescriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"WinSheng1"},"content":"        String expected \u003d EditApplicantCommand.class.getCanonicalName() + \"{index\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"WinSheng1"},"content":"                + index + \", editApplicantDescriptor\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"WinSheng1"},"content":"                + editApplicantDescriptor + \"}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(expected, editApplicantCommand.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"WinSheng1":186}},{"path":"src/test/java/seedu/address/logic/commands/EditApplicantDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY_APPLICANT;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB_APPLICANT;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditApplicantCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"public class EditApplicantDescriptorTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"    public void equals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor descriptorWithSameValues \u003d new EditApplicantDescriptor(DESC_AMY_APPLICANT);","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"        assertTrue(DESC_AMY_APPLICANT.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"        assertTrue(DESC_AMY_APPLICANT.equals(DESC_AMY_APPLICANT));","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_APPLICANT.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_APPLICANT.equals(5));","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_APPLICANT.equals(DESC_BOB_APPLICANT));","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor editedCadence \u003d new EditApplicantDescriptorBuilder(DESC_AMY_APPLICANT)","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_APPLICANT.equals(editedCadence));","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"        editedCadence \u003d new EditApplicantDescriptorBuilder(DESC_AMY_APPLICANT).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_APPLICANT.equals(editedCadence));","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"        String expected \u003d EditApplicantDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"                + editApplicantDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"                + editApplicantDescriptor.getPhone().orElse(null) + \", interview time\u003d\"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"                + editApplicantDescriptor.getInterviewTime().orElse(null) + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(expected, editApplicantDescriptor.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"Saezenn":2,"WinSheng1":53}},{"path":"src/test/java/seedu/address/logic/commands/EditMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY_MEMBER;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB_MEMBER;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithMembersApplicants;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditMemberCommand.","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"public class EditMemberCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithMembersApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"        Member editedMember \u003d new MemberBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(editedMember).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"            Messages.format(editedMember));","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"        expectedModel.setMember(model.getFilteredMemberList().get(0), editedMember);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"        assertCommandSuccess(editMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"        Index indexLastMember \u003d Index.fromOneBased(model.getFilteredMemberList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"        Member lastMember \u003d model.getFilteredMemberList().get(indexLastMember.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"        MemberBuilder memberInList \u003d new MemberBuilder(lastMember);","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"        Member editedMember \u003d memberInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(indexLastMember, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"            Messages.format(editedMember));","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"        expectedModel.setMember(lastMember, editedMember);","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"        assertCommandSuccess(editMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(INDEX_FIRST_PERSON, new EditMemberDescriptor());","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"        Member editedMember \u003d model.getFilteredMemberList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"            Messages.format(editedMember));","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"        assertCommandSuccess(editMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"WinSheng1"},"content":"        showMemberAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"WinSheng1"},"content":"        Member memberInFilteredList \u003d model.getFilteredMemberList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"WinSheng1"},"content":"        Member editedMember \u003d new MemberBuilder(memberInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"WinSheng1"},"content":"                new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"WinSheng1"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"WinSheng1"},"content":"            Messages.format(editedMember));","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"WinSheng1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"WinSheng1"},"content":"        expectedModel.setMember(model.getFilteredMemberList().get(0), editedMember);","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"WinSheng1"},"content":"        assertCommandSuccess(editMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"WinSheng1"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"WinSheng1"},"content":"        Member firstMember \u003d model.getFilteredMemberList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(firstMember).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"WinSheng1"},"content":"        assertCommandFailure(editMemberCommand, model, EditMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"WinSheng1"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"WinSheng1"},"content":"        showMemberAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"WinSheng1"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"WinSheng1"},"content":"        Member memberInList \u003d model.getAddressBook().getMemberList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"WinSheng1"},"content":"                new EditMemberDescriptorBuilder(memberInList).build());","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"WinSheng1"},"content":"        assertCommandFailure(editMemberCommand, model, EditMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"WinSheng1"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"WinSheng1"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMemberList().size() + 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"WinSheng1"},"content":"        assertCommandFailure(editMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"WinSheng1"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"WinSheng1"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"WinSheng1"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"WinSheng1"},"content":"        showMemberAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"WinSheng1"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"WinSheng1"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"WinSheng1"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMemberList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"WinSheng1"},"content":"                new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"WinSheng1"},"content":"        assertCommandFailure(editMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"WinSheng1"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"WinSheng1"},"content":"        final EditMemberCommand standardCommand \u003d new EditMemberCommand(INDEX_FIRST_PERSON, DESC_AMY_MEMBER);","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"WinSheng1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor copyDescriptor \u003d new EditMemberDescriptor(DESC_AMY_MEMBER);","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand commandWithSameValues \u003d new EditMemberCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"WinSheng1"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"WinSheng1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"WinSheng1"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"WinSheng1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"WinSheng1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"WinSheng1"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(standardCommand.equals(new EditMemberCommand(INDEX_SECOND_PERSON, DESC_AMY_MEMBER)));","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"WinSheng1"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(standardCommand.equals(new EditMemberCommand(INDEX_FIRST_PERSON, DESC_BOB_MEMBER)));","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"WinSheng1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"WinSheng1"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor editMemberDescriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(index, editMemberDescriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"WinSheng1"},"content":"        String expected \u003d EditMemberCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editMemberDescriptor\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"WinSheng1"},"content":"                + editMemberDescriptor + \"}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(expected, editMemberCommand.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"WinSheng1":188}},{"path":"src/test/java/seedu/address/logic/commands/EditMemberDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY_MEMBER;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB_MEMBER;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"public class EditMemberDescriptorTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"    public void equals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor descriptorWithSameValues \u003d new EditMemberDescriptor(DESC_AMY_MEMBER);","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"        assertTrue(DESC_AMY_MEMBER.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"        assertTrue(DESC_AMY_MEMBER.equals(DESC_AMY_MEMBER));","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_MEMBER.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_MEMBER.equals(5));","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_MEMBER.equals(DESC_BOB_MEMBER));","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY_MEMBER)","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_MEMBER.equals(editedAmy));","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY_MEMBER).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_MEMBER.equals(editedAmy));","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY_MEMBER).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_MEMBER.equals(editedAmy));","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY_MEMBER).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_MEMBER.equals(editedAmy));","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY_MEMBER).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"        assertFalse(DESC_AMY_MEMBER.equals(editedAmy));","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor editMemberDescriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"        String expected \u003d EditMemberDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"                + editMemberDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"                + editMemberDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"                + editMemberDescriptor.getEmail().orElse(null) + \", telegram\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"                + editMemberDescriptor.getTelegram().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"                + editMemberDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(expected, editMemberDescriptor.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"WinSheng1":72}},{"path":"src/test/java/seedu/address/logic/commands/FindApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalApplicants.CARL_APPLICANT;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalApplicants.ELLE_APPLICANT;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalApplicants.FIONA_APPLICANT;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithMembersApplicants;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.ApplicantContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"public class FindApplicantCommandTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithMembersApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithMembersApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"                new ApplicantContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"                new ApplicantContainsKeywordsPredicate(Collections.singletonList(\"Benson\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"        FindApplicantCommand findFirstCommand \u003d new FindApplicantCommand(firstPredicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"        FindApplicantCommand findSecondCommand \u003d new FindApplicantCommand(secondPredicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"        FindApplicantCommand findFirstCommandCopy \u003d new FindApplicantCommand(firstPredicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"   public void execute_zeroKeywords_noApplicantFound() {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"        FindApplicantCommand command \u003d new FindApplicantCommand(predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"    public void execute_multipleKeywords_multipleApplicantFound() {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"        FindApplicantCommand command \u003d new FindApplicantCommand(predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"        assertEquals(Arrays.asList(CARL_APPLICANT, ELLE_APPLICANT, FIONA_APPLICANT), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate predicate \u003d new ApplicantContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"        FindApplicantCommand findCommand \u003d new FindApplicantCommand(predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"Saezenn"},"content":"        String expected \u003d FindApplicantCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"Saezenn"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"Saezenn"},"content":"     * Parses {@code userInput} into a {@code ApplicantContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"Saezenn"},"content":"    private ApplicantContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"Saezenn"},"content":"        return new ApplicantContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"Saezenn":86}},{"path":"src/test/java/seedu/address/logic/commands/FindMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalMembers.ALAN_MEMBER;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalMembers.BETTY_MEMBER;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalMembers.CHARLES_MEMBER;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithMembersApplicants;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.MemberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"public class FindMemberCommandTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithMembersApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithMembersApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"                new MemberContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"                new MemberContainsKeywordsPredicate(Collections.singletonList(\"Benson\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"        FindMemberCommand findFirstCommand \u003d new FindMemberCommand(firstPredicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"        FindMemberCommand findSecondCommand \u003d new FindMemberCommand(secondPredicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"        FindMemberCommand findFirstCommandCopy \u003d new FindMemberCommand(firstPredicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"   public void execute_zeroKeywords_noMemberFound() {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEMBERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"        FindMemberCommand command \u003d new FindMemberCommand(predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"        expectedModel.updateFilteredMemberList(predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredMemberList());","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"    public void execute_multipleKeywords_multipleMemberFound() {","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEMBERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate predicate \u003d preparePredicate(\"Alan Betty Charles\");","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"        FindMemberCommand command \u003d new FindMemberCommand(predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"        expectedModel.updateFilteredMemberList(predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"        assertEquals(Arrays.asList(ALAN_MEMBER, BETTY_MEMBER, CHARLES_MEMBER), model.getFilteredMemberList());","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate predicate \u003d new MemberContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"Saezenn"},"content":"        FindMemberCommand findCommand \u003d new FindMemberCommand(predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"Saezenn"},"content":"        String expected \u003d FindMemberCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"Saezenn"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"Saezenn"},"content":"     * Parses {@code userInput} into a {@code ApplicantContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"Saezenn"},"content":"    private MemberContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"Saezenn"},"content":"        return new MemberContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"Saezenn":88}},{"path":"src/test/java/seedu/address/logic/commands/ViewApplicantsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalApplicants.getTypicalAddressBookWithApplicants;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ViewApplicantsCommand.","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"public class ViewApplicantsCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    private Model model;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"        model \u003d new ModelManager(getTypicalAddressBookWithApplicants(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    public void execute_applicantsIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        assertCommandSuccess(new ViewApplicantsCommand(), model, ViewApplicantsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"    public void execute_applicantsIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"        assertCommandSuccess(new ViewApplicantsCommand(), model, ViewApplicantsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"jonasongg":39}},{"path":"src/test/java/seedu/address/logic/commands/ViewMembersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBookWithMembers;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ViewMembersCommand.","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"public class ViewMembersCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    private Model model;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"        model \u003d new ModelManager(getTypicalAddressBookWithMembers(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    public void execute_applicantsIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        assertCommandSuccess(new ViewMembersCommand(), model, ViewMembersCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"    public void execute_membersIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"        showMemberAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"        assertCommandSuccess(new ViewMembersCommand(), model, ViewMembersCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"jonasongg":39}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.CopyApplicantCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.CopyMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.DeleteApplicantCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditApplicantCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditApplicantCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.FindApplicantCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.FindMemberCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.ViewMembersCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.ApplicantContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.MemberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"import seedu.address.testutil.ApplicantUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.MemberUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"    public void parseCommand_addApplicant() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"        AddApplicantCommand command \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"                (AddApplicantCommand) parser.parseCommand(ApplicantUtil.getAddApplicantCommand(applicant));","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"        assertEquals(new AddApplicantCommand(applicant), command);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"    public void parseCommand_deleteApplicant() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand commandWord \u003d (DeleteApplicantCommand) parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"                DeleteApplicantCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"        DeleteApplicantCommand commandAlias \u003d (DeleteApplicantCommand) parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"                DeleteApplicantCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"        assertEquals(new DeleteApplicantCommand(INDEX_FIRST_PERSON), commandWord);","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"        assertEquals(new DeleteApplicantCommand(INDEX_FIRST_PERSON), commandAlias);","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"    public void parseCommand_commandWord_deleteMember() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"        DeleteMemberCommand commandWord \u003d (DeleteMemberCommand) parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"                DeleteMemberCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"        DeleteMemberCommand commandAlias \u003d (DeleteMemberCommand) parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"Saezenn"},"content":"                DeleteMemberCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"Saezenn"},"content":"        assertEquals(new DeleteMemberCommand(INDEX_FIRST_PERSON), commandWord);","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"Saezenn"},"content":"        assertEquals(new DeleteMemberCommand(INDEX_FIRST_PERSON), commandAlias);","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"    public void parseCommand_editMember() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"        Member member \u003d new MemberBuilder().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(member).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand command \u003d (EditMemberCommand) parser.parseCommand(EditMemberCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + MemberUtil.getEditMemberDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(new EditMemberCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"WinSheng1"},"content":"    public void parseCommand_editApplicant() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"WinSheng1"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(applicant).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand command \u003d (EditApplicantCommand) parser.parseCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"WinSheng1"},"content":"                EditApplicantCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"WinSheng1"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + ApplicantUtil.getEditApplicantDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(new EditApplicantCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"Saezenn"},"content":"    public void parseCommand_findApplicant() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"Saezenn"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"hello\", \"world\", \"wassup\");","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"Saezenn"},"content":"        FindApplicantCommand commandWord \u003d (FindApplicantCommand) parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"Saezenn"},"content":"                FindApplicantCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"Saezenn"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"Saezenn"},"content":"        FindApplicantCommand commandAlias \u003d (FindApplicantCommand) parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"Saezenn"},"content":"                FindApplicantCommand.COMMAND_ALIAS + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"Saezenn"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"Saezenn"},"content":"        assertEquals(new FindApplicantCommand(new ApplicantContainsKeywordsPredicate(keywords)), commandWord);","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"Saezenn"},"content":"        assertEquals(new FindApplicantCommand(new ApplicantContainsKeywordsPredicate(keywords)), commandAlias);","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"Saezenn"},"content":"    public void parseCommand_findMember() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"Saezenn"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"hello\", \"world\", \"wassup\");","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"Saezenn"},"content":"        FindMemberCommand commandWord \u003d (FindMemberCommand) parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"Saezenn"},"content":"                FindMemberCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"Saezenn"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"Saezenn"},"content":"        FindMemberCommand commandAlias \u003d (FindMemberCommand) parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"Saezenn"},"content":"                FindMemberCommand.COMMAND_ALIAS + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"Saezenn"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"Saezenn"},"content":"        assertEquals(new FindMemberCommand(new MemberContainsKeywordsPredicate(keywords)), commandWord);","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"Saezenn"},"content":"        assertEquals(new FindMemberCommand(new MemberContainsKeywordsPredicate(keywords)), commandAlias);","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"jonasongg"},"content":"    public void parseCommand_viewMember() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"jonasongg"},"content":"        assertTrue(parser.parseCommand(ViewMembersCommand.COMMAND_WORD) instanceof ViewMembersCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"jonasongg"},"content":"        assertTrue(parser.parseCommand(ViewMembersCommand.COMMAND_WORD + \" 3\") instanceof ViewMembersCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"jonasongg"},"content":"    public void parseCommand_viewApplicant() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"jonasongg"},"content":"        assertTrue(parser.parseCommand(ViewMembersCommand.COMMAND_WORD) instanceof ViewMembersCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jonasongg"},"content":"        assertTrue(parser.parseCommand(ViewMembersCommand.COMMAND_WORD + \" 3\") instanceof ViewMembersCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"jonasongg"},"content":"    public void parseCommand_copyMember() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"jonasongg"},"content":"        CopyMemberCommand command \u003d (CopyMemberCommand) parser.parseCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"jonasongg"},"content":"                CopyMemberCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"jonasongg"},"content":"        assertEquals(new CopyMemberCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"jonasongg"},"content":"    public void parseCommand_copyApplicant() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"jonasongg"},"content":"        CopyApplicantCommand command \u003d (CopyApplicantCommand) parser.parseCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"jonasongg"},"content":"                CopyApplicantCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"jonasongg"},"content":"        assertEquals(new CopyApplicantCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"matochichap":9,"Saezenn":46,"WinSheng1":25,"-":68,"jonasongg":26}},{"path":"src/test/java/seedu/address/logic/parser/CopyApplicantCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.CopyApplicantCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"public class CopyApplicantCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    private final CopyApplicantCommandParser parser \u003d new CopyApplicantCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"    public void parse_validArgs_returnsCopyApplicantCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"        assertParseSuccess(parser, \"1\", new CopyApplicantCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"                CopyApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jonasongg":26}},{"path":"src/test/java/seedu/address/logic/parser/CopyMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import seedu.address.logic.commands.CopyMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"public class CopyMemberCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    private final CopyMemberCommandParser parser \u003d new CopyMemberCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"    public void parse_validArgs_returnsCopyMemberCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"        assertParseSuccess(parser, \"1\", new CopyMemberCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"                CopyMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jonasongg":26}},{"path":"src/test/java/seedu/address/logic/parser/DeleteApplicantCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.DeleteApplicantCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"public class DeleteApplicantCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"    private DeleteApplicantCommandParser parser \u003d new DeleteApplicantCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"        public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"        assertParseSuccess(parser, \"1\", new DeleteApplicantCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"                DeleteApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"    public void parse_invalidNumber_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"        assertParseFailure(parser, \"0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"                DeleteApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"Saezenn":33}},{"path":"src/test/java/seedu/address/logic/parser/DeleteMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"public class DeleteMemberCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"    private DeleteMemberCommandParser parser \u003d new DeleteMemberCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"        assertParseSuccess(parser, \"1\", new DeleteMemberCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"                DeleteMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"    public void parse_invalidNumber_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"        assertParseFailure(parser, \"0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"                DeleteMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"Saezenn":33}},{"path":"src/test/java/seedu/address/logic/parser/EditApplicantCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditApplicantCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditApplicantCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"public class EditApplicantCommandParserTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditApplicantCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"    private EditApplicantCommandParser parser \u003d new EditApplicantCommandParser();","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        // no index specified","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"        // no field specified","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"1\", EditApplicantCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"        // negative index","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"        // zero index","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + NAME_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand expectedCommand \u003d new EditApplicantCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"        // name","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"        EditApplicantCommand expectedCommand \u003d new EditApplicantCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"        // phone","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"WinSheng1"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"WinSheng1"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"WinSheng1"},"content":"        expectedCommand \u003d new EditApplicantCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"WinSheng1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"WinSheng1"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"WinSheng1"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"WinSheng1"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"WinSheng1"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"WinSheng1"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"WinSheng1"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"WinSheng1"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"WinSheng1"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"jonasongg"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"WinSheng1"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"WinSheng1"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"WinSheng1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"WinSheng1"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"WinSheng1"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"WinSheng1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"WinSheng1":124,"jonasongg":1}},{"path":"src/test/java/seedu/address/logic/parser/EditMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Telegram;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"public class EditMemberCommandParserTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMemberCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"    private EditMemberCommandParser parser \u003d new EditMemberCommandParser();","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"1\", EditMemberCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_DESC, Telegram.MESSAGE_CONSTRAINTS); // invalid telegram","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"WinSheng1"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_TELEGRAM_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"WinSheng1"},"content":"                + EMAIL_DESC_AMY + TELEGRAM_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"WinSheng1"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"WinSheng1"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"WinSheng1"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"WinSheng1"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"WinSheng1"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"WinSheng1"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"WinSheng1"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"WinSheng1"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"WinSheng1"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"WinSheng1"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"WinSheng1"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + TELEGRAM_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"WinSheng1"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + TELEGRAM_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"WinSheng1"},"content":"                + PHONE_DESC_BOB + TELEGRAM_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"WinSheng1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM));","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"WinSheng1"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_TELEGRAM_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"WinSheng1"},"content":"                + INVALID_PHONE_DESC + INVALID_TELEGRAM_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"WinSheng1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM));","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"WinSheng1"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"WinSheng1"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"WinSheng1":44,"-":164}},{"path":"src/test/java/seedu/address/logic/parser/FindApplicantCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.FindApplicantCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.ApplicantContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"public class FindApplicantCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"    private FindApplicantCommandParser parser \u003d new FindApplicantCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"                FindApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"        FindApplicantCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"                new FindApplicantCommand(new ApplicantContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"Saezenn":8,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/FindMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"import seedu.address.logic.commands.FindMemberCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.MemberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"public class FindMemberCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"    private FindMemberCommandParser parser \u003d new FindMemberCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"                FindMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"        FindMemberCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"                new FindMemberCommand(new MemberContainsKeywordsPredicate(Arrays.asList(\"Alicia\", \"Teng\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"        assertParseSuccess(parser, \"Alicia Teng\", expectedFindCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"        assertParseSuccess(parser, \" \\n Alicia \\n \\t Teng  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"Saezenn":35}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"matochichap":4,"-":192}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE_APPLICANT;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.ALAN_MEMBER;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithMembersApplicants;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"        assertEquals(Collections.emptyList(), addressBook.getMemberList());","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"        assertEquals(Collections.emptyList(), addressBook.getApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"        AddressBook newData \u003d getTypicalAddressBookWithMembersApplicants();","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        // Two applicants with the same identity fields","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE_APPLICANT).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"        List\u003cApplicant\u003e newApplicants \u003d Arrays.asList(ALICE_APPLICANT, editedAlice);","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"        // Two members with the same identity fields","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"        Member editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"                .build();","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"        List\u003cMember\u003e newMembers \u003d Arrays.asList(ALAN_MEMBER, editedAlan);","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newMembers, newApplicants);","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"matochichap"},"content":"    public void hasMember_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasMember(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"    public void hasApplicant_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasApplicant(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"matochichap"},"content":"    public void hasMember_memberNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"        assertFalse(addressBook.hasMember(ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"matochichap"},"content":"    public void hasApplicant_applicantNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"matochichap"},"content":"        assertFalse(addressBook.hasApplicant(ALICE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"matochichap"},"content":"    public void hasMember_memberInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"        addressBook.addMember(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"        assertTrue(addressBook.hasMember(ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"matochichap"},"content":"        addressBook.addApplicant(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"matochichap"},"content":"        assertTrue(addressBook.hasApplicant(ALICE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"matochichap"},"content":"    public void hasMember_memberWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"        addressBook.addMember(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"        Member editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"                .build();","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"jonasongg"},"content":"        assertTrue(addressBook.hasMember(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"matochichap"},"content":"    public void hasApplicant_applicantWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"matochichap"},"content":"        addressBook.addApplicant(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"matochichap"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE_APPLICANT).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"matochichap"},"content":"        assertTrue(addressBook.hasApplicant(editedAlice));","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"matochichap"},"content":"    public void getMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"matochichap"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getMemberList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"matochichap"},"content":"    public void getApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"matochichap"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getApplicantList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"matochichap"},"content":"        String expected \u003d AddressBook.class.getCanonicalName()","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"matochichap"},"content":"                + \"{members\u003d\" + addressBook.getMemberList() + \", \"","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"matochichap"},"content":"                + \"applicants\u003d\" + addressBook.getApplicantList() + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"AlfredBeNoel"},"content":"    private class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"matochichap"},"content":"        private final ObservableList\u003cMember\u003e memberList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"matochichap"},"content":"        private final ObservableList\u003cApplicant\u003e applicants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"matochichap"},"content":"        AddressBookStub(Collection\u003cMember\u003e members, Collection\u003cApplicant\u003e applicants) {","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"matochichap"},"content":"            this.memberList.setAll(members);","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"matochichap"},"content":"            this.applicants.setAll(applicants);","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"AlfredBeNoel"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"AlfredBeNoel"},"content":"        public ObservableList\u003cMember\u003e getMemberList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"matochichap"},"content":"            return memberList;","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"matochichap"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"matochichap"},"content":"        public ObservableList\u003cApplicant\u003e getApplicantList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"matochichap"},"content":"            return applicants;","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"matochichap"},"content":"        public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"matochichap"},"content":"            return null;","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"matochichap":50,"AlfredBeNoel":5,"-":87,"jonasongg":20}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE_APPLICANT;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalApplicants.BENSON_APPLICANT;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.ALAN_MEMBER;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.BETTY_MEMBER;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.ApplicantContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.MemberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"matochichap"},"content":"    public void hasMember_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasMember(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"matochichap"},"content":"    public void hasApplicant_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasApplicant(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"matochichap"},"content":"    public void hasMember_memberNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"        assertFalse(modelManager.hasMember(ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":94,"author":{"gitId":"matochichap"},"content":"    public void hasApplicant_applicantNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"matochichap"},"content":"        assertFalse(modelManager.hasApplicant(ALICE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"matochichap"},"content":"    public void hasMember_memberInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"        modelManager.addMember(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"        assertTrue(modelManager.hasMember(ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"matochichap"},"content":"    public void hasApplicant_applicantInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"matochichap"},"content":"        modelManager.addApplicant(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"matochichap"},"content":"        assertTrue(modelManager.hasApplicant(ALICE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"matochichap"},"content":"    public void deleteMember_memberInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"matochichap"},"content":"        modelManager.addMember(ALAN_MEMBER);","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"matochichap"},"content":"        modelManager.deleteMember(ALAN_MEMBER);","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"matochichap"},"content":"        assertFalse(modelManager.hasMember(ALAN_MEMBER));","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"matochichap"},"content":"    public void deleteApplicant_applicantInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"matochichap"},"content":"        modelManager.addApplicant(ALICE_APPLICANT);","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"matochichap"},"content":"        modelManager.deleteApplicant(ALICE_APPLICANT);","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"matochichap"},"content":"        assertFalse(modelManager.hasApplicant(ALICE_APPLICANT));","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"matochichap"},"content":"    public void getFilteredMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"matochichap"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredMemberList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"matochichap"},"content":"    public void getFilteredApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"matochichap"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredApplicantList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"jonasongg"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withApplicant(ALICE_APPLICANT)","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"jonasongg"},"content":"                .withApplicant(BENSON_APPLICANT).withMember(ALAN_MEMBER).withMember(BETTY_MEMBER).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"jonasongg"},"content":"        // different filteredApplicantList -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"jonasongg"},"content":"        String[] keywords \u003d ALICE_APPLICANT.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"jonasongg"},"content":"        modelManager.updateFilteredApplicantList(new ApplicantContainsKeywordsPredicate(","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"jonasongg"},"content":"                Arrays.asList(keywords)));","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"jonasongg"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"jonasongg"},"content":"        // resets modelManager to initial state for next test","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"jonasongg"},"content":"        modelManager.updateFilteredMemberList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"jonasongg"},"content":"        modelManager.updateFilteredApplicantList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"jonasongg"},"content":"        // different filteredMemberList -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"jonasongg"},"content":"        keywords \u003d ALAN_MEMBER.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"jonasongg"},"content":"        modelManager.updateFilteredMemberList(new MemberContainsKeywordsPredicate(","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"jonasongg"},"content":"                Arrays.asList(keywords)));","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"jonasongg"},"content":"        modelManager.updateFilteredMemberList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"jonasongg"},"content":"        modelManager.updateFilteredApplicantList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"matochichap":38,"-":119,"jonasongg":26}},{"path":"src/test/java/seedu/address/model/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"    public void addMember(Member member) {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"matochichap"},"content":"    public void addApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"matochichap"},"content":"    public boolean hasMember(Member member) {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"matochichap"},"content":"    public void deleteMember(Member target) {","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"matochichap"},"content":"    public void deleteApplicant(Applicant target) {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"matochichap"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"matochichap"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"matochichap"},"content":"    public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"matochichap"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"matochichap"},"content":"    public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"AlfredBeNoel"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"AlfredBeNoel"},"content":"        return null;","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"AlfredBeNoel"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"AlfredBeNoel"},"content":"    public void setTaskListForMember(Member member) {","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"matochichap"},"content":"    public void updateFilteredMemberList(Predicate\u003c? super Member\u003e predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"matochichap"},"content":"    public void updateFilteredApplicantList(Predicate\u003c? super Applicant\u003e predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"matochichap"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"matochichap"},"content":"    public void updateFilteredTagList(Predicate\u003c? super Tag\u003e predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"matochichap"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"matochichap":125,"AlfredBeNoel":11}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"matochichap":1,"-":57}},{"path":"src/test/java/seedu/address/model/person/ApplicantContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"public class ApplicantContainsKeywordPredicateTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"                new ApplicantContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"                new ApplicantContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate firstPredicateCopy \u003d new ApplicantContainsKeywordsPredicate(","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"        // One keyword","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate predicate \u003d new ApplicantContainsKeywordsPredicate(","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"                Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"        predicate \u003d new ApplicantContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"        predicate \u003d new ApplicantContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"        predicate \u003d new ApplicantContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate predicate \u003d new ApplicantContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"        predicate \u003d new ApplicantContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate predicate \u003d new ApplicantContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"Saezenn"},"content":"        String expected \u003d ApplicantContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"Saezenn"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"Saezenn":80}},{"path":"src/test/java/seedu/address/model/person/ApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE_APPLICANT;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalApplicants.BOB_APPLICANT;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"public class ApplicantTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    public void isSameApplicant() {","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALICE_APPLICANT.isSamePerson(ALICE_APPLICANT));","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALICE_APPLICANT.isSamePerson(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"        Person editedAlice \u003d new ApplicantBuilder(ALICE_APPLICANT).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"                .build();","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALICE_APPLICANT.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"        // same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE_APPLICANT).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"                .build();","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALICE_APPLICANT.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"        // different name and phone -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE_APPLICANT).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALICE_APPLICANT.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"        Applicant aliceCopy \u003d new ApplicantBuilder(ALICE_APPLICANT).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALICE_APPLICANT.equals(aliceCopy));","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALICE_APPLICANT.equals(ALICE_APPLICANT));","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALICE_APPLICANT.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALICE_APPLICANT.equals(5));","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALICE_APPLICANT.equals(BOB_APPLICANT));","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE_APPLICANT).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALICE_APPLICANT.equals(editedAlice));","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE_APPLICANT).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALICE_APPLICANT.equals(editedAlice));","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"        String expected \u003d Applicant.class.getCanonicalName()","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"                + \"{name\u003d\" + ALICE_APPLICANT.getName()","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"                + \", phone\u003d\" + ALICE_APPLICANT.getPhone()","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"                + \", interview time\u003d\" + ALICE_APPLICANT.getInterviewTime() + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expected, ALICE_APPLICANT.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"    public void detailsToCopyMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"        String expected \u003d \"Name: \" + ALICE_APPLICANT.getName() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Saezenn"},"content":"                + \"Phone: \" + ALICE_APPLICANT.getPhone() + \"\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Saezenn"},"content":"                + \"Interview Time: \" + ALICE_APPLICANT.getInterviewTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expected, ALICE_APPLICANT.detailsToCopy());","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"Saezenn":4,"jonasongg":79}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"matochichap":1,"-":89}},{"path":"src/test/java/seedu/address/model/person/InterviewTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.fields.InterviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"public class InterviewTimeTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"    public void constructor_invalidInterviewTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new InterviewTime(invalidTime));","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"    public void isValidInterviewTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"        // invalid time","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"        assertFalse(InterviewTime.isValidTime(\"\")); // empty string","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"        assertFalse(InterviewTime.isValidTime(\" \")); // spaces only","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"        assertFalse(InterviewTime.isValidTime(\"^\")); // only numbers and \u0027/\u0027","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"        assertFalse(InterviewTime.isValidTime(\"10/30/2003 3pm\")); // invalid format","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"        // valid name","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"        assertTrue(InterviewTime.isValidTime(\"01/01/2001 0100\")); // correct format","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"        assertTrue(InterviewTime.isValidTime(\"15/12/2015 1500\")); // correct format","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"        assertTrue(InterviewTime.isValidTime(\"07/01/2003 1900\")); // correct format","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"        assertTrue(InterviewTime.isValidTime(\"19/10/1970 2200\")); // correct format","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"        assertTrue(InterviewTime.isValidTime(\"cancel\")); // correct format","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"        InterviewTime interviewTime \u003d new InterviewTime(\"cancel\");","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        assertTrue(interviewTime.equals(new InterviewTime(\"cancel\")));","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"        assertTrue(interviewTime.equals(interviewTime));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"        assertFalse(interviewTime.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"        assertFalse(interviewTime.equals(5.0f));","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"        assertFalse(interviewTime.equals(new InterviewTime(\"12/12/2012 1212\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Saezenn":50,"jonasongg":4}},{"path":"src/test/java/seedu/address/model/person/MemberContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"public class MemberContainsKeywordPredicateTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"                new MemberContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"                new MemberContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate firstPredicateCopy \u003d new MemberContainsKeywordsPredicate(","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"        // One keyword","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate predicate \u003d new MemberContainsKeywordsPredicate(","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"                Collections.singletonList(\"Alicia\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alicia Teng\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"        predicate \u003d new MemberContainsKeywordsPredicate(Arrays.asList(\"Alicia\", \"Teng\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alicia Teng\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"        predicate \u003d new MemberContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"        predicate \u003d new MemberContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"        MemberContainsKeywordsPredicate predicate \u003d new MemberContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"        predicate \u003d new MemberContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"Saezenn"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"Saezenn"},"content":"        ApplicantContainsKeywordsPredicate predicate \u003d new ApplicantContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"Saezenn"},"content":"        String expected \u003d ApplicantContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"Saezenn"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"Saezenn":82}},{"path":"src/test/java/seedu/address/model/person/MemberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.ALAN_MEMBER;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.BOB_MEMBER;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"public class MemberTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"        Member member \u003d new MemberBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e member.getTags().remove(0));","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALAN_MEMBER.isSamePerson(ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALAN_MEMBER.isSamePerson(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        Member editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALAN_MEMBER.isSamePerson(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        // same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"        editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALAN_MEMBER.isSamePerson(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"        // same email, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"        editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALAN_MEMBER.isSamePerson(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"        // same telegram, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"        editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALAN_MEMBER.isSamePerson(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"        Member alanCopy \u003d new MemberBuilder(ALAN_MEMBER).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALAN_MEMBER.equals(alanCopy));","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"        assertTrue(ALAN_MEMBER.equals(ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALAN_MEMBER.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALAN_MEMBER.equals(5));","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALAN_MEMBER.equals(BOB_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"        Member editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALAN_MEMBER.equals(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"        editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALAN_MEMBER.equals(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"jonasongg"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"        editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALAN_MEMBER.equals(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"        // different telegram -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"        editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALAN_MEMBER.equals(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"jonasongg"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"jonasongg"},"content":"        editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"        assertFalse(ALAN_MEMBER.equals(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"        String expected \u003d Member.class.getCanonicalName()","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"                + \"{name\u003d\" + ALAN_MEMBER.getName()","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"                + \", phone\u003d\" + ALAN_MEMBER.getPhone()","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"jonasongg"},"content":"                + \", email\u003d\" + ALAN_MEMBER.getEmail()","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"jonasongg"},"content":"                + \", telegram\u003d\" + ALAN_MEMBER.getTelegram()","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"AlfredBeNoel"},"content":"                + \", tags\u003d\" + ALAN_MEMBER.getTags()","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"AlfredBeNoel"},"content":"                + \", tasks\u003d\" + ALAN_MEMBER.getTasks() + \"}\";","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expected, ALAN_MEMBER.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jonasongg"},"content":"    public void detailsToCopyMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"jonasongg"},"content":"        String expected \u003d \"Name: \" + ALAN_MEMBER.getName() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"jonasongg"},"content":"                + \"Phone: \" + ALAN_MEMBER.getPhone() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"jonasongg"},"content":"                + \"Email: \" + ALAN_MEMBER.getEmail() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"jonasongg"},"content":"                + \"Telegram: \" + ALAN_MEMBER.getTelegram() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"jonasongg"},"content":"                + \"Tags: \" + ALAN_MEMBER.getTags().stream().map(Tag::toString).collect(Collectors.joining(\", \")) + \"\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"AlfredBeNoel"},"content":"                + \"Tasks: \" + ALAN_MEMBER.getTasks().stream().map(Task::toString).collect(Collectors.joining(\", \"));","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expected, ALAN_MEMBER.detailsToCopy());","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"AlfredBeNoel":4,"jonasongg":117}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"matochichap":1,"-":61}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"matochichap":1,"-":61}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE_APPLICANT;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import static seedu.address.testutil.TypicalApplicants.BOB_APPLICANT;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.ALAN_MEMBER;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.BETTY_MEMBER;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"    private final UniquePersonList\u003cMember\u003e uniqueMemberList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"    private final UniquePersonList\u003cApplicant\u003e uniqueApplicantList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"    public void contains_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.contains(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"    public void contains_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.contains(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"    public void contains_memberNotInList_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"        assertFalse(uniqueMemberList.contains(ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"    public void contains_applicantNotInList_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"        assertFalse(uniqueApplicantList.contains(ALICE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"    public void contains_memberInList_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"        assertTrue(uniqueMemberList.contains(ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"    public void contains_applicantInList_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"matochichap"},"content":"        assertTrue(uniqueApplicantList.contains(ALICE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"matochichap"},"content":"    public void contains_memberWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"        Member editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"        assertTrue(uniqueMemberList.contains(editedAlan));","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"matochichap"},"content":"    public void contains_applicantWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE_APPLICANT).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"matochichap"},"content":"        assertTrue(uniqueApplicantList.contains(editedAlice));","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"matochichap"},"content":"    public void add_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.add(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"matochichap"},"content":"    public void add_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.add(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"matochichap"},"content":"    public void add_duplicateMember_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueMemberList.add(ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"matochichap"},"content":"    public void add_duplicateApplicant_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"matochichap"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueApplicantList.add(ALICE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"matochichap"},"content":"    public void setMember_nullTargetMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setPerson(null, ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"matochichap"},"content":"    public void setApplicant_nullTargetApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setPerson(null, ALICE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"matochichap"},"content":"    public void setMember_nullEditedMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setPerson(ALAN_MEMBER, null));","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"matochichap"},"content":"    public void setApplicant_nullEditedApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setPerson(ALICE_APPLICANT, null));","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"matochichap"},"content":"    public void setMember_targetMemberNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"jonasongg"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueMemberList.setPerson(ALAN_MEMBER, ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"matochichap"},"content":"    public void setApplicant_targetApplicantNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"matochichap"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueApplicantList.setPerson(ALICE_APPLICANT,","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"matochichap"},"content":"                ALICE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"matochichap"},"content":"    public void setMember_editedMemberIsSameMember_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.setPerson(ALAN_MEMBER, ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"jonasongg"},"content":"        UniquePersonList\u003cMember\u003e expectedUniqueMemberList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"jonasongg"},"content":"        expectedUniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"matochichap"},"content":"    public void setApplicant_editedApplicantIsSameApplicant_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.setPerson(ALICE_APPLICANT, ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"matochichap"},"content":"        UniquePersonList\u003cApplicant\u003e expectedUniqueApplicantList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"matochichap"},"content":"        expectedUniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"matochichap"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"matochichap"},"content":"    public void setMember_editedMemberHasSameIdentity_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"jonasongg"},"content":"        Member editedAlan \u003d new MemberBuilder(ALAN_MEMBER).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.setPerson(ALAN_MEMBER, editedAlan);","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"jonasongg"},"content":"        UniquePersonList\u003cMember\u003e expectedUniqueMemberList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"jonasongg"},"content":"        expectedUniqueMemberList.add(editedAlan);","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"matochichap"},"content":"    public void setApplicant_editedApplicantHasSameIdentity_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"matochichap"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE_APPLICANT).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.setPerson(ALICE_APPLICANT, editedAlice);","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"matochichap"},"content":"        UniquePersonList\u003cApplicant\u003e expectedUniqueApplicantList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"matochichap"},"content":"        expectedUniqueApplicantList.add(editedAlice);","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"matochichap"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"matochichap"},"content":"    public void setMember_editedMemberHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.setPerson(ALAN_MEMBER, BETTY_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"jonasongg"},"content":"        UniquePersonList\u003cMember\u003e expectedUniqueMemberList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"jonasongg"},"content":"        expectedUniqueMemberList.add(BETTY_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"matochichap"},"content":"    public void setApplicant_editedApplicantHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.setPerson(ALICE_APPLICANT, BOB_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"matochichap"},"content":"        UniquePersonList\u003cApplicant\u003e expectedUniqueApplicantList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"matochichap"},"content":"        expectedUniqueApplicantList.add(BOB_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"matochichap"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"matochichap"},"content":"    public void setMember_editedMemberHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":192,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(BETTY_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":193,"author":{"gitId":"jonasongg"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueMemberList.setPerson(ALAN_MEMBER, BETTY_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":194,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"matochichap"},"content":"    public void setApplicant_editedApplicantHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(BOB_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"matochichap"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueApplicantList.setPerson(ALICE_APPLICANT,","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"matochichap"},"content":"                BOB_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":205,"author":{"gitId":"matochichap"},"content":"    public void remove_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"jonasongg"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.remove(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":210,"author":{"gitId":"matochichap"},"content":"    public void remove_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.remove(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":215,"author":{"gitId":"matochichap"},"content":"    public void remove_memberDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"jonasongg"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueMemberList.remove(ALAN_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"matochichap"},"content":"    public void remove_applicantDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"matochichap"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueApplicantList.remove(ALICE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":225,"author":{"gitId":"matochichap"},"content":"    public void remove_existingMember_removesMember() {","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.remove(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"jonasongg"},"content":"        UniquePersonList\u003cMember\u003e expectedUniqueMemberList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":233,"author":{"gitId":"matochichap"},"content":"    public void remove_existingApplicant_removesApplicant() {","lastModifiedDate":"2023-10-19"},{"lineNumber":234,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":235,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.remove(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":236,"author":{"gitId":"matochichap"},"content":"        UniquePersonList\u003cApplicant\u003e expectedUniqueApplicantList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":237,"author":{"gitId":"matochichap"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-19"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":241,"author":{"gitId":"matochichap"},"content":"    public void setMembers_nullUniqueMemberList_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setPersons((UniquePersonList\u003cMember\u003e) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":246,"author":{"gitId":"matochichap"},"content":"    public void setApplicants_nullUniqueApplicantList_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":247,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setPersons(","lastModifiedDate":"2023-10-19"},{"lineNumber":248,"author":{"gitId":"matochichap"},"content":"                (UniquePersonList\u003cApplicant\u003e) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":252,"author":{"gitId":"matochichap"},"content":"    public void setMembers_uniqueMemberList_replacesOwnListWithProvidedUniqueMemberList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":253,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":254,"author":{"gitId":"jonasongg"},"content":"        UniquePersonList\u003cMember\u003e expectedUniqueMemberList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":255,"author":{"gitId":"jonasongg"},"content":"        expectedUniqueMemberList.add(BETTY_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":256,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.setPersons(expectedUniqueMemberList);","lastModifiedDate":"2023-10-20"},{"lineNumber":257,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-20"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":261,"author":{"gitId":"matochichap"},"content":"    public void setApplicants_uniqueApplicantList_replacesOwnListWithProvidedUniqueApplicantList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":262,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":263,"author":{"gitId":"matochichap"},"content":"        UniquePersonList\u003cApplicant\u003e expectedUniqueApplicantList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":264,"author":{"gitId":"matochichap"},"content":"        expectedUniqueApplicantList.add(BOB_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":265,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.setPersons(expectedUniqueApplicantList);","lastModifiedDate":"2023-10-19"},{"lineNumber":266,"author":{"gitId":"matochichap"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":270,"author":{"gitId":"matochichap"},"content":"    public void setMembers_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":271,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setPersons((List\u003cMember\u003e) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":275,"author":{"gitId":"matochichap"},"content":"    public void setApplicants_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":276,"author":{"gitId":"matochichap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setPersons((List\u003cApplicant\u003e) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":280,"author":{"gitId":"matochichap"},"content":"    public void setMembers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":281,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.add(ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":282,"author":{"gitId":"jonasongg"},"content":"        List\u003cMember\u003e memberList \u003d Collections.singletonList(BETTY_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":283,"author":{"gitId":"jonasongg"},"content":"        uniqueMemberList.setPersons(memberList);","lastModifiedDate":"2023-10-20"},{"lineNumber":284,"author":{"gitId":"jonasongg"},"content":"        UniquePersonList\u003cMember\u003e expectedUniqueMemberList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":285,"author":{"gitId":"jonasongg"},"content":"        expectedUniqueMemberList.add(BETTY_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":286,"author":{"gitId":"jonasongg"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-20"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":290,"author":{"gitId":"matochichap"},"content":"    public void setApplicants_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":291,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.add(ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":292,"author":{"gitId":"matochichap"},"content":"        List\u003cApplicant\u003e applicantList \u003d Collections.singletonList(BOB_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":293,"author":{"gitId":"matochichap"},"content":"        uniqueApplicantList.setPersons(applicantList);","lastModifiedDate":"2023-10-19"},{"lineNumber":294,"author":{"gitId":"matochichap"},"content":"        UniquePersonList\u003cApplicant\u003e expectedUniqueApplicantList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":295,"author":{"gitId":"matochichap"},"content":"        expectedUniqueApplicantList.add(BOB_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":296,"author":{"gitId":"matochichap"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-19"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":300,"author":{"gitId":"matochichap"},"content":"    public void setMembers_listWithDuplicateMembers_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":301,"author":{"gitId":"jonasongg"},"content":"        List\u003cMember\u003e listWithDuplicateMembers \u003d Arrays.asList(ALAN_MEMBER, ALAN_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":302,"author":{"gitId":"jonasongg"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueMemberList.setPersons(listWithDuplicateMembers));","lastModifiedDate":"2023-10-20"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":306,"author":{"gitId":"matochichap"},"content":"    public void setApplicants_listWithDuplicateApplicants_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":307,"author":{"gitId":"matochichap"},"content":"        List\u003cApplicant\u003e listWithDuplicateApplicants \u003d Arrays.asList(ALICE_APPLICANT, ALICE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":308,"author":{"gitId":"matochichap"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueApplicantList.setPersons(listWithDuplicateApplicants));","lastModifiedDate":"2023-10-19"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":312,"author":{"gitId":"matochichap"},"content":"    public void asUnmodifiableObservableList_modifyMemberList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-19"},{"lineNumber":314,"author":{"gitId":"matochichap"},"content":"                -\u003e uniqueMemberList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":315,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":316,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":317,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":318,"author":{"gitId":"matochichap"},"content":"    public void asUnmodifiableObservableList_modifyApplicantList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":320,"author":{"gitId":"matochichap"},"content":"                -\u003e uniqueApplicantList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":321,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":322,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":323,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":324,"author":{"gitId":"matochichap"},"content":"    public void toStringMethodMember() {","lastModifiedDate":"2023-10-19"},{"lineNumber":325,"author":{"gitId":"matochichap"},"content":"        assertEquals(uniqueMemberList.asUnmodifiableObservableList().toString(), uniqueMemberList.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":329,"author":{"gitId":"matochichap"},"content":"    public void toStringMethodApplicant() {","lastModifiedDate":"2023-10-19"},{"lineNumber":330,"author":{"gitId":"matochichap"},"content":"        assertEquals(uniqueApplicantList.asUnmodifiableObservableList().toString(), uniqueApplicantList.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"matochichap":147,"-":133,"jonasongg":52}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import static seedu.address.testutil.TypicalApplicants.BENSON_APPLICANT;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.fields.InterviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"public class JsonAdaptedApplicantTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"    private static final String VALID_NAME \u003d BENSON_APPLICANT.getName().toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"    private static final String VALID_PHONE \u003d BENSON_APPLICANT.getPhone().toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"    private static final String INVALID_DATE \u003d \"12/12\";","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"    private static final String VALID_DATE \u003d \"12/12/2023 2359\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"    public void toModelType_validApplicantDetails_returnsApplicant() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(BENSON_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"        assertEquals(BENSON_APPLICANT, applicant.toModelType());","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"            new JsonAdaptedApplicant(INVALID_NAME, VALID_PHONE, VALID_DATE);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(null, VALID_PHONE, VALID_DATE);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedApplicant.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"            Name.class.getSimpleName());","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"            new JsonAdaptedApplicant(VALID_NAME, INVALID_PHONE, VALID_DATE);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, null, VALID_DATE);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedApplicant.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"matochichap"},"content":"            Phone.class.getSimpleName());","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"matochichap"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"            new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, INVALID_DATE);","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"        String expectedMessage \u003d InterviewTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"matochichap":53,"Saezenn":17}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedMemberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.storage.JsonAdaptedMember.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.BETTY_MEMBER;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.fields.Telegram;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"public class JsonAdaptedMemberTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    private static final String INVALID_TELEGRAM \u003d \" \";","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    private static final String VALID_NAME \u003d BETTY_MEMBER.getName().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"    private static final String VALID_PHONE \u003d BETTY_MEMBER.getPhone().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    private static final String VALID_EMAIL \u003d BETTY_MEMBER.getEmail().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    private static final String VALID_TELEGRAM \u003d BETTY_MEMBER.getTelegram().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BETTY_MEMBER.getTags().stream()","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"AlfredBeNoel"},"content":"    private static final List\u003cJsonAdaptedTask\u003e VALID_TODO \u003d BETTY_MEMBER.getTasks().stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"            .map(JsonAdaptedTask::new)","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    public void toModelType_validMemberDetails_returnsMember() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(BETTY_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        assertEquals(BETTY_MEMBER, member.toModelType());","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"                new JsonAdaptedMember(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_TODO);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"AlfredBeNoel"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(null, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM,","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"AlfredBeNoel"},"content":"                VALID_TAGS, VALID_TODO);","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"AlfredBeNoel"},"content":"                new JsonAdaptedMember(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_TODO);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"AlfredBeNoel"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(VALID_NAME, null, VALID_EMAIL, VALID_TELEGRAM,","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"AlfredBeNoel"},"content":"                VALID_TAGS, VALID_TODO);","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"AlfredBeNoel"},"content":"                new JsonAdaptedMember(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_TODO);","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"jonasongg"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"AlfredBeNoel"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(VALID_NAME, VALID_PHONE, null, VALID_TELEGRAM,","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"AlfredBeNoel"},"content":"                VALID_TAGS, VALID_TODO);","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"    public void toModelType_invalidTelegram_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"AlfredBeNoel"},"content":"                new JsonAdaptedMember(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_TELEGRAM, VALID_TAGS, VALID_TODO);","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"    public void toModelType_nullTelegram_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"AlfredBeNoel"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"AlfredBeNoel"},"content":"                VALID_TAGS, VALID_TODO);","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Telegram.class.getSimpleName());","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"jonasongg"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"jonasongg"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"jonasongg"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"jonasongg"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"AlfredBeNoel"},"content":"                new JsonAdaptedMember(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, invalidTags, VALID_TODO);","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"jonasongg"},"content":"        assertThrows(IllegalValueException.class, member::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"AlfredBeNoel":16,"jonasongg":100}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE_APPLICANT;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalApplicants.HOON_APPLICANT;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.HUGO_MEMBER;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithMembersApplicants;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"        AddressBook original \u003d getTypicalAddressBookWithMembersApplicants();","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"        assert jsonAddressBookStorage.readAddressBook(filePath).isPresent();","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"        original.addApplicant(HOON_APPLICANT);","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"        original.removeApplicant(ALICE_APPLICANT);","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"        original.addMember(HUGO_MEMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"        assert jsonAddressBookStorage.readAddressBook().isPresent();","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":102,"jonasongg":14}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"AlfredBeNoel"},"content":"        assertTrue(true);","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"AlfredBeNoel"},"content":"        assertTrue(true);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"AlfredBeNoel"},"content":"        assertTrue(true);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AlfredBeNoel":4,"-":26}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithMembersApplicants;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        assert storageManager.readUserPrefs().isPresent();","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"        AddressBook original \u003d getTypicalAddressBookWithMembersApplicants();","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"        assert storageManager.readAddressBook().isPresent();","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":66,"jonasongg":8}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"     * Adds a new {@code Member} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"    public AddressBookBuilder withMember(Member member) {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"        addressBook.addMember(member);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"     * Adds a new {@code Applicant} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"    public AddressBookBuilder withApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"        addressBook.addApplicant(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"matochichap":13,"-":30}},{"path":"src/test/java/seedu/address/testutil/ApplicantBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"import seedu.address.model.person.fields.InterviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":" * A utility class to help with building Applicant objects.","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"public class ApplicantBuilder {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"    private Name name;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"    private InterviewTime interviewTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"     * Creates a {@code ApplicantBuilder} with the default details.","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"    public ApplicantBuilder() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"     * Initializes the ApplicantBuilder with the data of {@code applicantToCopy}.","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"    public ApplicantBuilder(Applicant applicantToCopy) {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"        name \u003d applicantToCopy.getName();","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"        phone \u003d applicantToCopy.getPhone();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"matochichap"},"content":"     * Sets the {@code Name} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"    public ApplicantBuilder withName(String name) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"     * Sets the {@code Phone} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"    public ApplicantBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"     * Sets the {@code InterviewTime} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"    public ApplicantBuilder withInterviewTime(String interviewTime) {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"        this.interviewTime \u003d new InterviewTime(interviewTime);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"matochichap"},"content":"    public Applicant build() {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"        return new Applicant(name, phone);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"matochichap":52,"Saezenn":11}},{"path":"src/test/java/seedu/address/testutil/ApplicantUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"import seedu.address.logic.commands.EditApplicantCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":" * A utility class for Applicant.","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"public class ApplicantUtil {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":"     * Returns an add command string for adding the {@code applicant}.","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"    public static String getAddApplicantCommand(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"        return AddApplicantCommand.COMMAND_WORD + \" \" + getApplicantDetails(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"     * Returns the part of command string for the given {@code applicant}\u0027s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"matochichap"},"content":"    public static String getApplicantDetails(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"matochichap"},"content":"        sb.append(PREFIX_NAME + applicant.getName().fullName + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"matochichap"},"content":"        sb.append(PREFIX_PHONE + applicant.getPhone().value + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"matochichap"},"content":"     * Returns the part of command string for the given {@code EditApplicantDescriptor}\u0027s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"    public static String getEditApplicantDescriptorDetails(EditApplicantCommand.EditApplicantDescriptor descriptor) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"matochichap":39,"WinSheng1":2}},{"path":"src/test/java/seedu/address/testutil/EditApplicantDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditApplicantCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":" * A utility class to help with building EditApplicantDescriptor objects.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"public class EditApplicantDescriptorBuilder {","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"    private EditApplicantDescriptor descriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"    public EditApplicantDescriptorBuilder() {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"        descriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"    public EditApplicantDescriptorBuilder(EditApplicantDescriptor descriptor) {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"        this.descriptor \u003d new EditApplicantDescriptor(descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"     * Returns an {@code EditApplicantDescriptor} with fields containing {@code applicant}\u0027s details","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"    public EditApplicantDescriptorBuilder(Applicant applicant) {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        descriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setName(applicant.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setPhone(applicant.getPhone());","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"     * Sets the {@code Name} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"    public EditApplicantDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        return this;","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"     * Sets the {@code Phone} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"    public EditApplicantDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"        return this;","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"    public EditApplicantDescriptor build() {","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"        return descriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"WinSheng1":51}},{"path":"src/test/java/seedu/address/testutil/EditMemberDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.fields.Telegram;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":" * A utility class to help with building EditMemberDescriptor objects.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"public class EditMemberDescriptorBuilder {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"    private EditMemberDescriptor descriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberDescriptorBuilder() {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"        descriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberDescriptorBuilder(EditMemberDescriptor descriptor) {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        this.descriptor \u003d new EditMemberDescriptor(descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"     * Returns an {@code EditMemberDescriptor} with fields containing {@code member}\u0027s details","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberDescriptorBuilder(Member member) {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"        descriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setName(member.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setPhone(member.getPhone());","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setEmail(member.getEmail());","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setTelegram(member.getTelegram());","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setTags(member.getTags());","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"     * Sets the {@code Name} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"        return this;","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"     * Sets the {@code Phone} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"        return this;","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"     * Sets the {@code Email} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"        return this;","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"     * Sets the {@code Address} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberDescriptorBuilder withTelegram(String telegram) {","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setTelegram(new Telegram(telegram));","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"        return this;","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditMemberDescriptor}","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"     * that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"        return this;","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"    public EditMemberDescriptor build() {","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"        return descriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"WinSheng1":87}},{"path":"src/test/java/seedu/address/testutil/MemberBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"AlfredBeNoel"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.fields.Telegram;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"AlfredBeNoel"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":" * A utility class to help with building Member objects.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"public class MemberBuilder {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"@amybee\";","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    private Name name;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    private Email email;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    private Telegram telegram;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"AlfredBeNoel"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     * Creates a {@code MemberBuilder} with the default details.","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    public MemberBuilder() {","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"        telegram \u003d new Telegram(DEFAULT_TELEGRAM);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"AlfredBeNoel"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"     * Initializes the MemberBuilder with the data of {@code memberToCopy}.","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"    public MemberBuilder(Member memberToCopy) {","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"        name \u003d memberToCopy.getName();","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"        phone \u003d memberToCopy.getPhone();","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        email \u003d memberToCopy.getEmail();","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"        telegram \u003d memberToCopy.getTelegram();","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"        tags \u003d new HashSet\u003c\u003e(memberToCopy.getTags());","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"AlfredBeNoel"},"content":"        tasks \u003d new ArrayList\u003c\u003e(memberToCopy.getTasks());","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"     * Sets the {@code Name} of the {@code Member} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"    public MemberBuilder withName(String name) {","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Member} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"    public MemberBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"     * Sets the {@code Telegram} of the {@code Member} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"    public MemberBuilder withTelegram(String telegram) {","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"        this.telegram \u003d new Telegram(telegram);","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"     * Sets the {@code Phone} of the {@code Member} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"    public MemberBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"jonasongg"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"     * Sets the {@code Email} of the {@code Member} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"    public MemberBuilder withEmail(String email) {","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"jonasongg"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"jonasongg"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"AlfredBeNoel"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"AlfredBeNoel"},"content":"     * Parses the {@code tasks} into a {@code List\u003cTask\u003e} and set it to the {@code Member} that we are building.","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"AlfredBeNoel"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"AlfredBeNoel"},"content":"    public MemberBuilder withTask(String... taskName) {","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"AlfredBeNoel"},"content":"        for (String i : taskName) {","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"AlfredBeNoel"},"content":"            this.tasks.add(new Task(i));","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"AlfredBeNoel"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"AlfredBeNoel"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"AlfredBeNoel"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"AlfredBeNoel"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"    public Member build() {","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"AlfredBeNoel"},"content":"        return new Member(name, phone, email, telegram, tags, tasks);","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"AlfredBeNoel":17,"jonasongg":95}},{"path":"src/test/java/seedu/address/testutil/MemberUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":" * A utility class for Member.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"public class MemberUtil {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"     * Returns an add command string for adding the {@code member}.","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"    public static String getAddMemberCommand(Member member) {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"        return AddMemberCommand.COMMAND_WORD + \" \" + getMemberDetails(member);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"     * Returns the part of command string for the given {@code member}\u0027s details.","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"    public static String getMemberDetails(Member member) {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"        sb.append(PREFIX_NAME + member.getName().fullName + \" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"        sb.append(PREFIX_PHONE + member.getPhone().value + \" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"        sb.append(PREFIX_EMAIL + member.getEmail().value + \" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"        sb.append(PREFIX_TELEGRAM + member.getTelegram().value + \" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        member.getTags().stream().forEach(","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"     * Returns the part of command string for the given {@code EditMemberDescriptor}\u0027s details.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"    public static String getEditMemberDescriptorDetails(EditMemberDescriptor descriptor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"        descriptor.getTelegram().ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM).append(telegram.value).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"WinSheng1":19,"-":43}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"matochichap"},"content":"     * Returns the middle index of the member in the {@code model}\u0027s member list.","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"matochichap"},"content":"    public static Index getMidIndexMember(Model model) {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"matochichap"},"content":"        return Index.fromOneBased(model.getFilteredMemberList().size() / 2);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"     * Returns the middle index of the applicant in the {@code model}\u0027s applicant list.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"    public static Index getMidIndexApplicant(Model model) {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"        return Index.fromOneBased(model.getFilteredApplicantList().size() / 2);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"     * Returns the last index of the member in the {@code model}\u0027s member list.","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"    public static Index getLastIndexMember(Model model) {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"        return Index.fromOneBased(model.getFilteredMemberList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"     * Returns the last index of the applicant in the {@code model}\u0027s applicant list.","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"matochichap"},"content":"    public static Index getLastIndexApplicant(Model model) {","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"matochichap"},"content":"        return Index.fromOneBased(model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"matochichap"},"content":"     * Returns the member in the {@code model}\u0027s member list at {@code index}.","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"matochichap"},"content":"    public static Person getMember(Model model, Index index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"matochichap"},"content":"        return model.getFilteredMemberList().get(index.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"matochichap"},"content":"     * Returns the applicant in the {@code model}\u0027s applicant list at {@code index}.","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"    public static Person getApplicant(Model model, Index index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"matochichap"},"content":"        return model.getFilteredApplicantList().get(index.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"matochichap":30,"-":46}},{"path":"src/test/java/seedu/address/testutil/TypicalApplicants.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"matochichap"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"matochichap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"matochichap"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"matochichap"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"matochichap"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"matochichap"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"matochichap"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"matochichap"},"content":" * A utility class containing a list of {@code Applicant} objects to be used in tests.","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"matochichap"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"matochichap"},"content":"public class TypicalApplicants {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"matochichap"},"content":"    public static final Applicant ALICE_APPLICANT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"            new ApplicantBuilder().withName(\"Alice Pauline\").withPhone(\"94351253\")","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"                    .withInterviewTime(\"01/01/2001 0100\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"matochichap"},"content":"    public static final Applicant BENSON_APPLICANT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"            new ApplicantBuilder().withName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"                    .withInterviewTime(\"02/02/2002 0200\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"matochichap"},"content":"    public static final Applicant CARL_APPLICANT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"            new ApplicantBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"                    .withInterviewTime(\"03/03/2003 0300\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"matochichap"},"content":"    public static final Applicant DANIEL_APPLICANT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"            new ApplicantBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"                    .withInterviewTime(\"04/04/2004 0400\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"matochichap"},"content":"    public static final Applicant ELLE_APPLICANT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"            new ApplicantBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"                    .withInterviewTime(\"05/05/2005 0500\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"matochichap"},"content":"    public static final Applicant FIONA_APPLICANT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"            new ApplicantBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"                    .withInterviewTime(\"06/06/2006 0600\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"    //no interview time scheduled yet","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"matochichap"},"content":"    public static final Applicant GEORGE_APPLICANT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"matochichap"},"content":"            new ApplicantBuilder().withName(\"George Best\").withPhone(\"9482442\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"matochichap"},"content":"    // Manually added","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"matochichap"},"content":"    public static final Applicant HOON_APPLICANT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"matochichap"},"content":"            new ApplicantBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"matochichap"},"content":"    // Manually added - Applicant\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"matochichap"},"content":"    public static final Applicant AMY_APPLICANT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"matochichap"},"content":"            new ApplicantBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"matochichap"},"content":"    public static final Applicant BOB_APPLICANT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"matochichap"},"content":"            new ApplicantBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"matochichap"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"    private TypicalApplicants() {","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"matochichap"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"matochichap"},"content":"     * Returns an {@code AddressBook} with all the typical applicants.","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"matochichap"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"matochichap"},"content":"    public static AddressBook getTypicalAddressBookWithApplicants() {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"matochichap"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"matochichap"},"content":"        for (Applicant applicant : getTypicalApplicants()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"matochichap"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"matochichap"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"matochichap"},"content":"        return ab;","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"matochichap"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"matochichap"},"content":"    public static List\u003cApplicant\u003e getTypicalApplicants() {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"matochichap"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_APPLICANT, BENSON_APPLICANT, CARL_APPLICANT, DANIEL_APPLICANT,","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"matochichap"},"content":"                ELLE_APPLICANT, FIONA_APPLICANT, GEORGE_APPLICANT));","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"matochichap"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"matochichap"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"matochichap":57,"Saezenn":14,"jonasongg":2}},{"path":"src/test/java/seedu/address/testutil/TypicalMembers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":" * A utility class containing a list of {@code Member} objects to be used in tests.","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"public class TypicalMembers {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    public static final Member ALAN_MEMBER \u003d new MemberBuilder().withName(\"Alan Pauline\")","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"            .withEmail(\"alicep@example.com\")","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"            .withTelegram(\"@alanpauline\")","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTask(\"finish proposal\", \"setup meeting\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    public static final Member BETTY_MEMBER \u003d new MemberBuilder().withName(\"Betty Meier\")","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"            .withTelegram(\"@bettymeier\")","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTask(\"finish proposal\", \"setup meeting\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    public static final Member CHARLES_MEMBER \u003d new MemberBuilder().withName(\"Charles Kurz\")","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTelegram(\"@charleskurz\")","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTask(\"finish proposal\", \"setup meeting\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"    public static final Member DENISE_MEMBER \u003d new MemberBuilder().withName(\"Denise Meier\")","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"            .withTelegram(\"@denisemeier\")","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTask(\"finish proposal\", \"setup meeting\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"    public static final Member ETHAN_MEMBER \u003d new MemberBuilder().withName(\"Ethan Meyer\")","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTelegram(\"@ethanmeyer\")","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTask(\"finish proposal\", \"setup meeting\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"    public static final Member FRED_MEMBER \u003d new MemberBuilder().withName(\"Fred Kunz\")","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"            .withTelegram(\"@fredkunz\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"    public static final Member GISELLE_MEMBER \u003d new MemberBuilder().withName(\"Giselle Best\")","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTelegram(\"@gisellebest\")","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTask(\"finish proposal\", \"setup meeting\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"    // Manually added","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"    public static final Member HUGO_MEMBER \u003d new MemberBuilder().withName(\"Hugo Meier\")","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTelegram(\"@hugomeier\")","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"AlfredBeNoel"},"content":"            .withTask(\"finish proposal\", \"setup meeting\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"    // Manually added - Member\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"    public static final Member AMY_MEMBER \u003d new MemberBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"            .withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"    public static final Member BOB_MEMBER \u003d new MemberBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"            .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"            .build();","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"    private TypicalMembers() {","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"     * Returns an {@code AddressBook} with all the typical members.","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"    public static AddressBook getTypicalAddressBookWithMembers() {","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"jonasongg"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"        for (Member member : getTypicalMembers()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"            ab.addMember(member);","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"        return ab;","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"    public static List\u003cMember\u003e getTypicalMembers() {","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"jonasongg"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALAN_MEMBER, BETTY_MEMBER, CHARLES_MEMBER, DENISE_MEMBER,","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"jonasongg"},"content":"                ETHAN_MEMBER, FRED_MEMBER, GISELLE_MEMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"AlfredBeNoel":14,"jonasongg":83}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalApplicants.getTypicalApplicants;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalMembers;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import seedu.address.model.person.Member;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"    private TypicalPersons() {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     * Returns an {@code AddressBook} with all the typical members.","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    public static AddressBook getTypicalAddressBookWithMembersApplicants() {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"        for (Applicant applicant : getTypicalApplicants()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"        for (Member member : getTypicalMembers()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"            ab.addMember(member);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"-":18,"jonasongg":13}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"prawnzyy"},"content":"![CI Status](https://github.com/AY2324S1-CS2103T-F10-3/tp/actions/workflows/gradle.yml/badge.svg)","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"prawnzyy"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F10-3/tp/graph/badge.svg?token\u003dVOTP39W8U3)](https://codecov.io/gh/AY2324S1-CS2103T-F10-3/tp)","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"prawnzyy"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"prawnzyy"},"content":"* This is **an ingredient and recipe application for home bakers and cooks**.\u003cbr\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"prawnzyy"},"content":"* Example usages:","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"prawnzyy"},"content":"  * as a medium for home bakers to store their current ingredients.","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"prawnzyy"},"content":"  * as a way for bakers and cooks to find the corresponding recipes.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"prawnzyy"},"content":"  * as a central for check whether they have the necessary ingredients for a specific recipe.","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"prawnzyy"},"content":"* The project simulates an ingredient stock as well as recipe viewer.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"prawnzyy"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"prawnzyy"},"content":"  * It comes with a **reasonable level of user and developer documentation.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"prawnzyy"},"content":"* It is named `[Ba]king [Br]ead` as a pun to the show breaking bad and also to tie in with the idea of food.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"prawnzyy"},"content":"* For a detailed documentation, visit [[Ba]king [Br]ead](https://ay2324s1-cs2103t-f10-3.github.io/tp/)","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"prawnzyy":15,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ItsTYtan"},"content":"### Tan Tze Young","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ItsTYtan"},"content":"\u003cimg src\u003d\"images/itstytan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ItsTYtan"},"content":"[[github](http://github.com/ItsTYtan)]","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ItsTYtan"},"content":"[[portfolio](team/itstytan.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"TohLiYuan"},"content":"### Toh Li Yuan","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"TohLiYuan"},"content":"\u003cimg src\u003d\"images/tohliyuan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"TohLiYuan"},"content":"[[github](http://github.com/TohLiYuan)] [[portfolio](team/tohliyuan.md)]","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"TohLiYuan"},"content":"* Responsibilities: Storage","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"thaddeusong"},"content":"### Thaddeus Ong","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"thaddeusong"},"content":"[[github](http://github.com/thaddeusong)]","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"thaddeusong"},"content":"[[portfolio](team/thaddeusong.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"thaddeusong"},"content":"* Responsibilities: Logic and Model","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"prawnzyy"},"content":"### Seah Zi Xiang","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"prawnzyy"},"content":"\u003cimg src\u003d\"images/prawnzyy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"prawnzyy"},"content":"[[github](http://github.com/prawnzyy)]","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"prawnzyy"},"content":"[[portfolio](team/prawnzyy.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"prawnzyy"},"content":"* Responsibilities: Admin and UI","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"dhruvir29"},"content":"### Dhruvi Ketan Rathod","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"dhruvir29"},"content":"\u003cimg src\u003d\"images/dhruvir29.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"dhruvir29"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"dhruvir29"},"content":"[[github](http://github.com/dhruvir29)]","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"dhruvir29"},"content":"[[portfolio](team/dhruvir29.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"dhruvir29"},"content":"* Responsibilities: Logic ","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"ItsTYtan":4,"prawnzyy":5,"TohLiYuan":4,"thaddeusong":4,"dhruvir29":6,"-":37}},{"path":"docs/DeveloperGuide (Pristine).md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"prawnzyy"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"prawnzyy"},"content":"  layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"prawnzyy"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"prawnzyy"},"content":"  pageNav: 3","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"prawnzyy"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"prawnzyy"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"prawnzyy"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"prawnzyy"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"prawnzyy"},"content":"## **Acknowledgements**","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"prawnzyy"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"prawnzyy"},"content":"## **Setting up, getting started**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"prawnzyy"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"prawnzyy"},"content":"## **Design**","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"prawnzyy"},"content":"### Architecture","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"prawnzyy"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"prawnzyy"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"prawnzyy"},"content":"**Main components of the architecture**","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"prawnzyy"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"prawnzyy"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"prawnzyy"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"prawnzyy"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"prawnzyy"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"prawnzyy"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"prawnzyy"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"prawnzyy"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"prawnzyy"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"prawnzyy"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"prawnzyy"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"prawnzyy"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"prawnzyy"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"prawnzyy"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"prawnzyy"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"prawnzyy"},"content":"The sections below give more details of each component.","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"prawnzyy"},"content":"### UI component","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"prawnzyy"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"prawnzyy"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"prawnzyy"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"prawnzyy"},"content":"The `UI` component,","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"prawnzyy"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"prawnzyy"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"prawnzyy"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"prawnzyy"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"prawnzyy"},"content":"### Logic component","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"prawnzyy"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"prawnzyy"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"prawnzyy"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"prawnzyy"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"prawnzyy"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"prawnzyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"prawnzyy"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"prawnzyy"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"prawnzyy"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"prawnzyy"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"prawnzyy"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"prawnzyy"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"prawnzyy"},"content":"How the parsing works:","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"prawnzyy"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"prawnzyy"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"prawnzyy"},"content":"### Model component","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"prawnzyy"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"prawnzyy"},"content":"The `Model` component,","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"prawnzyy"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"prawnzyy"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"prawnzyy"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"prawnzyy"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"prawnzyy"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"prawnzyy"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"prawnzyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"prawnzyy"},"content":"### Storage component","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"prawnzyy"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"prawnzyy"},"content":"The `Storage` component,","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"prawnzyy"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"prawnzyy"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"prawnzyy"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"prawnzyy"},"content":"### Common classes","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"prawnzyy"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"prawnzyy"},"content":"## **Implementation**","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"prawnzyy"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"prawnzyy"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"prawnzyy"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"prawnzyy"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"prawnzyy"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"prawnzyy"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"prawnzyy"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"prawnzyy"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"prawnzyy"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"prawnzyy"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"prawnzyy"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"prawnzyy"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"prawnzyy"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"prawnzyy"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"prawnzyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"prawnzyy"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"prawnzyy"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":199,"author":{"gitId":"prawnzyy"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"prawnzyy"},"content":"than attempting to perform the undo.","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"prawnzyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"prawnzyy"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"prawnzyy"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"prawnzyy"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"prawnzyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":213,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":214,"author":{"gitId":"prawnzyy"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-10-03"},{"lineNumber":215,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"prawnzyy"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":218,"author":{"gitId":"prawnzyy"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-10-03"},{"lineNumber":219,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"prawnzyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"prawnzyy"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":226,"author":{"gitId":"prawnzyy"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":229,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":230,"author":{"gitId":"prawnzyy"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"prawnzyy"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":234,"author":{"gitId":"prawnzyy"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-03"},{"lineNumber":235,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"prawnzyy"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2023-10-03"},{"lineNumber":237,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"prawnzyy"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":239,"author":{"gitId":"prawnzyy"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2023-10-03"},{"lineNumber":240,"author":{"gitId":"prawnzyy"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":241,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":242,"author":{"gitId":"prawnzyy"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-10-03"},{"lineNumber":243,"author":{"gitId":"prawnzyy"},"content":"  itself.","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"prawnzyy"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-10-03"},{"lineNumber":245,"author":{"gitId":"prawnzyy"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"prawnzyy"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2023-10-03"},{"lineNumber":248,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":249,"author":{"gitId":"prawnzyy"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2023-10-03"},{"lineNumber":250,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"prawnzyy"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":254,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":256,"author":{"gitId":"prawnzyy"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2023-10-03"},{"lineNumber":257,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":258,"author":{"gitId":"prawnzyy"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":259,"author":{"gitId":"prawnzyy"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":260,"author":{"gitId":"prawnzyy"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"prawnzyy"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":262,"author":{"gitId":"prawnzyy"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":263,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":264,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":265,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":266,"author":{"gitId":"prawnzyy"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":268,"author":{"gitId":"prawnzyy"},"content":"### Product scope","lastModifiedDate":"2023-10-03"},{"lineNumber":269,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":270,"author":{"gitId":"prawnzyy"},"content":"**Target user profile**:","lastModifiedDate":"2023-10-03"},{"lineNumber":271,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":272,"author":{"gitId":"prawnzyy"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2023-10-03"},{"lineNumber":273,"author":{"gitId":"prawnzyy"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2023-10-03"},{"lineNumber":274,"author":{"gitId":"prawnzyy"},"content":"* can type fast","lastModifiedDate":"2023-10-03"},{"lineNumber":275,"author":{"gitId":"prawnzyy"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2023-10-03"},{"lineNumber":276,"author":{"gitId":"prawnzyy"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2023-10-03"},{"lineNumber":277,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":278,"author":{"gitId":"prawnzyy"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-10-03"},{"lineNumber":279,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":281,"author":{"gitId":"prawnzyy"},"content":"### User stories","lastModifiedDate":"2023-10-03"},{"lineNumber":282,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":283,"author":{"gitId":"prawnzyy"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2023-10-03"},{"lineNumber":284,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":285,"author":{"gitId":"prawnzyy"},"content":"| Priority | As a …​                                    | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":286,"author":{"gitId":"prawnzyy"},"content":"|----------|--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":287,"author":{"gitId":"prawnzyy"},"content":"| `* * *`  | new user                                   | see usage instructions       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"prawnzyy"},"content":"| `* * *`  | user                                       | add a new person             |                                                                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":289,"author":{"gitId":"prawnzyy"},"content":"| `* * *`  | user                                       | delete a person              | remove entries that I no longer need                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":290,"author":{"gitId":"prawnzyy"},"content":"| `* * *`  | user                                       | find a person by name        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-10-03"},{"lineNumber":291,"author":{"gitId":"prawnzyy"},"content":"| `* *`    | user                                       | hide private contact details | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"prawnzyy"},"content":"| `*`      | user with many persons in the address book | sort persons by name         | locate a person easily                                                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":294,"author":{"gitId":"prawnzyy"},"content":"*{More to be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":295,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":296,"author":{"gitId":"prawnzyy"},"content":"### Use cases","lastModifiedDate":"2023-10-03"},{"lineNumber":297,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":298,"author":{"gitId":"prawnzyy"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":299,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"prawnzyy"},"content":"**Use case: Delete a person**","lastModifiedDate":"2023-10-03"},{"lineNumber":301,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":302,"author":{"gitId":"prawnzyy"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"prawnzyy"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-03"},{"lineNumber":305,"author":{"gitId":"prawnzyy"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"prawnzyy"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"prawnzyy"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":309,"author":{"gitId":"prawnzyy"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":311,"author":{"gitId":"prawnzyy"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"prawnzyy"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":315,"author":{"gitId":"prawnzyy"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":317,"author":{"gitId":"prawnzyy"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":319,"author":{"gitId":"prawnzyy"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":320,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":321,"author":{"gitId":"prawnzyy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"prawnzyy"},"content":"*{More to be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"prawnzyy"},"content":"### Non-Functional Requirements","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"prawnzyy"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"prawnzyy"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"prawnzyy"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-03"},{"lineNumber":330,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":331,"author":{"gitId":"prawnzyy"},"content":"*{More to be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":332,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":333,"author":{"gitId":"prawnzyy"},"content":"### Glossary","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"prawnzyy"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-10-03"},{"lineNumber":336,"author":{"gitId":"prawnzyy"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2023-10-03"},{"lineNumber":337,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":338,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":340,"author":{"gitId":"prawnzyy"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2023-10-03"},{"lineNumber":341,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"prawnzyy"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2023-10-03"},{"lineNumber":343,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":344,"author":{"gitId":"prawnzyy"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":345,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"prawnzyy"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-10-03"},{"lineNumber":347,"author":{"gitId":"prawnzyy"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":349,"author":{"gitId":"prawnzyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":350,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":351,"author":{"gitId":"prawnzyy"},"content":"### Launch and shutdown","lastModifiedDate":"2023-10-03"},{"lineNumber":352,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":353,"author":{"gitId":"prawnzyy"},"content":"1. Initial launch","lastModifiedDate":"2023-10-03"},{"lineNumber":354,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":355,"author":{"gitId":"prawnzyy"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2023-10-03"},{"lineNumber":356,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":357,"author":{"gitId":"prawnzyy"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-10-03"},{"lineNumber":358,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":359,"author":{"gitId":"prawnzyy"},"content":"1. Saving window preferences","lastModifiedDate":"2023-10-03"},{"lineNumber":360,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":361,"author":{"gitId":"prawnzyy"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2023-10-03"},{"lineNumber":362,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":363,"author":{"gitId":"prawnzyy"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":364,"author":{"gitId":"prawnzyy"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2023-10-03"},{"lineNumber":365,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":366,"author":{"gitId":"prawnzyy"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-10-03"},{"lineNumber":367,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":368,"author":{"gitId":"prawnzyy"},"content":"### Deleting a person","lastModifiedDate":"2023-10-03"},{"lineNumber":369,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":370,"author":{"gitId":"prawnzyy"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2023-10-03"},{"lineNumber":371,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":372,"author":{"gitId":"prawnzyy"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":373,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":374,"author":{"gitId":"prawnzyy"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":375,"author":{"gitId":"prawnzyy"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-03"},{"lineNumber":376,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":377,"author":{"gitId":"prawnzyy"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":378,"author":{"gitId":"prawnzyy"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-03"},{"lineNumber":379,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":380,"author":{"gitId":"prawnzyy"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":381,"author":{"gitId":"prawnzyy"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2023-10-03"},{"lineNumber":382,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":383,"author":{"gitId":"prawnzyy"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-10-03"},{"lineNumber":384,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":385,"author":{"gitId":"prawnzyy"},"content":"### Saving data","lastModifiedDate":"2023-10-03"},{"lineNumber":386,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":387,"author":{"gitId":"prawnzyy"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2023-10-03"},{"lineNumber":388,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":389,"author":{"gitId":"prawnzyy"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2023-10-03"},{"lineNumber":390,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":391,"author":{"gitId":"prawnzyy"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"prawnzyy":391}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"prawnzyy"},"content":"### Product Scope","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"prawnzyy"},"content":"**Target User Profile**","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"prawnzyy"},"content":"- is a home-baker","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"prawnzyy"},"content":"- has a need to manage and use their inventory of ingredients","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"prawnzyy"},"content":"- has a need to manage a significant amount of recipes and view the ingredients needed","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"prawnzyy"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"prawnzyy"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"prawnzyy"},"content":"- can type fast","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"prawnzyy"},"content":"**Value Propositions**","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"prawnzyy"},"content":"Home-bakers often struggle with managing their recipe book as well as checking if they have the ingredients needed for","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"prawnzyy"},"content":"a particular recipe. This application is designed for home-bakers to search for the recipes that they want along with ","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"prawnzyy"},"content":"the necessary ingredients required to make baking a more convenient and easy process.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"prawnzyy"},"content":"**User Stories**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"prawnzyy"},"content":"| Priority | As a... |                              I want to ... | So that I can ...                                |","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"prawnzyy"},"content":"|:---------|:-------:|-------------------------------------------:|--------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"prawnzyy"},"content":"| `***`    |  baker  |                              view my stock | know what and the quantity of ingredients I have |","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"prawnzyy"},"content":"| `***`    |  baker  |                add ingredients to my stock | update the stock I have                          |   ","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"prawnzyy"},"content":"| `***`    |  baker  | reduce ingredients\u0027 quantities in my stock | update the stock I have after I used the items   | ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"prawnzyy"},"content":"| `***`    |  baker  |                             clear my stock | have an empty stock                              |","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"prawnzyy"},"content":"| `***`    |  baker  |                       find recipes by name | find a specific recipe                           |     ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"prawnzyy"},"content":"| `***`    |  baker  |                               view recipes | see the steps and ingredients involved           |   ","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"prawnzyy"},"content":"| `***`    |  baker  |             add recipes to the recipe book | add new recipes in my recipe book                |","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"prawnzyy"},"content":"| `**`     |  baker  |                             modify recipes | make changes to the recipes as required          |","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"prawnzyy"},"content":"| `***`    |  baker  |   view the ingredients needed for a recipe | know if I have the necessary ingredients         |","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"prawnzyy"},"content":"| `***`    |  baker  |                           request for help | learn how to use the recipe book when I\u0027m lost   |","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"prawnzyy"},"content":"{More to be added}","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"prawnzyy"},"content":"### Use Cases","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"prawnzyy"},"content":"(For all use cases below, the System is the RecipeBook and the Actor is the user, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"prawnzyy"},"content":"#### Use case: Add an ingredient to the stock","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"prawnzyy"},"content":"#### MSS","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"prawnzyy"},"content":"1. User requests to add a specific ingredient to their stock","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"prawnzyy"},"content":"2. RecipeBook adds that ingredient to the stock","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"prawnzyy"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"prawnzyy"},"content":"#### Extensions","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"prawnzyy"},"content":"- 2a. User does not specify the quantity of that ingredient ","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"prawnzyy"},"content":"  - RecipeBook shows an error message ","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"prawnzyy"},"content":"- 2b. The name of the ingredient is not recognised","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"prawnzyy"},"content":"  - RecipeBook shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"prawnzyy"},"content":"- 2c. The specified unit is not recognised","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"prawnzyy"},"content":"  - RecipeBook shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"prawnzyy"},"content":"#### Use case: Reduce items\u0027 quantities in the stock","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"prawnzyy"},"content":"#### MSS","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"prawnzyy"},"content":"1. User requests to use up specific quantities of an ingredient","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"prawnzyy"},"content":"2. RecipeBook reduces the quantity of that ingredient in the stock","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"prawnzyy"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"prawnzyy"},"content":"#### Extensions","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"prawnzyy"},"content":"- 2a. User does not specify the quantity of that ingredient used","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"prawnzyy"},"content":"    - RecipeBook depletes the entire quantity of that ingredient","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"prawnzyy"},"content":"- 2b. The quantity the user requests to use is more than the current quantity in stock","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"prawnzyy"},"content":"    - RecipeBook depletes the entire quantity of that ingredient","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"prawnzyy"},"content":"- 2c. The specified unit is not recognised","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"prawnzyy"},"content":"    - RecipeBook shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"prawnzyy"},"content":"#### Use case: View the stock of ingredients","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"prawnzyy"},"content":"#### MSS","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"prawnzyy"},"content":"1. User requests to view the stock of specific ingredients","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"prawnzyy"},"content":"2. RecipeBook shows the ingredient and the quantity of the ingredient","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"dhruvir29"},"content":"   ","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"prawnzyy"},"content":"#### Extensions","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"prawnzyy"},"content":"- 2a. User does not specify what ingredients they would like to view ","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"prawnzyy"},"content":"  - RecipeBook shows the entire stock of ingredients ","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"prawnzyy"},"content":"- 2b. The specified ingredient(s) are not in the stock ","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"prawnzyy"},"content":"  - RecipeBook shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"prawnzyy"},"content":"#### Use case: Find a specific recipe","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"prawnzyy"},"content":"#### MSS","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"prawnzyy"},"content":"1. User requests to view a specific recipe","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"prawnzyy"},"content":"2. RecipeBook shows the corresponding recipe","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"prawnzyy"},"content":"#### Extensions","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"prawnzyy"},"content":"- 2a. The specified recipe does not exist","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"prawnzyy"},"content":"  - RecipeBook shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"prawnzyy"},"content":"1. The system should work on any *mainstream* OS as long as it has Java `11` installed.","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"prawnzyy"},"content":"2. The system should be able to hold 500 ingredients and recipes in total without any noticeable sluggishness.","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"prawnzyy"},"content":"3. The system should be usable by any novice who is not familiar with computer programs.","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"prawnzyy"},"content":"4. The system should be understandable by any novice who is not familiar with baking.","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"prawnzyy"},"content":"5. The system should log error messages for user debugging \u0026 bug reporting purposes.","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"prawnzyy"},"content":"6. The system should be well-documented for future extension and maintainability.","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"prawnzyy"},"content":"7. The system should be backwards-compatible with data from older versions.","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"prawnzyy"},"content":"- Mainstream OS: Windows, Linux, OS-X","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"prawnzyy":76,"dhruvir29":1,"-":33}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"prawnzyy"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide (Pristine).md#architecture).","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"prawnzyy":1,"-":60}},{"path":"docs/UserGuide (Pristine).md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"prawnzyy"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"prawnzyy"},"content":"  layout: default.md","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"prawnzyy"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"prawnzyy"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"prawnzyy"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"prawnzyy"},"content":"# AB-3 User Guide","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"prawnzyy"},"content":"AddressBook Level 3 (AB3) is a **desktop app for managing contacts, optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"prawnzyy"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"prawnzyy"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"prawnzyy"},"content":"## Quick start","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"prawnzyy"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"prawnzyy"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"prawnzyy"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"prawnzyy"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"prawnzyy"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"prawnzyy"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"prawnzyy"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"prawnzyy"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"prawnzyy"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"prawnzyy"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"prawnzyy"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"prawnzyy"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"prawnzyy"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"prawnzyy"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"prawnzyy"},"content":"## Features","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"prawnzyy"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"prawnzyy"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"prawnzyy"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"prawnzyy"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"prawnzyy"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"prawnzyy"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"prawnzyy"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"prawnzyy"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"prawnzyy"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"prawnzyy"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"prawnzyy"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"prawnzyy"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"prawnzyy"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"prawnzyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"prawnzyy"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"prawnzyy"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"prawnzyy"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"prawnzyy"},"content":"Format: `help`","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"prawnzyy"},"content":"### Adding a person: `add`","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"prawnzyy"},"content":"Adds a person to the address book.","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"prawnzyy"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"prawnzyy"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"prawnzyy"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"prawnzyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"prawnzyy"},"content":"Examples:","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"prawnzyy"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"prawnzyy"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"prawnzyy"},"content":"### Listing all persons : `list`","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"prawnzyy"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"prawnzyy"},"content":"Format: `list`","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":99,"author":{"gitId":"prawnzyy"},"content":"### Editing a person : `edit`","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"prawnzyy"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"prawnzyy"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"prawnzyy"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"prawnzyy"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"prawnzyy"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"prawnzyy"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"prawnzyy"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"prawnzyy"},"content":"    specifying any tags after it.","lastModifiedDate":"2023-09-30"},{"lineNumber":111,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"prawnzyy"},"content":"Examples:","lastModifiedDate":"2023-09-30"},{"lineNumber":113,"author":{"gitId":"prawnzyy"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"prawnzyy"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"prawnzyy"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2023-09-30"},{"lineNumber":117,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":118,"author":{"gitId":"prawnzyy"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2023-09-30"},{"lineNumber":119,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":120,"author":{"gitId":"prawnzyy"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-09-30"},{"lineNumber":121,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":122,"author":{"gitId":"prawnzyy"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-09-30"},{"lineNumber":123,"author":{"gitId":"prawnzyy"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-09-30"},{"lineNumber":124,"author":{"gitId":"prawnzyy"},"content":"* Only the name is searched.","lastModifiedDate":"2023-09-30"},{"lineNumber":125,"author":{"gitId":"prawnzyy"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-09-30"},{"lineNumber":126,"author":{"gitId":"prawnzyy"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-09-30"},{"lineNumber":127,"author":{"gitId":"prawnzyy"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-09-30"},{"lineNumber":128,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":129,"author":{"gitId":"prawnzyy"},"content":"Examples:","lastModifiedDate":"2023-09-30"},{"lineNumber":130,"author":{"gitId":"prawnzyy"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2023-09-30"},{"lineNumber":131,"author":{"gitId":"prawnzyy"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":132,"author":{"gitId":"prawnzyy"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":133,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":134,"author":{"gitId":"prawnzyy"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2023-09-30"},{"lineNumber":135,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":136,"author":{"gitId":"prawnzyy"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2023-09-30"},{"lineNumber":137,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":138,"author":{"gitId":"prawnzyy"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-30"},{"lineNumber":139,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":140,"author":{"gitId":"prawnzyy"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2023-09-30"},{"lineNumber":141,"author":{"gitId":"prawnzyy"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-09-30"},{"lineNumber":142,"author":{"gitId":"prawnzyy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-30"},{"lineNumber":143,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":144,"author":{"gitId":"prawnzyy"},"content":"Examples:","lastModifiedDate":"2023-09-30"},{"lineNumber":145,"author":{"gitId":"prawnzyy"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2023-09-30"},{"lineNumber":146,"author":{"gitId":"prawnzyy"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2023-09-30"},{"lineNumber":147,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":148,"author":{"gitId":"prawnzyy"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-09-30"},{"lineNumber":149,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":150,"author":{"gitId":"prawnzyy"},"content":"Clears all entries from the address book.","lastModifiedDate":"2023-09-30"},{"lineNumber":151,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":152,"author":{"gitId":"prawnzyy"},"content":"Format: `clear`","lastModifiedDate":"2023-09-30"},{"lineNumber":153,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":154,"author":{"gitId":"prawnzyy"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-09-30"},{"lineNumber":155,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":156,"author":{"gitId":"prawnzyy"},"content":"Exits the program.","lastModifiedDate":"2023-09-30"},{"lineNumber":157,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":158,"author":{"gitId":"prawnzyy"},"content":"Format: `exit`","lastModifiedDate":"2023-09-30"},{"lineNumber":159,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":160,"author":{"gitId":"prawnzyy"},"content":"### Saving the data","lastModifiedDate":"2023-09-30"},{"lineNumber":161,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":162,"author":{"gitId":"prawnzyy"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-09-30"},{"lineNumber":163,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":164,"author":{"gitId":"prawnzyy"},"content":"### Editing the data file","lastModifiedDate":"2023-09-30"},{"lineNumber":165,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":166,"author":{"gitId":"prawnzyy"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-30"},{"lineNumber":167,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":168,"author":{"gitId":"prawnzyy"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":169,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":170,"author":{"gitId":"prawnzyy"},"content":"**Caution:**","lastModifiedDate":"2023-09-30"},{"lineNumber":171,"author":{"gitId":"prawnzyy"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-30"},{"lineNumber":172,"author":{"gitId":"prawnzyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":173,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":174,"author":{"gitId":"prawnzyy"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2023-09-30"},{"lineNumber":175,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":176,"author":{"gitId":"prawnzyy"},"content":"_Details coming soon ..._","lastModifiedDate":"2023-09-30"},{"lineNumber":177,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":178,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-30"},{"lineNumber":179,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":180,"author":{"gitId":"prawnzyy"},"content":"## FAQ","lastModifiedDate":"2023-09-30"},{"lineNumber":181,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":182,"author":{"gitId":"prawnzyy"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":183,"author":{"gitId":"prawnzyy"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2023-09-30"},{"lineNumber":184,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":185,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-30"},{"lineNumber":186,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":187,"author":{"gitId":"prawnzyy"},"content":"## Known issues","lastModifiedDate":"2023-09-30"},{"lineNumber":188,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":189,"author":{"gitId":"prawnzyy"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-30"},{"lineNumber":190,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":191,"author":{"gitId":"prawnzyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-30"},{"lineNumber":192,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":193,"author":{"gitId":"prawnzyy"},"content":"## Command summary","lastModifiedDate":"2023-09-30"},{"lineNumber":194,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":195,"author":{"gitId":"prawnzyy"},"content":"Action     | Format, Examples","lastModifiedDate":"2023-09-30"},{"lineNumber":196,"author":{"gitId":"prawnzyy"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-30"},{"lineNumber":197,"author":{"gitId":"prawnzyy"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2023-09-30"},{"lineNumber":198,"author":{"gitId":"prawnzyy"},"content":"**Clear**  | `clear`","lastModifiedDate":"2023-09-30"},{"lineNumber":199,"author":{"gitId":"prawnzyy"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2023-09-30"},{"lineNumber":200,"author":{"gitId":"prawnzyy"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2023-09-30"},{"lineNumber":201,"author":{"gitId":"prawnzyy"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2023-09-30"},{"lineNumber":202,"author":{"gitId":"prawnzyy"},"content":"**List**   | `list`","lastModifiedDate":"2023-09-30"},{"lineNumber":203,"author":{"gitId":"prawnzyy"},"content":"**Help**   | `help`","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"prawnzyy":203}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"prawnzyy"},"content":"# RecipeBook User Guide","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"prawnzyy"},"content":"RecipeBook is a **desktop app for managing recipes and ingredient inventory, optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"prawnzyy"},"content":"1. Download the latest `recipebook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"prawnzyy"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar recipebook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"prawnzyy"},"content":"    * TODO","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"prawnzyy"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/Milk`.","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"prawnzyy"},"content":"  e.g `n/NAME q/QUANTITY [u/UNIT]` can be used as `n/Milk q/1000 u/ml` or as `n/Milk q/1000`.","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"prawnzyy"},"content":"  e.g. `[NAME]…​` can be used as ` ` (i.e. 0 times), `milk`, `milk flour` etc.","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"prawnzyy"},"content":"  e.g. if the command specifies `n/NAME q/QUANTITY`, `q/QUANTITY n/NAME` is also acceptable.","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"prawnzyy"},"content":"* Parameters are case-insensitive.","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"prawnzyy"},"content":"* e.g. A parameter specified as `n/Milk` is functionally identical to `n/MILK` or `n/milk`.","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"prawnzyy"},"content":"### Adding an ingredient: `add`","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"prawnzyy"},"content":"Adds an ingredient to stock.","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"prawnzyy"},"content":"Format: `add n/NAME q/QUANTITY [u/UNIT]`","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"prawnzyy"},"content":"**Tip:** If no unit is specified, the default unit for that kind of ingredient will be used. If the ingredient does not have default unit, then grams will be used.","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"prawnzyy"},"content":"* `add n/Flour q/1 u/kg`","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"prawnzyy"},"content":"* `add n/Milk q/600 u/ml`","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"prawnzyy"},"content":"### Using up ingredients : `use`","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"prawnzyy"},"content":"Depletes a specified amount of an ingredient from stock.","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"prawnzyy"},"content":"Format: `use n/NAME [q/QUANTITY] [u/UNIT]`","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"prawnzyy"},"content":"* If no quantity is provided, the entire stock of the specified ingredient will be depleted.","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"prawnzyy"},"content":"* If the quantity depleted exceeds the current quantity in stock, the entire stock will be depleted but will not go into the negative.","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"prawnzyy"},"content":"*  `use n/Milk q/600 u/ml` Depletes the current quantity of milk by 600 ml.","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"prawnzyy"},"content":"*  `use n/Egg` Depletes the current quantity of egg by the default amount.","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"prawnzyy"},"content":"### Finding the quantity of an ingredient by name: `stock`","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"prawnzyy"},"content":"Lists the quantity of the specified ingredients.","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"prawnzyy"},"content":"Format: `stock [NAME]…​`","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"prawnzyy"},"content":"* Multiple ingredients can be specified e.g. `stock Flour Butter` will return the quantities of both ingredients","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"prawnzyy"},"content":"* If no ingredients are specified, the quantity of all ingredients will be returned","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"prawnzyy"},"content":"* Only full words will be matched e.g. `Flou` will not match `Flour`","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"prawnzyy"},"content":"* For ingredients with names comprising multiple words, the first word must be matched e.g. `Bay` will match `Bay Leaves` but `Leaves` will not","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"prawnzyy"},"content":"* The unit specified will be the default unit of the ingredient","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"prawnzyy"},"content":"* `stock Milk` returns `Milk: 100ml`","lastModifiedDate":"2023-09-30"},{"lineNumber":113,"author":{"gitId":"prawnzyy"},"content":"* `find milk flour` returns `Milk: 100ml`, `Flour: 2000g`\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"prawnzyy"},"content":"Clears all entries from the ingredient stock.","lastModifiedDate":"2023-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"prawnzyy"},"content":"### Viewing Recipes `[coming in v1.3]`","lastModifiedDate":"2023-09-30"},{"lineNumber":128,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":129,"author":{"gitId":"prawnzyy"},"content":"### Adding Recipes `[coming in v1.3]`","lastModifiedDate":"2023-09-30"},{"lineNumber":130,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":131,"author":{"gitId":"prawnzyy"},"content":"### Modifying Recipes `[coming in v1.3]`","lastModifiedDate":"2023-09-30"},{"lineNumber":132,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"prawnzyy"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous [Br]eaking [Br]ead home folder.","lastModifiedDate":"2023-09-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"prawnzyy"},"content":"| Action    | Format, Examples                                                      |","lastModifiedDate":"2023-09-30"},{"lineNumber":162,"author":{"gitId":"prawnzyy"},"content":"|-----------|-----------------------------------------------------------------------|","lastModifiedDate":"2023-09-30"},{"lineNumber":163,"author":{"gitId":"prawnzyy"},"content":"| **Add**   | `add n/NAME q/QUANTITY [u/UNIT]…​` \u003cbr\u003e e.g., `add n/milk q/600 u/ml` |","lastModifiedDate":"2023-09-30"},{"lineNumber":164,"author":{"gitId":"prawnzyy"},"content":"| **Clear** | `clear`                                                               |","lastModifiedDate":"2023-09-30"},{"lineNumber":165,"author":{"gitId":"prawnzyy"},"content":"| **Use**   | `use n/NAME [q/QUANTITY] [u/UNIT]`\u003cbr\u003e e.g., `use n/milk q/200 u/ml`  |","lastModifiedDate":"2023-09-30"},{"lineNumber":166,"author":{"gitId":"prawnzyy"},"content":"| **Stock** | `stock [NAME]…​`\u003cbr\u003e e.g., `stock milk egg`                           |","lastModifiedDate":"2023-09-30"},{"lineNumber":167,"author":{"gitId":"prawnzyy"},"content":"| **Help**  | `help`                                                                |","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"prawnzyy":50,"-":117}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"prawnzyy"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003e[Ba]king [Br]ead\u003c/a\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"prawnzyy"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-F10-3/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"prawnzyy":2,"-":64}},{"path":"docs/team/dhruvir29.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dhruvir29"},"content":"Dhruvi Ketan Rathod\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"dhruvir29"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"dhruvir29"},"content":"Project: [Ba]king [Br]ead","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"dhruvir29"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"dhruvir29"},"content":"Project overview:","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"dhruvir29"},"content":"[TO BE ADDED]","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"dhruvir29"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"dhruvir29"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"dhruvir29"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"dhruvir29"},"content":"#### Code Contribution: [TO BE ADDED]","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"dhruvir29"},"content":"#### Enhancement Implemented: [TO BE ADDED]","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"dhruvir29"},"content":"#### Contribution to UG: [TO BE ADDED]","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"dhruvir29"},"content":"#### Contribution to DG: [TO BE ADDED]","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"dhruvir29"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"dhruvir29"},"content":"#### Review/mentoring contributions [TO BE ADDED]","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"dhruvir29"},"content":"#### Contributions beyond the project team [TO BE ADDED]","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"dhruvir29":16}},{"path":"docs/team/itstytan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ItsTYtan"},"content":"Tan Tze Young\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"ItsTYtan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"ItsTYtan"},"content":"Project: [Ba]king [Br]ead","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"ItsTYtan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"ItsTYtan"},"content":"Project overview:","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"ItsTYtan"},"content":"[TO BE ADDED]","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"ItsTYtan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"ItsTYtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ItsTYtan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"ItsTYtan"},"content":"#### Code Contribution: [TO BE ADDED]","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ItsTYtan"},"content":"#### Enhancement Implemented: [TO BE ADDED]","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"ItsTYtan"},"content":"#### Contribution to UG: [TO BE ADDED]","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ItsTYtan"},"content":"#### Contribution to DG: [TO BE ADDED]","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ItsTYtan"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ItsTYtan"},"content":"- Push user story issues onto GitHub.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ItsTYtan"},"content":"- Created UI mockups for the project","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ItsTYtan"},"content":"#### Review/mentoring contributions [TO BE ADDED]","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ItsTYtan"},"content":"#### Contributions beyond the project team [TO BE ADDED]","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ItsTYtan"},"content":"","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"ItsTYtan":19}},{"path":"docs/team/prawnzyy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"prawnzyy"},"content":"Seah Zi Xiang\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"prawnzyy"},"content":"Project: [Ba]king [Br]ead","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"prawnzyy"},"content":"[TO BE ADDED]","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"prawnzyy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"prawnzyy"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"prawnzyy"},"content":"- New Feature: [TO BE ADDED]","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"prawnzyy"},"content":"- Code Contribution: [TO BE ADDED]","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"prawnzyy"},"content":"- Enhancement Implemented: [TO BE ADDED]","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"prawnzyy"},"content":"- Contribution to UG: [TO BE ADDED]","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"prawnzyy"},"content":"- Contribution to DG: [TO BE ADDED]","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"prawnzyy":13}},{"path":"docs/team/thaddeusong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"Thaddeus Ong\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"Project: [Ba]king [Br]ead","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"## Overview","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"``Code Contributed``","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"## Contributions to Developer Guide","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"## Contributions to User Guide","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"thaddeusong":13}},{"path":"docs/team/tohliyuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TohLiYuan"},"content":"Toh Li Yuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"TohLiYuan"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"TohLiYuan"},"content":"Project: [Ba]king [Br]ead","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"TohLiYuan"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"TohLiYuan"},"content":"[TO BE ADDED]","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"TohLiYuan"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"TohLiYuan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"TohLiYuan"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"TohLiYuan"},"content":"- New Feature: [TO BE ADDED]","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"TohLiYuan"},"content":"- Code Contribution: [TO BE ADDED]","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"TohLiYuan"},"content":"- Enhancement Implemented: [TO BE ADDED]","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"TohLiYuan"},"content":"- Contribution to UG: [TO BE ADDED]","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"TohLiYuan"},"content":"- Contribution to DG: [TO BE ADDED]","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"TohLiYuan":13}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"prawnzyy"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide (Pristine).md#architecture)","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"prawnzyy":1,"-":310}}]

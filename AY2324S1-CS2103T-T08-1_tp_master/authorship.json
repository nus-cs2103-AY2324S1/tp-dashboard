[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T08-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"* This is **a project based on a sample project for Software Engineering (SE) students**.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"* It is named `MediConnect` because the target user receptionist at medical facilities.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"* The purpose of `MediConnect` is to aid receptionist in their day-to-day administrative task.\u003cbr/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"  This includes:","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"  * Helping a patient book their next appointment.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"  * Helping a doctor retrieve the medical history of a particular patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"* The project simulates an ongoing software project for a desktop application (called _MediConnect_) used for managing patient details, doctor details and, appointments.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"* For an overview of this project, see the **[MediConnect Product Website](https://ay2324s1-cs2103t-t08-1.github.io/tp/)**.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"* This project is based on `AddressBook Level 3` project (`AB3` for short), a **part of the se-education.org** initiative.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"  * Documentation of `AB3`: **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"yanghengtang":12,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"run {","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"mounilsankar":4,"derekjxtan":4,"-":68}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"## CS2103T-T08-1","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"### Kim Shi Tong","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"\u003cimg src\u003d\"images/kimshitong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"[[github](https://github.com/kimshitong)]","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"[[portfolio](team/kimshitong.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"* Responsibilities: UI + Threading","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"### Mah Chee Teng","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"\u003cimg src\u003d\"images/cheeggered.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"[[github](http://github.com/cheeggered)]","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"[[portfolio](team/cheeggered.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"* Responsibilities: UI + Data","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"### Mounil Sankar","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"\u003cimg src\u003d\"images/mounilsankar.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"[[github](http://github.com/mounilsankar)] ","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"[[portfolio](team/mounilsankar.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"### Tan Jing Xu, Derek","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"\u003cimg src\u003d\"images/derekjxtan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"[[github](http://github.com/derekjxtan)]","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"[[portfolio](team/derekjxtan.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"### Tang Yang Heng","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"\u003cimg src\u003d\"images/yanghengtang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"[[github](http://github.com/yanghengtang)]","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"[[portfolio](team/yanghengtang.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"* Responsibilities: Dev Ops + Data","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"yanghengtang":26,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"### Edit patient feature","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"cheeggered"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"cheeggered"},"content":"The proposed edit patient mechanism is facilitated by `EditPatientCommand` and it extends `Model`. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"cheeggered"},"content":"* `LogicManager#execute()` —  Executes the given user String input and returns a \u0027CommandResult\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"cheeggered"},"content":"Given below is an example usage scenario and how the edit patient mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"cheeggered"},"content":"Step 1. The user launches the application. The `Database` will be initialized with all data in the order that it was stored in.","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"cheeggered"},"content":"Step 2. The user inputs `edit_p 5 p\\23456789` command to edit the phone number of the 5th patient in the MediConnect database. The `edit_p` command calls `EditCommandParser#parse()` which parses the parameters to edit the current patient with. ","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"cheeggered"},"content":"A new `EditPatientDescriptor` instance will be created in the parse command call, and a new `EditPatientCommand` instance will be created with the `EditPatientDescriptor` and the given `index`.","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"cheeggered"},"content":"Step 3. The created `EditPatientCommand` instance is returned to `LogicManager` and its `execute` method is called.","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"cheeggered"},"content":"`EditPatientCommand#execute` then calls `Model#setPatient` and with the patient of the given `Index` and the target patient created by the `EditPatientDescriptor`.","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"cheeggered"},"content":"The example usage scenario for the edit doctor and edit appointment mechanisms would be very similar to the above scenario.","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"cheeggered"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#setPatient()`, so the database will not be updated.","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"cheeggered"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"cheeggered"},"content":"The following sequence diagram shows how the edit appointment operation would work:","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"cheeggered"},"content":"![SortSequenceDiagram](images/EditAppointmentSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"cheeggered"},"content":"The following sequence diagram shows how the edit doctor operation would work:","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"cheeggered"},"content":"![SortSequenceDiagram](images/EditDoctorSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"cheeggered"},"content":"The following sequence diagram shows how the edit patient operation would work:","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"cheeggered"},"content":"![SortSequenceDiagram](images/EditPatientSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"cheeggered"},"content":"The following activity diagram summarizes what happens when a user wants to edit an appointment/patient/doctor:","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"cheeggered"},"content":"![EditXYZCommandActivityDiagram](images/EditXYZActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"cheeggered"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"cheeggered"},"content":"**Aspect: How edit patient executes:** ","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"cheeggered"},"content":"* **Alternative 1 (current choice):** Having a single EditPatientCommand class that can edit all patient attributes","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"cheeggered"},"content":"    * Pros: Better scalability.","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"cheeggered"},"content":"    * Cons: Increase coupling due to the usage of Optional class.","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"cheeggered"},"content":"* **Alternative 2:** Creating a command class for each patient attribute (eg. EditPatientNameCommand)","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"cheeggered"},"content":"    * Pros: Straightforward, no need to handle optional parameters ","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"cheeggered"},"content":"    * Cons: Limited scalability, have to implement new command classes when attributes are added to ","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"cheeggered"},"content":"    patient/doctor/appointment classes","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"cheeggered"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"cheeggered"},"content":"## **Implementation**","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"cheeggered"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"kimshitong"},"content":"### Find Doctor / Patient","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"kimshitong"},"content":"**Introduction**","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"kimshitong"},"content":"This section describes the feature that allows users to find doctors/patient in the MediConnect database by name.","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"kimshitong"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"kimshitong"},"content":"The finding of a doctor/patient in MediConnect is facilitated by LogicManager, which extends Logic. It holds a mediConnectParser that parses the user input, and a Model where the command is executed. Key methods involved include:","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"kimshitong"},"content":"LogicManager#execute() — Executes the given user String input and returns a CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"kimshitong"},"content":"FindDoctorCommandParser/FindPatientCommandParser#parse() — Parses the user input to create a FindDoctorCommand/FindPatientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"kimshitong"},"content":"FindDoctorCommand/FindPatientCommand#execute() — Filters the list of doctors/patient based on the given predicate","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"kimshitong"},"content":"These operations are exposed in the Ui interface as Ui#executeCommand().","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"kimshitong"},"content":"Given below is an example usage scenario and how the ListDoctorCommand/ListPatientCommand mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"kimshitong"},"content":"Step 1: The user inputs find_d/find_n John to search for doctors/patients named \"John\" in MediConnect.","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"kimshitong"},"content":"* The find_d/find_n command triggers mediConnectParser#parseCommand, which identifies the command word and calls FindDoctorCommandParser/FindPatientCommandParser#parse to handle the arguments.","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"kimshitong"},"content":"Step 2: The FindDoctorCommandParser/FindPatientCommandParser#parse method splits the argument \"John\" into a list of keywords. It then creates a NameContainsKeywordsDoctorPredicate/NameContainsKeywordsPatientPredicate object, using the list of keywords.","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"kimshitong"},"content":"Step 3: A new FindDoctorCommand/FindPatientCommand instance is created using the NameContainsKeywordsDoctorPredicate/NameContainsKeywordsPatientPredicate object.","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"kimshitong"},"content":"Step 4: The created FindDoctorCommand/FindPatientCommand instance is returned to LogicManager, and its execute method is called.","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"kimshitong"},"content":"FindDoctorCommand/FindPatientCommand#execute filters the list of doctors/patients in Model using the NameContainsKeywordsDoctorPredicate/NameContainsKeywordsPatientPredicate.","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"kimshitong"},"content":"Step 5: The filtered list is displayed to the user through the UI.","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"kimshitong"},"content":"The following sequence diagram shows how the find doctor operation would work:","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"kimshitong"},"content":"![FindDoctorSequence](images/FindDoctorSequence.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"kimshitong"},"content":"The following sequence diagram shows how the find patient operation would work:","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"kimshitong"},"content":"![FindPatientSequence](images/FindPatientSequence.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"kimshitong"},"content":"The following activity diagram summarizes what happens when a user wants to find a new doctor/patient:","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"kimshitong"},"content":"![FindCommandActivity](images/FindCommandActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"kimshitong"},"content":"### List Doctors / Patients","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"kimshitong"},"content":"**Introduction**","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"kimshitong"},"content":"The listing of all doctors/patient in the database is facilitated by \u0027LogicManager\u0027. It extends \u0027Logic\u0027 and stores the mediConnectParser that parses the user input, and the model in which the command is executed. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"kimshitong"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"kimshitong"},"content":"LogicManager#execute(String commandText) — Executes the given user String input and returns a CommandResult.","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"kimshitong"},"content":"These operations are exposed in the Ui interface as Ui#executeCommand().","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"kimshitong"},"content":"Given below is an example usage scenario and how the ListDoctorCommand/ListPatientCommand mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"kimshitong"},"content":"Step 1: The user inputs list_d/list_p. The application will display the FilteredDoctorList/FilteredPatientList in its default sorting order.","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"kimshitong"},"content":"* The list_d/list_p command calls mediConnectParser#parseCommand which recognizes the command word as list_d/list_p.","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"kimshitong"},"content":"* A new ListDoctorCommand/ListPatientCommand instance will be created.","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"kimshitong"},"content":"Step 2: The created ListDoctorCommand/ListPatientCommand instance is returned to NewLogicManager and its execute method is called.","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"kimshitong"},"content":"* ListDoctorCommand/ListPatientCommand#execute then calls NewModel#updateFilteredDoctorList/updateFilteredPatientList with the predicate PREDICATE_SHOW_ALL_DOCTORS/PREDICATE_SHOW_ALL_PATIENTS.","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"kimshitong"},"content":"* The FilteredDoctorList/FilteredPatientList is updated to show all doctors/patient by calling ObservableList#setPredicate.","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"kimshitong"},"content":"Step 3: A CommandResult object is created with a message indicating success, and this result is returned to the Ui to be displayed to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"kimshitong"},"content":"**UML Diagrams**","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"kimshitong"},"content":"1. Sequence Diagram","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"kimshitong"},"content":"The following sequence diagram shows how the list doctor operation would work:","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"kimshitong"},"content":"![ListDoctorSequence](images/ListDoctorSequence.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"kimshitong"},"content":"The following sequence diagram shows how the list patient operation would work:","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"kimshitong"},"content":"![ListPatientSequence](images/ListPatientSequence.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"kimshitong"},"content":"The following activity diagram summarizes what happens when a user wants to list a new patient/doctor:","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"kimshitong"},"content":"![ListCommandActivity](images/ListCommandActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"kimshitong"},"content":"### List Appointments","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"kimshitong"},"content":"**Introduction**","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"kimshitong"},"content":"This section describes the feature that allows users to list appointments in the MediConnect database. Users can either list all appointments or filter them based on the NRIC of doctors or patients.","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"kimshitong"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"kimshitong"},"content":"The listing of appointments in MediConnect is facilitated by the NewLogicManager, which implements the NewLogic interface. It holds a NewAddressBookParser that parses the user input, and a NewModel where the command is executed. Key methods involved include:","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"kimshitong"},"content":"NewLogicManager#execute() — Executes the given user String input and returns a CommandResult.","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"kimshitong"},"content":"ListAppointmentCommandParser#parse() — Parses the user input to create a ListAppointmentCommand.","lastModifiedDate":"2023-10-26"},{"lineNumber":305,"author":{"gitId":"kimshitong"},"content":"ListAppointmentCommand#execute() — Filters the list of appointments based on the given predicate.","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"kimshitong"},"content":"These operations are exposed in the UI interface as Ui#executeCommand().","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"kimshitong"},"content":"Here\u0027s how the ListAppointmentCommand mechanism behaves at each step:","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"kimshitong"},"content":"Step 1: The user inputs list_a to list all appointments or list_a pic\\PATIENT_NRIC dic\\DOCTOR_NRIC to filter appointments.","lastModifiedDate":"2023-10-26"},{"lineNumber":312,"author":{"gitId":"kimshitong"},"content":"* The list_a command triggers NewAddressBookParser#parseCommand, which identifies the command word and calls ListAppointmentCommandParser#parse to handle the arguments.","lastModifiedDate":"2023-10-26"},{"lineNumber":313,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":314,"author":{"gitId":"kimshitong"},"content":"Step 2: The ListAppointmentCommandParser#parse method checks for the presence of optional flags like -dic for doctor NRIC and -pic for patient NRIC. Based on these, it creates appropriate Predicate objects.","lastModifiedDate":"2023-10-26"},{"lineNumber":315,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":316,"author":{"gitId":"kimshitong"},"content":"Step 3: A new ListAppointmentCommand instance is created using the Predicate object(s).","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"kimshitong"},"content":"Step 4: The created ListAppointmentCommand instance is returned to NewLogicManager, and its execute method is called.","lastModifiedDate":"2023-10-26"},{"lineNumber":319,"author":{"gitId":"kimshitong"},"content":"* ListAppointmentCommand#execute filters the list of appointments in NewModel using the specified predicate(s).","lastModifiedDate":"2023-10-26"},{"lineNumber":320,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":321,"author":{"gitId":"kimshitong"},"content":"Step 5: The filtered list is displayed to the user through the UI.","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"kimshitong"},"content":"**UML Diagrams**","lastModifiedDate":"2023-10-26"},{"lineNumber":324,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":325,"author":{"gitId":"kimshitong"},"content":"The following sequence diagram shows how the list appointment operation would work:","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"kimshitong"},"content":"![ListPatientSequence](images/ListAppointmentSequence.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":327,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":328,"author":{"gitId":"kimshitong"},"content":"The following activity diagram summarizes what happens when a user wants to list a new appointment:","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"kimshitong"},"content":"![ListCommandActivity](images/ListAppointmentCommandActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":330,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":331,"author":{"gitId":"mounilsankar"},"content":"### Add appointmennt/doctor/patient feature","lastModifiedDate":"2023-10-25"},{"lineNumber":332,"author":{"gitId":"mounilsankar"},"content":"This section describes the add appointment/doctor/patient features.","lastModifiedDate":"2023-10-25"},{"lineNumber":333,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":334,"author":{"gitId":"mounilsankar"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":335,"author":{"gitId":"mounilsankar"},"content":"The adding of an appointment/doctor/patient to MediConnect is facilitated by \u0027LogicManager\u0027. It extends \u0027Logic\u0027 and stores the mediConnectParser that parses the user input, and the model in which the command is executed. Additionally it implements the following operations:","lastModifiedDate":"2023-10-25"},{"lineNumber":336,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":337,"author":{"gitId":"mounilsankar"},"content":"* `LogicManager#execute()` —  Executes the given user String input and returns a \u0027CommandResult\u0027","lastModifiedDate":"2023-10-25"},{"lineNumber":338,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":339,"author":{"gitId":"mounilsankar"},"content":"These operations are exposed in the `Ui` interface as `Ui#executeCommand()`.","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":341,"author":{"gitId":"mounilsankar"},"content":"Given below is an example usage scenario and how the add `Appointment` mechanism behaves at each step.","lastModifiedDate":"2023-10-25"},{"lineNumber":342,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":343,"author":{"gitId":"mounilsankar"},"content":"Step 1. The user launches the application. The `Database` will be initialized with all data in the order that it was stored in.","lastModifiedDate":"2023-10-25"},{"lineNumber":344,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":345,"author":{"gitId":"mounilsankar"},"content":"Step 2. The user inputs `add_a pic\\T0123456J \\n dic\\S9876543F \\n from\\2023-12-01 07:30 \\n to\\2023-12-01 08:30` to add an appointment into MediConnect.","lastModifiedDate":"2023-10-25"},{"lineNumber":346,"author":{"gitId":"mounilsankar"},"content":"The `add_a` command calls `AddAppointmentCommandParser#parse` which parses the parameters that build the appointment to be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"mounilsankar"},"content":"A new `AddAppointmentCommand` instance will be created with the correct `Appointment` object to be added.","lastModifiedDate":"2023-10-25"},{"lineNumber":348,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":349,"author":{"gitId":"mounilsankar"},"content":"Step 3. The created `AddAppointmentCommand` instance is returned to `LogicManager` and its `execute` method is called.","lastModifiedDate":"2023-10-25"},{"lineNumber":350,"author":{"gitId":"mounilsankar"},"content":"`AddAppointmentCommand#execute` then calls `Model#addAppointment` and with the given `Appointment`.","lastModifiedDate":"2023-10-25"},{"lineNumber":351,"author":{"gitId":"mounilsankar"},"content":"The `Appointment` is then added to the filteredAppointmentList by calling `FilteredList#addAppointment`.","lastModifiedDate":"2023-10-25"},{"lineNumber":352,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":353,"author":{"gitId":"mounilsankar"},"content":"The example usage scenario for the add patient and add doctor mechanisms would be very similar to the above scenario.","lastModifiedDate":"2023-10-25"},{"lineNumber":354,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":355,"author":{"gitId":"mounilsankar"},"content":"The following sequence diagram shows how the add appointment operation would work:","lastModifiedDate":"2023-10-25"},{"lineNumber":356,"author":{"gitId":"mounilsankar"},"content":"![AddAppoointmentSequenceDiagram](images/AddAppointmentSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":358,"author":{"gitId":"mounilsankar"},"content":"The following sequence diagram shows how the add doctor operation would work:","lastModifiedDate":"2023-10-25"},{"lineNumber":359,"author":{"gitId":"mounilsankar"},"content":"![AddDoctorSequenceDiagram](images/AddDoctorSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":360,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":361,"author":{"gitId":"mounilsankar"},"content":"The following sequence diagram shows how the add patient operation would work:","lastModifiedDate":"2023-10-25"},{"lineNumber":362,"author":{"gitId":"mounilsankar"},"content":"![AddPatientSequenceDiagram](images/AddPatientSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":363,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":364,"author":{"gitId":"mounilsankar"},"content":"The following activity diagram summarizes what happens when a user wants to add a new appointment/patient/doctor:","lastModifiedDate":"2023-10-25"},{"lineNumber":365,"author":{"gitId":"mounilsankar"},"content":"![AddXYZCommandActivityDiagram](images/AddXYZActivityDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":366,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":367,"author":{"gitId":"mounilsankar"},"content":"### Delete appointmennt/doctor/patient feature","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"mounilsankar"},"content":"This section describes the delete appointment/doctor/patient features.","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":370,"author":{"gitId":"mounilsankar"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"mounilsankar"},"content":"The deletion of an appointment/doctor/patient to MediConnect is facilitated by \u0027LogicManager\u0027. It extends \u0027Logic\u0027 and stores the mediConnectParser that parses the user input, and the model in which the command is executed. Additionally it implements the following operations:","lastModifiedDate":"2023-10-26"},{"lineNumber":372,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"mounilsankar"},"content":"* `LogicManager#execute()` —  Executes the given user String input and returns a \u0027CommandResult\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":375,"author":{"gitId":"mounilsankar"},"content":"These operations are exposed in the `Ui` interface as `Ui#executeCommand()`.","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":377,"author":{"gitId":"mounilsankar"},"content":"Given below is an example usage scenario and how the add `Appointment` mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":378,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":379,"author":{"gitId":"mounilsankar"},"content":"Step 1. The user launches the application. The `Database` will be initialized with all data in the order that it was stored in.","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":381,"author":{"gitId":"mounilsankar"},"content":"Step 2. The user inputs `list_a `. MediConnect will display the FilteredAppointmentList in its default sorting order.","lastModifiedDate":"2023-10-26"},{"lineNumber":382,"author":{"gitId":"mounilsankar"},"content":"Step 2. The user inputs `delete_a 2`  to delete an appointment into MediConnect.","lastModifiedDate":"2023-10-26"},{"lineNumber":383,"author":{"gitId":"mounilsankar"},"content":"The `delete_a` command calls `DeleteAppointmentCommandParser#parse` which parses the index argument which is the index of the appointment to delete","lastModifiedDate":"2023-10-26"},{"lineNumber":384,"author":{"gitId":"mounilsankar"},"content":"A new `DeleteAppointmentCommand` instance will be created","lastModifiedDate":"2023-10-26"},{"lineNumber":385,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"mounilsankar"},"content":"Step 3. The created `DeleteAppointmentCommand` instance is returned to `LogicManager` and its `execute` method is called.","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"mounilsankar"},"content":"`DeleteAppointmentCommand#execute` then calls `Model#deleteAppointment` and with the given `Index`.","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"mounilsankar"},"content":"The `Appointment` at the `Index` is then deleted from the filteredAppointmentList by calling `FilteredList#deleteAppointment`.","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":390,"author":{"gitId":"mounilsankar"},"content":"The example usage scenario for the delete patient and delete doctor mechanisms would be very similar to the above scenario.","lastModifiedDate":"2023-10-26"},{"lineNumber":391,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":392,"author":{"gitId":"mounilsankar"},"content":"The following sequence diagram shows how the delete appointment operation would work:","lastModifiedDate":"2023-10-26"},{"lineNumber":393,"author":{"gitId":"mounilsankar"},"content":"![DeleteAppointmentSequenceDiagram](images/DeleteAppointmentSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":394,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":395,"author":{"gitId":"mounilsankar"},"content":"The following sequence diagram shows how the delete doctor operation would work:","lastModifiedDate":"2023-10-26"},{"lineNumber":396,"author":{"gitId":"mounilsankar"},"content":"![DeleteAppointmentSequenceDiagram](images/DeleteDoctorSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":397,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":398,"author":{"gitId":"mounilsankar"},"content":"The following sequence diagram shows how the delete patient operation would work:","lastModifiedDate":"2023-10-26"},{"lineNumber":399,"author":{"gitId":"mounilsankar"},"content":"![DeleteAppointmentSequenceDiagram](images/DeletePatientSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":401,"author":{"gitId":"mounilsankar"},"content":"The following activity diagram summarizes what happens when a user wants to delete an appointment/patient/doctor:","lastModifiedDate":"2023-10-26"},{"lineNumber":402,"author":{"gitId":"mounilsankar"},"content":"![DeleteXYZCommandActivityDiagram](images/DeleteXYZActivityDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":403,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":404,"author":{"gitId":"yanghengtang"},"content":"### \\[Proposed\\] View Appointment / Doctor / Patient feature","lastModifiedDate":"2023-10-24"},{"lineNumber":405,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":406,"author":{"gitId":"yanghengtang"},"content":"#### Proposed implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":407,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":408,"author":{"gitId":"yanghengtang"},"content":"The proposed View Patient mechanism is facilitated by `ModelManager`. It extends `Model` and stores the appointment, doctor","lastModifiedDate":"2023-10-24"},{"lineNumber":409,"author":{"gitId":"yanghengtang"},"content":"and patient to be shown as `selectedPatient`, `selectedPatient` and `selectedPatient` respectively. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-24"},{"lineNumber":410,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":411,"author":{"gitId":"yanghengtang"},"content":"- `ModelManager#getSelectedAppointment()`  —  Returns the Appointment currently selected in the Model.","lastModifiedDate":"2023-10-24"},{"lineNumber":412,"author":{"gitId":"yanghengtang"},"content":"- `ModelManager#updateSelectedAppointment()`  —  Sets the selected Appointment currently in the Model.","lastModifiedDate":"2023-10-24"},{"lineNumber":413,"author":{"gitId":"yanghengtang"},"content":"- `ModelManager#getSelectedDoctor()`  —  Returns the Doctor currently selected in the Model.","lastModifiedDate":"2023-10-24"},{"lineNumber":414,"author":{"gitId":"yanghengtang"},"content":"- `ModelManager#updateSelectedDoctor()`  —  Sets the selected Doctor currently in the Model.","lastModifiedDate":"2023-10-24"},{"lineNumber":415,"author":{"gitId":"yanghengtang"},"content":"- `ModelManager#getSelectedPatient()`  —  Returns the Patient currently selected in the Model.","lastModifiedDate":"2023-10-24"},{"lineNumber":416,"author":{"gitId":"yanghengtang"},"content":"- `ModelManager#updateSelectedPatient()`  —  Sets the selected Patient currently in the Model.","lastModifiedDate":"2023-10-24"},{"lineNumber":417,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":418,"author":{"gitId":"yanghengtang"},"content":"The getter operations are exposed in the `Logic` interface as `Logic#getSelectedAppointment()`, `Logic#getSelectedDoctor()` and `Logic#getSelectedPatient()`.","lastModifiedDate":"2023-10-24"},{"lineNumber":419,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":420,"author":{"gitId":"yanghengtang"},"content":"It is also facilitated by `AppointmentWindow`, `DoctorWindow` and `PatientWindow` which extend `UiPart`. They are stored in the `MainWindow` and implements the following operations:","lastModifiedDate":"2023-10-24"},{"lineNumber":421,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":422,"author":{"gitId":"yanghengtang"},"content":"- `AppointmentWindow#updateAppointment()`  —  Sets the Appointment to be shown in the window.","lastModifiedDate":"2023-10-24"},{"lineNumber":423,"author":{"gitId":"yanghengtang"},"content":"- `AppointmentWindow#show()`  —  Displays the Appointment Window.","lastModifiedDate":"2023-10-24"},{"lineNumber":424,"author":{"gitId":"yanghengtang"},"content":"- `AppointmentWindow#focus()`  —  Toggles to the Appointment Window.","lastModifiedDate":"2023-10-24"},{"lineNumber":425,"author":{"gitId":"yanghengtang"},"content":"- `DoctorWindow#updatePatient()`  —  Sets the Doctor to be shown in the window.","lastModifiedDate":"2023-10-24"},{"lineNumber":426,"author":{"gitId":"yanghengtang"},"content":"- `DoctorWindow#show()`  —  Displays the Doctor Window.","lastModifiedDate":"2023-10-24"},{"lineNumber":427,"author":{"gitId":"yanghengtang"},"content":"- `DoctorWindow#focus()`  —  Toggles to the Doctor Window.","lastModifiedDate":"2023-10-24"},{"lineNumber":428,"author":{"gitId":"yanghengtang"},"content":"- `PatientWindow#updatePatient()`  —  Sets the Patient to be shown in the window.","lastModifiedDate":"2023-10-24"},{"lineNumber":429,"author":{"gitId":"yanghengtang"},"content":"- `PatientWindow#show()`  —  Displays the Patient Window.","lastModifiedDate":"2023-10-24"},{"lineNumber":430,"author":{"gitId":"yanghengtang"},"content":"- `PatientWindow#focus()`  —  Toggles to the Patient Window.","lastModifiedDate":"2023-10-24"},{"lineNumber":431,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":432,"author":{"gitId":"yanghengtang"},"content":"Lastly, it is also facilitated by `CommandResult` which stores the boolean value `showAppointment`, `showDoctor` and `showPatient` and implement the following operations:","lastModifiedDate":"2023-10-26"},{"lineNumber":433,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":434,"author":{"gitId":"yanghengtang"},"content":"- `CommandResult#isShowAppointment()`  —  Indicates if the command is View Appointment","lastModifiedDate":"2023-10-26"},{"lineNumber":435,"author":{"gitId":"yanghengtang"},"content":"- `CommandResult#isShowDoctor()`  —  Indicates if the command is View Doctor","lastModifiedDate":"2023-10-26"},{"lineNumber":436,"author":{"gitId":"yanghengtang"},"content":"- `CommandResult#isShowPatient()`  —  Indicates if the command is View Patient","lastModifiedDate":"2023-10-26"},{"lineNumber":437,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":438,"author":{"gitId":"yanghengtang"},"content":"Given below is an example usage scenario and how the View Patient mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":439,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":440,"author":{"gitId":"yanghengtang"},"content":"Step 1: The user launches the application for the first time. `selectedAppointment`, `selectedDoctor` and `selectedPatient` has not been initialised and `AppointmentWindow`, `DoctorWindow` and `PatientWindow` are closed by default.","lastModifiedDate":"2023-10-26"},{"lineNumber":441,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":442,"author":{"gitId":"yanghengtang"},"content":"Step 2: The user executes `view_p 2` command to view the 2nd patient in the patient list. The `view` command calls `ModelManager#getSelectedPatient()`, causing the `selectedPatient` to be initialised the 2nd patient in the patient list.","lastModifiedDate":"2023-10-26"},{"lineNumber":443,"author":{"gitId":"yanghengtang"},"content":"The `CommandResult` returned will call `PatientWindow#updatePatient()` followed by `PatientWindow#show()`, launching the `PatientWindow` with the details of the 2nd patient.","lastModifiedDate":"2023-10-26"},{"lineNumber":444,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":445,"author":{"gitId":"yanghengtang"},"content":"Step 3: The user toggle back to the main window and executes `view_p 4` command to view the 4th patient in the patient list. The `view` command calls `ModelManager#getSelectedPatient()`, causing the `selectedPatient` to be updated with the 4th patient in the patient list.","lastModifiedDate":"2023-10-26"},{"lineNumber":446,"author":{"gitId":"yanghengtang"},"content":"The `CommandResult` returned will call `PatientWindow#updatePatient()` followed by `PatientWindow#focus()`, toggling to the `PatientWindow` with the details of the 4th patient.","lastModifiedDate":"2023-10-26"},{"lineNumber":447,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":448,"author":{"gitId":"yanghengtang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":449,"author":{"gitId":"yanghengtang"},"content":"    :information_source: **Note:** If the user decides to close the Patient Window before executing the command, `PatientWindow#focus()` will not be invoked, instead it will invoke `PatientWindow#show()` similar to Step 2.","lastModifiedDate":"2023-10-26"},{"lineNumber":450,"author":{"gitId":"yanghengtang"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":451,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":452,"author":{"gitId":"yanghengtang"},"content":"The View Doctor and View Appointment mechanism would function similarly by utilising on their respective filtered lists, methods and windows.","lastModifiedDate":"2023-10-26"},{"lineNumber":453,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":454,"author":{"gitId":"yanghengtang"},"content":"The following sequence diagram shows how the View Patient command is executed in the `Logic`:","lastModifiedDate":"2023-10-26"},{"lineNumber":455,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":456,"author":{"gitId":"yanghengtang"},"content":"![ViewPatientLogicSequenceDiagram](images/ViewPatientLogicSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":457,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":458,"author":{"gitId":"yanghengtang"},"content":"The sequence diagram for View Appointment and View Doctor would be similar.","lastModifiedDate":"2023-10-26"},{"lineNumber":459,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":460,"author":{"gitId":"yanghengtang"},"content":"The following sequence diagram shows how the View Patient command results is handled in the `Ui`:","lastModifiedDate":"2023-10-24"},{"lineNumber":461,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":462,"author":{"gitId":"yanghengtang"},"content":"![ViewPatientUiSequenceDiagram](images/ViewPatientUiSequenceDiagram.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":463,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":464,"author":{"gitId":"yanghengtang"},"content":"The sequence diagram for View Appointment and View Doctor would be similar.","lastModifiedDate":"2023-10-24"},{"lineNumber":465,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":466,"author":{"gitId":"yanghengtang"},"content":"The following activity diagram summarizes what happens when a user executes a new view command:","lastModifiedDate":"2023-10-26"},{"lineNumber":467,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":468,"author":{"gitId":"yanghengtang"},"content":"![ViewActivityDiagram](images/ViewActivityDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":469,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":470,"author":{"gitId":"yanghengtang"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-24"},{"lineNumber":471,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":472,"author":{"gitId":"yanghengtang"},"content":"**Aspect: How view appointment / doctor / patient executes:**","lastModifiedDate":"2023-10-26"},{"lineNumber":473,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":474,"author":{"gitId":"yanghengtang"},"content":"* **Alternative 1 (current choice):** Store the selected Patient in the model and retrieve on `CommandResult` instruction.","lastModifiedDate":"2023-10-24"},{"lineNumber":475,"author":{"gitId":"yanghengtang"},"content":"    * Pros: Straight forward to implement.","lastModifiedDate":"2023-10-24"},{"lineNumber":476,"author":{"gitId":"yanghengtang"},"content":"    * Cons: Requires extensive additions to the `Model` and `Logic` interface.","lastModifiedDate":"2023-10-24"},{"lineNumber":477,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":478,"author":{"gitId":"yanghengtang"},"content":"* **Alternative 2:** Store selected Patient in `CommandResult` and retrieve directly from there.","lastModifiedDate":"2023-10-24"},{"lineNumber":479,"author":{"gitId":"yanghengtang"},"content":"    * Pros: No changes to the `Model` and `Logic` interface required.","lastModifiedDate":"2023-10-24"},{"lineNumber":480,"author":{"gitId":"yanghengtang"},"content":"    * Cons: Reduces `CommandResult` cohesiveness as it will now have the responsibility of passing the selected Patient to the Ui.","lastModifiedDate":"2023-10-24"},{"lineNumber":481,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":482,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":483,"author":{"gitId":"cheeggered"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2023-10-27"},{"lineNumber":484,"author":{"gitId":"cheeggered"},"content":"#### Proposed implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":486,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"derekjxtan"},"content":"### \\[Proposed\\] sort feature","lastModifiedDate":"2023-10-24"},{"lineNumber":567,"author":{"gitId":"derekjxtan"},"content":"The proposed sorting feature","lastModifiedDate":"2023-10-24"},{"lineNumber":568,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":569,"author":{"gitId":"derekjxtan"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":570,"author":{"gitId":"derekjxtan"},"content":"The proposed sorting mechanism is facilitated by implementing a `Comparator` for every sortable field to sort the `UnmodifiableList`.","lastModifiedDate":"2023-10-24"},{"lineNumber":571,"author":{"gitId":"derekjxtan"},"content":"The `Comparator`s will be stored as public static final variables within a helper class `Comparators`.","lastModifiedDate":"2023-10-24"},{"lineNumber":572,"author":{"gitId":"derekjxtan"},"content":"This will require all sortable fields to implement the `Comparable` interface, and have a concrete implementation of the `compareTo` method to have a predetermined ordering.","lastModifiedDate":"2023-10-24"},{"lineNumber":573,"author":{"gitId":"derekjxtan"},"content":"`ListAppointCommand`, `ListDoctorCommand`, and `ListPatientCommand` will have an additional attribute `comparator` to store the selected `Comparator`.","lastModifiedDate":"2023-10-24"},{"lineNumber":574,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":575,"author":{"gitId":"derekjxtan"},"content":"The updated class diagrams for the models following the changes are as follows:","lastModifiedDate":"2023-10-24"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":577,"author":{"gitId":"derekjxtan"},"content":"![SortModelClassDiagram](images/SortModelClassDiagram.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":578,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":579,"author":{"gitId":"derekjxtan"},"content":"Given below is an example usage scenario on how the sort mechanism behaves at each step.","lastModifiedDate":"2023-10-24"},{"lineNumber":580,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":581,"author":{"gitId":"derekjxtan"},"content":"Step 1. The user launches the application. The `Database` will be initialized with all data in the order that it was stored in.","lastModifiedDate":"2023-10-24"},{"lineNumber":582,"author":{"gitId":"derekjxtan"},"content":"todo: insert diagram","lastModifiedDate":"2023-10-24"},{"lineNumber":583,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":584,"author":{"gitId":"derekjxtan"},"content":"Step 2. The user executes `list_a s\\start o\\asc` to sort the patients in ascending order by name.","lastModifiedDate":"2023-10-24"},{"lineNumber":585,"author":{"gitId":"derekjxtan"},"content":"The `list_a` command calls `ListAppointmentCommandParser#parse` which parses the parameters to sort the list by.","lastModifiedDate":"2023-10-24"},{"lineNumber":586,"author":{"gitId":"derekjxtan"},"content":"A new `ListAppointmentCommand` instance will be created with the correct `Predicate` and `Comparator`.","lastModifiedDate":"2023-10-24"},{"lineNumber":587,"author":{"gitId":"derekjxtan"},"content":"If no parameters for the sorting order is provided, the `Comparator` with the default field to sort by and order will be selected instead.","lastModifiedDate":"2023-10-24"},{"lineNumber":588,"author":{"gitId":"derekjxtan"},"content":"todo: insert diagram","lastModifiedDate":"2023-10-24"},{"lineNumber":589,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":590,"author":{"gitId":"derekjxtan"},"content":"Step 3. The created `ListAppointmentCommand` instance is returned to `LogicManager` and its `execute` method is called.","lastModifiedDate":"2023-10-24"},{"lineNumber":591,"author":{"gitId":"derekjxtan"},"content":"`ListAppointmentCommand#execute` then calls `Model#updateFilterAppointmentList` and with the given `Predicate` and `Comparator`.","lastModifiedDate":"2023-10-24"},{"lineNumber":592,"author":{"gitId":"derekjxtan"},"content":"The `Predicate` is used to filter the filteredAppointmentList by calling `FilteredList#setPredicate` and sorted by calling `FilteredList#sort` with the `Comparator`.","lastModifiedDate":"2023-10-24"},{"lineNumber":593,"author":{"gitId":"derekjxtan"},"content":"todo: insert diagram","lastModifiedDate":"2023-10-24"},{"lineNumber":594,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":595,"author":{"gitId":"derekjxtan"},"content":"The following sequence diagram shows how the sort operation work:","lastModifiedDate":"2023-10-24"},{"lineNumber":596,"author":{"gitId":"derekjxtan"},"content":"![SortSequenceDiagram](images/SortSequenceDiagram.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":597,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":598,"author":{"gitId":"derekjxtan"},"content":"The sort doctor and sort patient functionality works in a similar manner. It selects the relevant `Comparator`, constructs the `ListDoctorCommand`/`ListPatientCommand`,","lastModifiedDate":"2023-10-24"},{"lineNumber":599,"author":{"gitId":"derekjxtan"},"content":"and sorts the corresponding `FilteredList` within `Database`.","lastModifiedDate":"2023-10-24"},{"lineNumber":600,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":601,"author":{"gitId":"derekjxtan"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-24"},{"lineNumber":602,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":603,"author":{"gitId":"derekjxtan"},"content":"\u003cimg src\u003d\"images/SortActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":604,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":605,"author":{"gitId":"derekjxtan"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-24"},{"lineNumber":606,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":607,"author":{"gitId":"derekjxtan"},"content":"**Aspect: How to sort the filteredLists in Database:**","lastModifiedDate":"2023-10-24"},{"lineNumber":608,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":609,"author":{"gitId":"derekjxtan"},"content":"* **Alternative 1 (current choice):** Create multiple `Comparator`s and select them accordingly.","lastModifiedDate":"2023-10-24"},{"lineNumber":610,"author":{"gitId":"derekjxtan"},"content":"    * Pros: Allows multiple ways of sorting the lists of items based on various attribute.","lastModifiedDate":"2023-10-24"},{"lineNumber":611,"author":{"gitId":"derekjxtan"},"content":"    * Cons: Requires multiple `Comparator` to be implemented, requires code changes on the client\u0027s side.","lastModifiedDate":"2023-10-24"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"derekjxtan"},"content":"* **Alternative 2:** Let `Patient`, `Doctor`, and `Appointment` implement `Comparable` interface.","lastModifiedDate":"2023-10-24"},{"lineNumber":614,"author":{"gitId":"derekjxtan"},"content":"    * Pros: Easy to implement, works with `Arrays.sort()` and `Collection.sort()`.","lastModifiedDate":"2023-10-24"},{"lineNumber":615,"author":{"gitId":"derekjxtan"},"content":"    * Cons: There can only be 1 way to sort `Patient`, `Doctor`, and `Appointment`.","lastModifiedDate":"2023-10-24"},{"lineNumber":616,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":621,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":622,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":623,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":624,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"derekjxtan"},"content":"* has a need to manage a significant number of patients and doctors","lastModifiedDate":"2023-10-04"},{"lineNumber":635,"author":{"gitId":"derekjxtan"},"content":"* has a need to manage appointments between the patients and doctors","lastModifiedDate":"2023-10-04"},{"lineNumber":636,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":639,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"derekjxtan"},"content":"**Value proposition**:","lastModifiedDate":"2023-10-04"},{"lineNumber":642,"author":{"gitId":"derekjxtan"},"content":"* provides easy storage and management of patients\u0027 and doctors\u0027 profiles","lastModifiedDate":"2023-10-04"},{"lineNumber":643,"author":{"gitId":"derekjxtan"},"content":"* provides convenient management of appointments of doctors and patients","lastModifiedDate":"2023-10-04"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"kimshitong"},"content":"Priorities: High (Must-Have) - * * *, Medium (Good-To-Have) - * *, Low (To-Forgo) - *","lastModifiedDate":"2023-10-05"},{"lineNumber":649,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":650,"author":{"gitId":"kimshitong"},"content":"| Priority  | As a … | I want to …                                                                                                                    | So that I can…                                                                               |","lastModifiedDate":"2023-10-06"},{"lineNumber":651,"author":{"gitId":"kimshitong"},"content":"|-----------|--------|--------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-06"},{"lineNumber":652,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | add patient\u0027s data into the system                                                                                             | ensure the system will have a record of a new or existing patient.                           |","lastModifiedDate":"2023-10-06"},{"lineNumber":653,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | edit a patient\u0027s data in the system                                                                                            | modify or update when the patients record has changes.                                       |","lastModifiedDate":"2023-10-06"},{"lineNumber":654,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | view list of patients in the system                                                                                            | easily verify their identity.                                                                |","lastModifiedDate":"2023-10-06"},{"lineNumber":655,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | delete patients\u0027 profile from the system                                                                                       | ensure the system only contains current patients of UHC.                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":656,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | add doctor profile into the system                                                                                             | ensure the system keep tracks of all the doctor working at UHC.                              |","lastModifiedDate":"2023-10-05"},{"lineNumber":657,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | view list of doctor profiles in the system                                                                                     | assign the patient to a suitable doctor accordingly.                                         |","lastModifiedDate":"2023-10-06"},{"lineNumber":658,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | delete doctor profile from the system                                                                                          | ensure the system only contains doctor that is still working in UHC.                         |","lastModifiedDate":"2023-10-05"},{"lineNumber":659,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | add an appointment in the system                                                                                               | ensure the system has a record of this appointment.                                          |","lastModifiedDate":"2023-10-06"},{"lineNumber":660,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | view list of appointment in the system                                                                                         | see the information of the appointment.                                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":661,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | delete an appointment from the system                                                                                          | ensure appointment that has been postponed or cancelled will not be reflected in the system. |","lastModifiedDate":"2023-10-06"},{"lineNumber":662,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | easily locate available time slots for emergency appointments                                                                  | ensure that urgent cases are seen promptly                                                   |","lastModifiedDate":"2023-10-06"},{"lineNumber":663,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | generate a summary of upcoming appointments for patients                                                                       | ensure they receive reminders and stay well-prepared for their scheduled appointments        |","lastModifiedDate":"2023-10-06"},{"lineNumber":664,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | view a patient\u0027s medical profile and medical histories                                                                         | more efficiently match patients with the right doctor.                                       |","lastModifiedDate":"2023-10-06"},{"lineNumber":665,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | quickly view emergency contact information of patients                                                                         | provide useful information in the event of an emergency                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":666,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | update treatment plans for patients                                                                                            | ensure they receive the most up-to-date and effective care.                                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":667,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | view patients who have appointments on any day                                                                                 | know who will be coming.                                                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":668,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | quickly locate and retrieve patient records by their names or dates of birth                                                   | streamline the check-in process and reducing wait times                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":669,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | compile a concise daily or monthly appointment schedule                                                                        | enable me to prepare in advance and know my patients in advance                              |","lastModifiedDate":"2023-10-06"},{"lineNumber":670,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | provide doctors information about a patient\u0027s dietary restrictions and preferences                                             | provide tailored dietary advice during their appointments.                                   |","lastModifiedDate":"2023-10-06"},{"lineNumber":671,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | easily navigate on the application                                                                                             | use it more efficiently.                                                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":672,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | provide patients with detailed information about required pre-appointment preparations (e.g., fasting, medication adjustments) | ensure a smooth and successful visit.                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":673,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | schedule recurring appointments for patients with ongoing treatment plans                                                      | ensure that staff and patients do not need to repeatedly book appointments in the system.    |","lastModifiedDate":"2023-10-06"},{"lineNumber":674,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | generate reports summarizing the number of patient appointments for a specific month                                           | better resource allocation and planning.                                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":675,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | view patient consent forms and treatment waivers                                                                               | ensure legal compliance and patient safety.                                                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":676,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | provide patients with secure access to their medical records and appointment histories                                         | promote transparency and patient engagement.                                                 |","lastModifiedDate":"2023-10-06"},{"lineNumber":677,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | use the system to track and manage the inventory of medical supplies                                                           | ensure what we have what we need for patient care.                                           |","lastModifiedDate":"2023-10-06"},{"lineNumber":678,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | easily transfer patient records to other healthcare facilities or specialists                                                  | ensure there is seamless continuity of care                                                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":679,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | efficiently enter patient check-ins and check-outs                                                                             | keep track of waiting times.                                                                 |","lastModifiedDate":"2023-10-06"},{"lineNumber":680,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | set up automated appointment confirmation messages for patients                                                                | reduce the need for manual confirmation calls.                                               |","lastModifiedDate":"2023-10-06"},{"lineNumber":681,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | add payments for each patient                                                                                                  | streamline the payment process and also reducing administrative errors.                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":682,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | close payments for each patient                                                                                                | streamline the payment process and also reducing administrative errors.                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":683,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | view the prescribed medicine for the patient\u0027s latest appointment                                                              | dispense the appropriate medicine.                                                           |","lastModifiedDate":"2023-10-06"},{"lineNumber":684,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | view all outstanding bills of each patient to advise                                                                           | let patients are aware of their financial obligations and can plan accordingly.              |","lastModifiedDate":"2023-10-06"},{"lineNumber":685,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | securely transmit patient invoices and billing information to the finance department                                           | streamline the billing process                                                               |","lastModifiedDate":"2023-10-06"},{"lineNumber":686,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | update patient consent forms and privacy policies                                                                              | let patients review and sign electronically                                                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":687,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | customize appointment reminder messages                                                                                        | cater to patients\u0027 preferred communication methods (email, SMS, phone call)                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"mounilsankar"},"content":"(For all use cases below, the **System** is the `MediConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-04"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC01 View all patients’ records**","lastModifiedDate":"2023-10-04"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to view all patients’ records.","lastModifiedDate":"2023-10-04"},{"lineNumber":701,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect shows the patients’ records.","lastModifiedDate":"2023-10-04"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":708,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":709,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":710,"author":{"gitId":"mounilsankar"},"content":"      ","lastModifiedDate":"2023-10-05"},{"lineNumber":711,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":713,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC02 View a patient\u0027s records**","lastModifiedDate":"2023-10-04"},{"lineNumber":714,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":715,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":716,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":717,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to view a patient\u0027s records.","lastModifiedDate":"2023-10-04"},{"lineNumber":718,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect shows the patient’s record.","lastModifiedDate":"2023-10-04"},{"lineNumber":719,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":720,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":721,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":722,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":723,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":724,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":725,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":726,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":727,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":728,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":729,"author":{"gitId":"mounilsankar"},"content":"* 1b. The patient does not exist in the system.","lastModifiedDate":"2023-10-04"},{"lineNumber":730,"author":{"gitId":"mounilsankar"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":731,"author":{"gitId":"mounilsankar"},"content":"    ","lastModifiedDate":"2023-10-04"},{"lineNumber":732,"author":{"gitId":"mounilsankar"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":733,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":734,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC03 Add a patient**","lastModifiedDate":"2023-10-04"},{"lineNumber":735,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":736,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":737,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":738,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to add a specific patient to the list","lastModifiedDate":"2023-10-04"},{"lineNumber":739,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect adds the specific patient to the list ","lastModifiedDate":"2023-10-05"},{"lineNumber":740,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":741,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":742,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":743,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":745,"author":{"gitId":"mounilsankar"},"content":"* 1a.MediConnect detects that the arguments provided to add a patient is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":746,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.    ","lastModifiedDate":"2023-10-04"},{"lineNumber":747,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":749,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":750,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":751,"author":{"gitId":"mounilsankar"},"content":"* 1b. MediConnect detects that patient to be added already exists in the system","lastModifiedDate":"2023-10-04"},{"lineNumber":752,"author":{"gitId":"mounilsankar"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC04 Edit a patient’s details/notes**","lastModifiedDate":"2023-10-04"},{"lineNumber":758,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":759,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":760,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":761,"author":{"gitId":"mounilsankar"},"content":"1.  User edits a specific patient’s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":762,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect edits the patient’s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":763,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":764,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":765,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":766,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":767,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":768,"author":{"gitId":"mounilsankar"},"content":"* 1a.MediConnect detects that the arguments provided to edit a patient is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":769,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":770,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":771,"author":{"gitId":"mounilsankar"},"content":"   ","lastModifiedDate":"2023-10-04"},{"lineNumber":772,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":773,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":774,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC05 Delete a patient**","lastModifiedDate":"2023-10-04"},{"lineNumber":775,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":776,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":777,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":778,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to delete a specific patient in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":779,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect deletes the person.","lastModifiedDate":"2023-10-05"},{"lineNumber":780,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":781,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":782,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":783,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":784,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":785,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":786,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":787,"author":{"gitId":"mounilsankar"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":788,"author":{"gitId":"mounilsankar"},"content":"* 1b. MediConnect detects that the given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":789,"author":{"gitId":"mounilsankar"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":790,"author":{"gitId":"mounilsankar"},"content":"    * 1b2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC06 View all doctors’ records**","lastModifiedDate":"2023-10-04"},{"lineNumber":795,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":796,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":797,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":798,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to view all doctors’ records","lastModifiedDate":"2023-10-04"},{"lineNumber":799,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect shows the doctors’ record","lastModifiedDate":"2023-10-04"},{"lineNumber":800,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":801,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":802,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":803,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":804,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":805,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":806,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":807,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input. ","lastModifiedDate":"2023-10-05"},{"lineNumber":808,"author":{"gitId":"mounilsankar"},"content":"    ","lastModifiedDate":"2023-10-04"},{"lineNumber":809,"author":{"gitId":"mounilsankar"},"content":"       Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":810,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":811,"author":{"gitId":"cheeggered"},"content":"**Use case: UC07 View a doctor’s records**","lastModifiedDate":"2023-10-05"},{"lineNumber":812,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":813,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":814,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":815,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to view a doctor\u0027s records","lastModifiedDate":"2023-10-04"},{"lineNumber":816,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect shows the doctor’s record","lastModifiedDate":"2023-10-04"},{"lineNumber":817,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":818,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":819,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":820,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":821,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":822,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":823,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message. ","lastModifiedDate":"2023-10-04"},{"lineNumber":824,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":825,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":826,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":827,"author":{"gitId":"mounilsankar"},"content":"* 1b. MediConnect detects that the doctor does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":828,"author":{"gitId":"mounilsankar"},"content":"    * 1b1. MediConnect shows an error message. ","lastModifiedDate":"2023-10-04"},{"lineNumber":829,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":830,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":831,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":832,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC08 Add a doctor**","lastModifiedDate":"2023-10-04"},{"lineNumber":833,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":834,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":835,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":836,"author":{"gitId":"mounilsankar"},"content":"1. User requests to add a specific doctor to the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":837,"author":{"gitId":"mounilsankar"},"content":"2. MediConnect adds the specific doctor to the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":838,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":839,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":840,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":841,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":842,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":843,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the arguments provided to add a doctor is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":844,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":845,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input    ","lastModifiedDate":"2023-10-05"},{"lineNumber":846,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":847,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":848,"author":{"gitId":"mounilsankar"},"content":"* 1b. MediConnect detects that doctor to be added already exists in the system","lastModifiedDate":"2023-10-05"},{"lineNumber":849,"author":{"gitId":"mounilsankar"},"content":"   * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":850,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":851,"author":{"gitId":"mounilsankar"},"content":"     Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":852,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":853,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC09 Edit a doctor’s details/notes**","lastModifiedDate":"2023-10-04"},{"lineNumber":854,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":855,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":856,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":857,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to edit a specific doctor’s details.","lastModifiedDate":"2023-10-04"},{"lineNumber":858,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect edits the doctor’s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":859,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":860,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":861,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":862,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":863,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":864,"author":{"gitId":"mounilsankar"},"content":"* 1a.MediConnect detects that the arguments provided to edit a doctor is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":865,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":866,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":867,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":868,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":869,"author":{"gitId":"mounilsankar"},"content":"* 1b. MediConnect detects that doctor to be edited does not exist in the system","lastModifiedDate":"2023-10-04"},{"lineNumber":870,"author":{"gitId":"mounilsankar"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":871,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":872,"author":{"gitId":"mounilsankar"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":873,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":874,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC10 Delete a doctor**","lastModifiedDate":"2023-10-05"},{"lineNumber":875,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":876,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":877,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":878,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to delete a specific doctor in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":879,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect deletes the doctor.","lastModifiedDate":"2023-10-05"},{"lineNumber":880,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":881,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":882,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":883,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":884,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":885,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the given arguments to delete a doctor is invalid","lastModifiedDate":"2023-10-05"},{"lineNumber":886,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":887,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":888,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":889,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"cheeggered"},"content":"**Use case: UC11 View a patient’s upcoming appointments**","lastModifiedDate":"2023-10-05"},{"lineNumber":892,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":893,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":894,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":895,"author":{"gitId":"cheeggered"},"content":"1. User requests to view a patient’s upcoming appointments","lastModifiedDate":"2023-10-05"},{"lineNumber":896,"author":{"gitId":"cheeggered"},"content":"2. MediConnect shows the patient’s appointment list","lastModifiedDate":"2023-10-05"},{"lineNumber":897,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":898,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":899,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":900,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":901,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":902,"author":{"gitId":"cheeggered"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":903,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":904,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":905,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":906,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":907,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":908,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the patient does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":909,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":910,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":911,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":912,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":913,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":914,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":915,"author":{"gitId":"cheeggered"},"content":"**Use case: UC12 View a doctor’s upcoming appointments**","lastModifiedDate":"2023-10-05"},{"lineNumber":916,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":917,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":918,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":919,"author":{"gitId":"cheeggered"},"content":"1. User requests to view a doctor’s upcoming appointments.","lastModifiedDate":"2023-10-05"},{"lineNumber":920,"author":{"gitId":"cheeggered"},"content":"2. MediConnect shows the doctor’s appointment list.","lastModifiedDate":"2023-10-05"},{"lineNumber":921,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":922,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":923,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":924,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":925,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":926,"author":{"gitId":"cheeggered"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":927,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":928,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":929,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":930,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":931,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":932,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the doctor does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":933,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":934,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":935,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":936,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":937,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":938,"author":{"gitId":"cheeggered"},"content":"**Use case: UC13 Add an appointment between a patient and doctor**","lastModifiedDate":"2023-10-05"},{"lineNumber":939,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":940,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":941,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":942,"author":{"gitId":"cheeggered"},"content":"1. User requests to add a specific appointment between a patient and doctor.","lastModifiedDate":"2023-10-05"},{"lineNumber":943,"author":{"gitId":"cheeggered"},"content":"2. MediConnect adds the appointment to the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":944,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":945,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":946,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":947,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":948,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":949,"author":{"gitId":"cheeggered"},"content":"* 1a.MediConnect detects that the arguments provided to add an appointment is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":950,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":951,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":952,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":953,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":954,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":955,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the appointment to be added already exists in the system","lastModifiedDate":"2023-10-05"},{"lineNumber":956,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":957,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":958,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":960,"author":{"gitId":"cheeggered"},"content":"**Use case: UC14 Edit an appointment**","lastModifiedDate":"2023-10-05"},{"lineNumber":961,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":962,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":963,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":964,"author":{"gitId":"cheeggered"},"content":"1. User requests to edit an appointment.","lastModifiedDate":"2023-10-05"},{"lineNumber":965,"author":{"gitId":"cheeggered"},"content":"2. MediConnect edits the doctor’s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":966,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":967,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":968,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":969,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":970,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"cheeggered"},"content":"* 1a.MediConnect detects that the arguments provided to edit an appointment is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":972,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":973,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":974,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":975,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":976,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":977,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the appointment to be edited does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":978,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":979,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":980,"author":{"gitId":"cheeggered"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":981,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":982,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":983,"author":{"gitId":"cheeggered"},"content":"**Use case: UC15 Delete an appointment**","lastModifiedDate":"2023-10-05"},{"lineNumber":984,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":985,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":986,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":987,"author":{"gitId":"cheeggered"},"content":"1. User requests to delete an appointment in the list","lastModifiedDate":"2023-10-05"},{"lineNumber":988,"author":{"gitId":"cheeggered"},"content":"2. MediConnect deletes the appointment","lastModifiedDate":"2023-10-05"},{"lineNumber":989,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":990,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":991,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":992,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":993,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":994,"author":{"gitId":"cheeggered"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":995,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":996,"author":{"gitId":"cheeggered"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":997,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":998,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":999,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":1000,"author":{"gitId":"cheeggered"},"content":"    * 1b2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":1001,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1002,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1004,"author":{"gitId":"cheeggered"},"content":"**Use case: UC16 Find a doctor’s availabilities in a given timeframe**","lastModifiedDate":"2023-10-05"},{"lineNumber":1005,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1006,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":1007,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1008,"author":{"gitId":"cheeggered"},"content":"1. User requests to find a doctor’s availability in a given timeframe.","lastModifiedDate":"2023-10-05"},{"lineNumber":1009,"author":{"gitId":"cheeggered"},"content":"2. MediConnect shows the doctor’s availability.","lastModifiedDate":"2023-10-05"},{"lineNumber":1010,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1011,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":1012,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1013,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":1014,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1015,"author":{"gitId":"cheeggered"},"content":"* 1a.MediConnect detects that the given command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":1016,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":1017,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":1018,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1019,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1","lastModifiedDate":"2023-10-05"},{"lineNumber":1020,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1021,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the given doctor does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":1022,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":1023,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1024,"author":{"gitId":"cheeggered"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":1025,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1026,"author":{"gitId":"cheeggered"},"content":"**Use case: UC17 View a patient’s outstanding bills**","lastModifiedDate":"2023-10-05"},{"lineNumber":1027,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1028,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":1029,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1030,"author":{"gitId":"cheeggered"},"content":"1. User requests to view a patient’s bills.","lastModifiedDate":"2023-10-05"},{"lineNumber":1031,"author":{"gitId":"cheeggered"},"content":"2. MediConnect shows the patient’s bills.","lastModifiedDate":"2023-10-05"},{"lineNumber":1032,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1033,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":1034,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1035,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":1036,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1037,"author":{"gitId":"cheeggered"},"content":"* 1a.MediConnect detects that the given command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":1038,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":1039,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":1040,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1041,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1","lastModifiedDate":"2023-10-05"},{"lineNumber":1042,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1043,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the given patient does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":1044,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":1045,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1046,"author":{"gitId":"cheeggered"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":1047,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1048,"author":{"gitId":"cheeggered"},"content":"**Use case: UC18 Add an outstanding bill to a patient**","lastModifiedDate":"2023-10-05"},{"lineNumber":1049,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1050,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":1051,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1052,"author":{"gitId":"cheeggered"},"content":"1. User requests to add an outstanding bill to a patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":1053,"author":{"gitId":"cheeggered"},"content":"2. MediConnect adds the outstanding bill to the patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":1054,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1055,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":1056,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1057,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":1058,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1059,"author":{"gitId":"cheeggered"},"content":"* 1a.MediConnect detects that the given command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":1060,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":1061,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":1062,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1063,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1","lastModifiedDate":"2023-10-05"},{"lineNumber":1064,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1065,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the given patient does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":1066,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":1067,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1068,"author":{"gitId":"cheeggered"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":1069,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1070,"author":{"gitId":"cheeggered"},"content":"**Use case: UC19 Close an outstanding bill of a patient**","lastModifiedDate":"2023-10-05"},{"lineNumber":1071,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1072,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":1073,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1074,"author":{"gitId":"cheeggered"},"content":"1. User requests to list outstanding bills a patient has (UC17)","lastModifiedDate":"2023-10-05"},{"lineNumber":1075,"author":{"gitId":"cheeggered"},"content":"2. MediConnect shows the list of outstanding bills the patient has","lastModifiedDate":"2023-10-05"},{"lineNumber":1076,"author":{"gitId":"cheeggered"},"content":"3. User requests to close a specific bill in the list","lastModifiedDate":"2023-10-05"},{"lineNumber":1077,"author":{"gitId":"cheeggered"},"content":"4. MediConnect deletes the bill from the list","lastModifiedDate":"2023-10-05"},{"lineNumber":1078,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1079,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":1080,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1081,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":1082,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1083,"author":{"gitId":"cheeggered"},"content":"* 1a. MediConnect detects that the given patient is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":1084,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":1085,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":1086,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1087,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1","lastModifiedDate":"2023-10-05"},{"lineNumber":1088,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1089,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":1090,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1091,"author":{"gitId":"cheeggered"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":1092,"author":{"gitId":"cheeggered"},"content":"* 3a. MediConnect detects that the given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":1093,"author":{"gitId":"cheeggered"},"content":"    * 3a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":1094,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1095,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 2","lastModifiedDate":"2023-10-05"},{"lineNumber":1096,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1099,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1100,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1104,"author":{"gitId":"derekjxtan"},"content":"2. Should be able to handle at least 60,000 patients at any point of time.","lastModifiedDate":"2023-10-05"},{"lineNumber":1105,"author":{"gitId":"derekjxtan"},"content":"3. Should be able to add, view, edit and delete patients and doctors without a noticeable lag.","lastModifiedDate":"2023-10-05"},{"lineNumber":1106,"author":{"gitId":"derekjxtan"},"content":"4. Should be able to retrieve all appointments for a particular doctor or patient within 1 second.","lastModifiedDate":"2023-10-05"},{"lineNumber":1107,"author":{"gitId":"derekjxtan"},"content":"5. Should lose no more than 1-minute worth of data in case of system error. ","lastModifiedDate":"2023-10-05"},{"lineNumber":1108,"author":{"gitId":"derekjxtan"},"content":"6. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-05"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1114,"author":{"gitId":"derekjxtan"},"content":"* **Appointment**: A arranged meeting between a patient and a doctor at a particular date and time","lastModifiedDate":"2023-10-05"},{"lineNumber":1115,"author":{"gitId":"derekjxtan"},"content":"* **Doctor**: A person providing medical services at UHC","lastModifiedDate":"2023-10-05"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":1117,"author":{"gitId":"derekjxtan"},"content":"* **NRIC**: Identity card number of the National Registration Identity Card, used as the primary means of identification for patients and doctors in MediConnect","lastModifiedDate":"2023-10-05"},{"lineNumber":1118,"author":{"gitId":"derekjxtan"},"content":"* **Patient**: A person receiving medical services at UHC","lastModifiedDate":"2023-10-05"},{"lineNumber":1119,"author":{"gitId":"derekjxtan"},"content":"* **Receptionist**: A person handling administrative work at UHC, and is the target user of MediConnect","lastModifiedDate":"2023-10-05"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yanghengtang":78,"mounilsankar":249,"derekjxtan":63,"-":364,"cheeggered":263,"kimshitong":155}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"# MediConnect","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"Welcome to the User Guide of MediConnect!","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"## What is MediConnect?","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"MediConnect is a clinic management system (CMS) application designed to aid receptionist in a clinic om their day-to-day task.","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"These may include scheduling an appointment, retrieving a patient\u0027s medical history and updating the patient\u0027s medical record.","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"## Who is MediConnect for?","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"MediConnect is built for clinic receptionists and aims to help them to be more efficient and effective at accomplishing their administrative tasks.","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"## How can you get started?","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"If you are new to this guide, click [here](#introduction-to-this-user-guide) for a quick introduction to this user guide.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"If you are keen to get started on using MediConnect, click [here](#quick-start) for our quick start guide.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"# Table of Contents","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"* TOC","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"# Introduction to this user guide","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"This guide is designed for users of all level to master their use of MediConnect.","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"## Icons used in this guide","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"Here are some common icons that is used throughout this user guide","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"| Icons                          | Representation                                    |","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"|--------------------------------|---------------------------------------------------|","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"| :information_source:  **Note** | Provides you with additional useful information   |","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"| :exclamation: **Caution**      | Warns you on the common mistakes                  |","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"| :bulb: **Tip**                 | Provides you with tips to enhance your experience |","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"## Terms used in this guide","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"Here are some common terms that is used throughout this user guide","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"| Icons       | Representation                                                                 |","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"|-------------|--------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"| Command     | The instruction you enter into the application                                 |","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"| Parameter   | The additional information you provide for the instruction you intend to enter |","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"| Appointment | A scheduled medical consultation between the patient and the doctor            |","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"## Navigating this user guide","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"As this guide aims to be as comprehensive as possible, you might find the amount of information in this user guide to be overwhelming.","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"Fred not, you utilise the [Table of Content](#table-of-contents) to find the information your are looking for.","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"If you are new to MediConnect, you can head over to our [quick start](#quick-start) to learn the basics of this application.","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"If you are experienced with MediConnect, you can head over to view the list of [features](#features) or view the [command summary](#command-summary) to horne your MediConnect sklls.","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"return back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"# Quick start","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"## Installing MediConnect","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"1. Download the latest `mediconnect.jar` from [here](https://github.com/AY2324S1-CS2103T-T08-1/tp/releases).","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your MediConnect.","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar mediconnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"   * `list_a` : Lists all appointments.","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"   * `add_p n\\Joe Ng ic\\T0383462A p\\83745623` : Adds a patient named `Joe Ng` to the list of Patient.","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"   * `delete_d 5` : Deletes the 5th doctor in the list of doctors.","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"## Navigating the application","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"![UiLayout](images/UiLayout.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"The main window can be broken down into the following components:","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"- **Command Box**: The command box is where you will enter your input your commands","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"- **Result Display Box**: The box will display the output messages based on your entered commands","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"- **Appointment List Panel**: This panel will display the list of appointments sorted by their starting date and time","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"- **Patient List Panel**: This panel will display the list of patient sorted by their names","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"- **Doctor List Panel**: This panel will display the list of doctor sorted by their names","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"yanghengtang"},"content":"Back to [Table of Contents](#table-of-contents).","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"# Features","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"yanghengtang"},"content":"The features are broken down to into:","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":"- [General Features](#general-features)","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"yanghengtang"},"content":"- [Patient Management Features](#patient-management-features)","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"yanghengtang"},"content":"- [Doctor Management Features](#doctor-management-features)","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"yanghengtang"},"content":"- [Appointment Management Features](#appointment-management-features)","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"yanghengtang"},"content":"  e.g. in `add n\\NAME`, `NAME` is a parameter which can be used as `add n\\John Doe`.","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"yanghengtang"},"content":"  e.g `n\\NAME [t\\TAG]` can be used as `n\\John Doe t\\friend` or as `n\\John Doe`.","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"yanghengtang"},"content":"  e.g. `[t\\TAG]…​` can be used as ` ` (i.e. 0 times), `t\\friend`, `t\\friend t\\family` etc.","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"yanghengtang"},"content":"  e.g. if the command specifies `n\\NAME p\\PHONE_NUMBER`, `p\\PHONE_NUMBER n\\NAME` is also acceptable.","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"yanghengtang"},"content":"## Patient Management Features","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"yanghengtang"},"content":"These are a list of features that help you manage the records of patient:","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"yanghengtang"},"content":"- [Adding patient](#adding-a-patient--addp)","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"yanghengtang"},"content":"- [Listing patient](#listing-all-patient--listp)","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"yanghengtang"},"content":"- [Viewing patient](#viewing-a-patient--viewp)","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"yanghengtang"},"content":"- [Editing patient](#editing-a-patient--editp)","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"yanghengtang"},"content":"- [Finding patient](#locating-patients-by-name--findp)","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"yanghengtang"},"content":"- [Deleting patient](#deleting-a-patient--deletep)","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"yanghengtang"},"content":"Back to [Table of Contents](#table-of-contents).","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"yanghengtang"},"content":"### Adding a patient: `add_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"yanghengtang"},"content":"Adds a patient to the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"yanghengtang"},"content":"Format: `add_p n\\NAME ic\\NRIC p\\PHONE_NUMBER`","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"yanghengtang"},"content":"* `add_p n\\John Doe ic\\T0212385J p\\98765432`","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"yanghengtang"},"content":"* `add_p ic\\S9912343G n\\Betsy Crowe p\\81235833`","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"Sample Usage:","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"1. Assuming you want to add a Patient named \"Jonathan Reese\" with NRIC \"S8712461K\" and phone number \"81573238\". ","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"2. Enter the following command:","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"yanghengtang"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"add_p n\\Jonathan Reese n\\S8712461K p\\81235833","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"yanghengtang"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"3. The result box will display the following message:","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"yanghengtang"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"yanghengtang"},"content":"\"New patient added: Jonathan Reese NRIC: S8712461K Phone: 81235833\"","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"yanghengtang"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"yanghengtang"},"content":"4. You have successfully added the patient into the database.","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"yanghengtang"},"content":"Back to [Patient Management Features](#patient-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"yanghengtang"},"content":"### Listing all patient : `list_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":185,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":186,"author":{"gitId":"yanghengtang"},"content":"Shows a list of all patients in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":187,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"Format: `list_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":189,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":190,"author":{"gitId":"yanghengtang"},"content":"Back to [Patient Management Features](#patient-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"yanghengtang"},"content":"### Viewing a patient : `view_p`","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":194,"author":{"gitId":"yanghengtang"},"content":"Views the specified patient from the system.","lastModifiedDate":"2023-10-21"},{"lineNumber":195,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":196,"author":{"gitId":"yanghengtang"},"content":"Format: `view_p INDEX`","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":198,"author":{"gitId":"yanghengtang"},"content":"* Displays the full detail of the patient at the specified `INDEX`.","lastModifiedDate":"2023-10-21"},{"lineNumber":199,"author":{"gitId":"yanghengtang"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2023-10-21"},{"lineNumber":200,"author":{"gitId":"yanghengtang"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-21"},{"lineNumber":203,"author":{"gitId":"yanghengtang"},"content":"* `list_p` followed by `view_p 2` views the 2nd patient in the patient list.","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"yanghengtang"},"content":"* `find_p Jonathan` followed by `view_p 1` views the 1st patient in the results of the `find_p` command.","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"yanghengtang"},"content":"Back to [Patient Management Features](#patient-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"yanghengtang"},"content":"### Editing a patient : `edit_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":209,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":210,"author":{"gitId":"yanghengtang"},"content":"Edits an existing patient in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":211,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":212,"author":{"gitId":"yanghengtang"},"content":"Format: `edit_p INDEX [n\\NAME] [ic\\NRIC] [p\\PHONE]`","lastModifiedDate":"2023-10-21"},{"lineNumber":213,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"yanghengtang"},"content":"* Edits the patient at the specified `INDEX`. The index refers to the index number shown in the displayed patient list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-21"},{"lineNumber":215,"author":{"gitId":"yanghengtang"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-05"},{"lineNumber":216,"author":{"gitId":"yanghengtang"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-10-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"yanghengtang"},"content":"*  `edit_p 1 n\\Joe Ng` Edits the name of 1st patient to be `Joe Ng`.","lastModifiedDate":"2023-10-21"},{"lineNumber":220,"author":{"gitId":"yanghengtang"},"content":"*  `edit_p 2 p\\91234567` Edits the phone of the 2nd patient to be `91234567`.","lastModifiedDate":"2023-10-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"yanghengtang"},"content":"Sample Usage:","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"yanghengtang"},"content":"1. Assuming you want to edit the 4th Patient changing his phone from \"81235833\" to \"81453894\".","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"yanghengtang"},"content":"2. Enter the following command:","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"yanghengtang"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"yanghengtang"},"content":"edit_p 4 p\\81453894","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"yanghengtang"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"yanghengtang"},"content":"3. The result box will display the following message:","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"yanghengtang"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"yanghengtang"},"content":"\"Edited Patient: Jonathan Reese NRIC: S8712461K Phone: 81453894\"","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"yanghengtang"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"yanghengtang"},"content":"4. You have successfully edited the patient into the database.","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"yanghengtang"},"content":"Back to [Patient Management Features](#patient-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"yanghengtang"},"content":"### Locating patients by name: `find_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"yanghengtang"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2023-10-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"yanghengtang"},"content":"Format: `find_p KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"yanghengtang"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-10-05"},{"lineNumber":246,"author":{"gitId":"yanghengtang"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-10-05"},{"lineNumber":247,"author":{"gitId":"yanghengtang"},"content":"* Only the name of the patient is searched.","lastModifiedDate":"2023-10-05"},{"lineNumber":248,"author":{"gitId":"yanghengtang"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-10-05"},{"lineNumber":249,"author":{"gitId":"yanghengtang"},"content":"* Patients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-10-05"},{"lineNumber":250,"author":{"gitId":"yanghengtang"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-10-05"},{"lineNumber":251,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":252,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":253,"author":{"gitId":"yanghengtang"},"content":"* `find_p John` returns `john` and `John Doe`","lastModifiedDate":"2023-10-05"},{"lineNumber":254,"author":{"gitId":"yanghengtang"},"content":"* `find_p alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":255,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":256,"author":{"gitId":"yanghengtang"},"content":"Back to [Patient Management Features](#patient-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"yanghengtang"},"content":"### Deleting a patient : `delete_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":259,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":260,"author":{"gitId":"yanghengtang"},"content":"Deletes the specified patient from the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":261,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":262,"author":{"gitId":"yanghengtang"},"content":"Format: `delete_p INDEX`","lastModifiedDate":"2023-10-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"yanghengtang"},"content":"* Deletes the patient at the specified `INDEX`.","lastModifiedDate":"2023-10-21"},{"lineNumber":265,"author":{"gitId":"yanghengtang"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2023-10-21"},{"lineNumber":266,"author":{"gitId":"yanghengtang"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":269,"author":{"gitId":"yanghengtang"},"content":"* `list_p` followed by `delete_p 2` deletes the 2nd patient in the patient list.","lastModifiedDate":"2023-10-21"},{"lineNumber":270,"author":{"gitId":"yanghengtang"},"content":"* `find_p Jonathan` followed by `delete_p 1` deletes the 1st patient in the results of the `find_p` command.","lastModifiedDate":"2023-10-21"},{"lineNumber":271,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":272,"author":{"gitId":"yanghengtang"},"content":"Back to [Patient Management Features](#patient-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"yanghengtang"},"content":"## Doctor Management Features","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":276,"author":{"gitId":"yanghengtang"},"content":"These are a list of features that help you manage the records of doctor:","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"yanghengtang"},"content":"- [Adding doctor](#adding-a-doctor--addd)","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"yanghengtang"},"content":"- [Listing doctor](#listing-all-doctor--listd)","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"yanghengtang"},"content":"- [Viewing doctor](#viewing-a-doctor--viewd)","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"yanghengtang"},"content":"- [Editing doctor](#editing-a-doctor--editd)","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"yanghengtang"},"content":"- [Finding doctor](#locating-doctors-by-name--findd)","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"yanghengtang"},"content":"- [Deleting doctor](#deleting-a-doctor--deleted)","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"yanghengtang"},"content":"Back to [Table of Contents](#table-of-contents).","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"yanghengtang"},"content":"### Adding a doctor: `add_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":287,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":288,"author":{"gitId":"yanghengtang"},"content":"Adds a doctor to the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":289,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":290,"author":{"gitId":"yanghengtang"},"content":"Format: `add_d n\\NAME ic\\NRIC`","lastModifiedDate":"2023-10-06"},{"lineNumber":291,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":292,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":293,"author":{"gitId":"yanghengtang"},"content":"* `add_d n\\John Doe ic\\T0212385J`","lastModifiedDate":"2023-10-06"},{"lineNumber":294,"author":{"gitId":"yanghengtang"},"content":"* `add_d ic\\S9912343G n\\Betsy Crowe`","lastModifiedDate":"2023-10-06"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"yanghengtang"},"content":"Back to [Doctor Management Features](#doctor-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"yanghengtang"},"content":"### Listing all doctor : `list_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":300,"author":{"gitId":"yanghengtang"},"content":"Shows a list of all doctors in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":302,"author":{"gitId":"yanghengtang"},"content":"Format: `list_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":304,"author":{"gitId":"yanghengtang"},"content":"Back to [Doctor Management Features](#doctor-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"yanghengtang"},"content":"### Viewing a doctor : `view_d`","lastModifiedDate":"2023-10-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":308,"author":{"gitId":"yanghengtang"},"content":"Views the specified doctor from the system.","lastModifiedDate":"2023-10-21"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":310,"author":{"gitId":"yanghengtang"},"content":"Format: `view_d INDEX`","lastModifiedDate":"2023-10-21"},{"lineNumber":311,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":312,"author":{"gitId":"yanghengtang"},"content":"* Displays the full detail of the doctor at the specified `INDEX`.","lastModifiedDate":"2023-10-21"},{"lineNumber":313,"author":{"gitId":"yanghengtang"},"content":"* The index refers to the index number shown in the displayed doctor list.","lastModifiedDate":"2023-10-21"},{"lineNumber":314,"author":{"gitId":"yanghengtang"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-21"},{"lineNumber":315,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":316,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-21"},{"lineNumber":317,"author":{"gitId":"yanghengtang"},"content":"* `list_d` followed by `view_d 2` views the 2nd doctor in the doctor list.","lastModifiedDate":"2023-10-21"},{"lineNumber":318,"author":{"gitId":"yanghengtang"},"content":"* `find_d Jonathan` followed by `view_d 1` views the 1st doctor in the results of the `find_d` command.","lastModifiedDate":"2023-10-21"},{"lineNumber":319,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":320,"author":{"gitId":"yanghengtang"},"content":"Back to [Doctor Management Features](#doctor-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":321,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":322,"author":{"gitId":"yanghengtang"},"content":"### Editing a doctor : `edit_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":323,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":324,"author":{"gitId":"yanghengtang"},"content":"Edits an existing doctor in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":325,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":326,"author":{"gitId":"yanghengtang"},"content":"Format: `edit_d INDEX [ic\\NRIC] [n\\NAME]`","lastModifiedDate":"2023-10-21"},{"lineNumber":327,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":328,"author":{"gitId":"yanghengtang"},"content":"* Edits the doctor at the specified `INDEX`. The index refers to the index number shown in the displayed doctor list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-21"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"yanghengtang"},"content":"*  `edit_d 1 n\\Joe Ng ic\\T0212385J` Edits the name and NRIC of the 1st doctor to be `Joe Ng` and `T0212385J` respectively.","lastModifiedDate":"2023-10-21"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"yanghengtang"},"content":"Back to [Doctor Management Features](#doctor-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":337,"author":{"gitId":"yanghengtang"},"content":"### Locating doctors by name: `find_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"yanghengtang"},"content":"Finds doctor whose names contain any of the given keywords.","lastModifiedDate":"2023-10-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"yanghengtang"},"content":"Format: `find_d KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"yanghengtang"},"content":"* Only the name of the doctor is searched.","lastModifiedDate":"2023-10-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"yanghengtang"},"content":"* Doctors matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"yanghengtang"},"content":"* `find_d John` returns `john` and `John Doe`","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"yanghengtang"},"content":"* `find_d alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"yanghengtang"},"content":"Back to [Doctor Management Features](#doctor-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"yanghengtang"},"content":"### Deleting a doctor : `delete_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"yanghengtang"},"content":"Deletes the specified doctor from the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"yanghengtang"},"content":"Format: `delete_d INDEX`","lastModifiedDate":"2023-10-21"},{"lineNumber":361,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"yanghengtang"},"content":"* Deletes the doctor at the specified `INDEX`.","lastModifiedDate":"2023-10-21"},{"lineNumber":363,"author":{"gitId":"yanghengtang"},"content":"* The index refers to the index number shown in the displayed doctor list.","lastModifiedDate":"2023-10-21"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-21"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":366,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":367,"author":{"gitId":"yanghengtang"},"content":"* `list_d` followed by `delete 2` deletes the 2nd doctor in the doctor list.","lastModifiedDate":"2023-10-21"},{"lineNumber":368,"author":{"gitId":"yanghengtang"},"content":"* `find_d Jonathan` followed by `delete 1` deletes the 1st doctor in the results of the `find_d` command.","lastModifiedDate":"2023-10-21"},{"lineNumber":369,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":370,"author":{"gitId":"yanghengtang"},"content":"Back to [Doctor Management Features](#doctor-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":371,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":372,"author":{"gitId":"yanghengtang"},"content":"## Appointment Management Features","lastModifiedDate":"2023-10-25"},{"lineNumber":373,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"yanghengtang"},"content":"These are a list of features that help you manage the records of appointment:","lastModifiedDate":"2023-11-02"},{"lineNumber":375,"author":{"gitId":"yanghengtang"},"content":"- [Adding appointment](#adding-an-appointment--adda)","lastModifiedDate":"2023-11-02"},{"lineNumber":376,"author":{"gitId":"yanghengtang"},"content":"- [Listing appointment](#listing-all-appointments-or-by-patient-or-doctor-nric--lista)","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"yanghengtang"},"content":"- [Viewing appointment](#viewing-an-appointment--viewa)","lastModifiedDate":"2023-11-02"},{"lineNumber":378,"author":{"gitId":"yanghengtang"},"content":"- [Editing appointment](#editing-a-appointment--edita)","lastModifiedDate":"2023-11-02"},{"lineNumber":379,"author":{"gitId":"yanghengtang"},"content":"- [Deleting appointment](#deleting-an-appointment--deletea)","lastModifiedDate":"2023-11-02"},{"lineNumber":380,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":381,"author":{"gitId":"yanghengtang"},"content":"Back to [Table of Contents](#table-of-contents).","lastModifiedDate":"2023-11-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"yanghengtang"},"content":"### Adding an appointment: `add_a`","lastModifiedDate":"2023-10-05"},{"lineNumber":384,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":385,"author":{"gitId":"yanghengtang"},"content":"Adds an appointment into the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":386,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"mounilsankar"},"content":"Format: `add_a pic\\PATIENT_NRIC dic\\DOCTOR_NRIC from\\START_TIME to\\END_TIME`","lastModifiedDate":"2023-10-13"},{"lineNumber":388,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":389,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":390,"author":{"gitId":"mounilsankar"},"content":"* `add_a pic\\S9912343G dic\\T0212385J from\\2023-09-11 07:30 to\\2023-09-11 08:00 `","lastModifiedDate":"2023-10-13"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":392,"author":{"gitId":"yanghengtang"},"content":"Back to [Appointment Management Features](#appointment-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":394,"author":{"gitId":"yanghengtang"},"content":"### Listing all appointments, or by patient or doctor NRIC: `list_a`","lastModifiedDate":"2023-10-21"},{"lineNumber":395,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"yanghengtang"},"content":"Shows a list of appointments in the system depending on the fields given.","lastModifiedDate":"2023-10-21"},{"lineNumber":397,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":398,"author":{"gitId":"yanghengtang"},"content":"Format: `list_a [pic\\PATIENT_NRIC] [dic\\DOCTOR_NRIC]`","lastModifiedDate":"2023-10-21"},{"lineNumber":399,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":400,"author":{"gitId":"yanghengtang"},"content":"* Find any appointment of the doctor or patient with the specified `NRIC`.","lastModifiedDate":"2023-10-21"},{"lineNumber":401,"author":{"gitId":"yanghengtang"},"content":"* List all the appointments in the system if no fields are given.","lastModifiedDate":"2023-10-21"},{"lineNumber":402,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":403,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-21"},{"lineNumber":404,"author":{"gitId":"yanghengtang"},"content":"* `list_a pic\\S9912343G` returns all the appointment the patient with NRIC `S9912343G` has.","lastModifiedDate":"2023-10-21"},{"lineNumber":405,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"yanghengtang"},"content":"Back to [Appointment Management Features](#appointment-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":407,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":408,"author":{"gitId":"yanghengtang"},"content":"### Viewing an appointment: `view_a`","lastModifiedDate":"2023-10-21"},{"lineNumber":409,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":410,"author":{"gitId":"yanghengtang"},"content":"Views the specified appointment from the system.","lastModifiedDate":"2023-10-21"},{"lineNumber":411,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":412,"author":{"gitId":"yanghengtang"},"content":"Format: `view_a INDEX`","lastModifiedDate":"2023-10-21"},{"lineNumber":413,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":414,"author":{"gitId":"yanghengtang"},"content":"* Displays the full detail of the appointment at the specified `INDEX`.","lastModifiedDate":"2023-10-21"},{"lineNumber":415,"author":{"gitId":"yanghengtang"},"content":"* The index refers to the index number shown in the displayed appointment list.","lastModifiedDate":"2023-10-21"},{"lineNumber":416,"author":{"gitId":"yanghengtang"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-21"},{"lineNumber":417,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":419,"author":{"gitId":"yanghengtang"},"content":"* `list_a` followed by `view_a 2` views the 2nd appointment in the appointment list.","lastModifiedDate":"2023-10-21"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"yanghengtang"},"content":"Back to [Appointment Management Features](#appointment-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":422,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":423,"author":{"gitId":"yanghengtang"},"content":"### Deleting an appointment : `delete_a`","lastModifiedDate":"2023-10-05"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"yanghengtang"},"content":"Deletes the specified appointment from the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"yanghengtang"},"content":"Format: `delete_a INDEX`","lastModifiedDate":"2023-10-21"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"yanghengtang"},"content":"* Deletes the appointment with the specified `INDEX`.","lastModifiedDate":"2023-10-21"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"yanghengtang"},"content":"* `delete_a 2` deletes the 2nd appointment in the appointment list.","lastModifiedDate":"2023-10-21"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"yanghengtang"},"content":"Back to [Appointment Management Features](#appointment-management-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":435,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":436,"author":{"gitId":"yanghengtang"},"content":"## General Features","lastModifiedDate":"2023-11-02"},{"lineNumber":437,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":438,"author":{"gitId":"yanghengtang"},"content":"These are the list of general features built into MediConnect:","lastModifiedDate":"2023-11-02"},{"lineNumber":439,"author":{"gitId":"yanghengtang"},"content":"- [Help](#viewing-help--help)","lastModifiedDate":"2023-11-02"},{"lineNumber":440,"author":{"gitId":"yanghengtang"},"content":"- [Exit](#exiting-the-program--exit)","lastModifiedDate":"2023-11-02"},{"lineNumber":441,"author":{"gitId":"yanghengtang"},"content":"- [Saving the data](#saving-the-data)","lastModifiedDate":"2023-11-02"},{"lineNumber":442,"author":{"gitId":"yanghengtang"},"content":"- [Editing the data](#editing-the-data-file)","lastModifiedDate":"2023-11-02"},{"lineNumber":443,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":444,"author":{"gitId":"yanghengtang"},"content":"Back to [Table of Contents](#table-of-contents).","lastModifiedDate":"2023-11-02"},{"lineNumber":445,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":446,"author":{"gitId":"yanghengtang"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-11-02"},{"lineNumber":447,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":448,"author":{"gitId":"yanghengtang"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-11-02"},{"lineNumber":449,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":450,"author":{"gitId":"yanghengtang"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":451,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":452,"author":{"gitId":"yanghengtang"},"content":"Format: `help`","lastModifiedDate":"2023-11-02"},{"lineNumber":453,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":454,"author":{"gitId":"yanghengtang"},"content":"Back to [General Features](#general-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-11-02"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":458,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2023-11-02"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":460,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2023-11-02"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":462,"author":{"gitId":"yanghengtang"},"content":"Back to [General Features](#general-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":463,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2023-11-02"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":466,"author":{"gitId":"yanghengtang"},"content":"MediConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-11-02"},{"lineNumber":467,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":468,"author":{"gitId":"yanghengtang"},"content":"Back to [General Features](#general-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2023-11-02"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":472,"author":{"gitId":"yanghengtang"},"content":"MediConnect data are saved automatically as a JSON file `[JAR file location]/data/database.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-11-02"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":474,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-02"},{"lineNumber":475,"author":{"gitId":"yanghengtang"},"content":"If your changes to the data file makes its format invalid, MediConnect will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-11-02"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":478,"author":{"gitId":"yanghengtang"},"content":"Back to [General Features](#general-features).","lastModifiedDate":"2023-11-02"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":480,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"yanghengtang"},"content":"# FAQ","lastModifiedDate":"2023-10-21"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"yanghengtang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MediConnect home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"yanghengtang"},"content":"Back to [Table of Contents](#table-of-contents).","lastModifiedDate":"2023-11-02"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":489,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"yanghengtang"},"content":"# Known issues","lastModifiedDate":"2023-10-21"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":493,"author":{"gitId":"yanghengtang"},"content":"1. _Details coming soon ..._","lastModifiedDate":"2023-10-05"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":495,"author":{"gitId":"yanghengtang"},"content":"Back to [Table of Contents](#table-of-contents).","lastModifiedDate":"2023-11-02"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":497,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":499,"author":{"gitId":"yanghengtang"},"content":"# Command summary","lastModifiedDate":"2023-10-21"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"yanghengtang"},"content":"| Action                 | Format, Examples                                                                                                                                              |","lastModifiedDate":"2023-10-06"},{"lineNumber":502,"author":{"gitId":"yanghengtang"},"content":"|------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-21"},{"lineNumber":503,"author":{"gitId":"yanghengtang"},"content":"| **Add Patient**        | `add_p n\\NAME ic\\NRIC p\\PHONE_NUMBER` \u003cbr\u003e e.g., `add_p n\\John Doe ic\\T0212385J p\\98765432`                                                                   |","lastModifiedDate":"2023-10-06"},{"lineNumber":504,"author":{"gitId":"yanghengtang"},"content":"| **Add Doctor**         | `add_d n\\NAME ic\\NRIC` \u003cbr\u003e e.g., `add_d n\\John Doe ic\\T0212385J`                                                                                             |","lastModifiedDate":"2023-10-06"},{"lineNumber":505,"author":{"gitId":"yanghengtang"},"content":"| **Add Appointment**    | `add_a pic\\PATIENT_NRIC dic\\DOCTOR_NRIC from\\START_TIME to\\END_TIME` \u003cbr\u003e e.g., `add_a pic\\S9912343G dic\\T0212385J from\\2023-09-11 07:30 to\\2023-09-11 08:30` |","lastModifiedDate":"2023-10-21"},{"lineNumber":506,"author":{"gitId":"yanghengtang"},"content":"| **Delete Patient**     | `delete_p INDEX`\u003cbr\u003e e.g., `delete_p 1`                                                                                                                       |","lastModifiedDate":"2023-10-21"},{"lineNumber":507,"author":{"gitId":"yanghengtang"},"content":"| **Delete Doctor**      | `delete_d INDEX`\u003cbr\u003e e.g., `delete_d 2`                                                                                                                       |","lastModifiedDate":"2023-10-21"},{"lineNumber":508,"author":{"gitId":"yanghengtang"},"content":"| **Delete Appointment** | `delete_a INDEX`\u003cbr\u003e e.g., `delete_a 3`                                                                                                                       |","lastModifiedDate":"2023-10-21"},{"lineNumber":509,"author":{"gitId":"yanghengtang"},"content":"| **View Patient**       | `view_p INDEX`\u003cbr\u003e e.g., `view_p 1`                                                                                                                           |","lastModifiedDate":"2023-10-21"},{"lineNumber":510,"author":{"gitId":"yanghengtang"},"content":"| **View Doctor**        | `view_d INDEX`\u003cbr\u003e e.g., `view_d 2`                                                                                                                           |","lastModifiedDate":"2023-10-21"},{"lineNumber":511,"author":{"gitId":"yanghengtang"},"content":"| **View Appointment**   | `view_a INDEX`\u003cbr\u003e e.g., `view_a 3`                                                                                                                           |","lastModifiedDate":"2023-10-21"},{"lineNumber":512,"author":{"gitId":"yanghengtang"},"content":"| **Edit Patient**       | `edit_p INDEX [ic\\NRIC] [n\\NAME] [p\\PHONE]`\u003cbr\u003e e.g.,`edit_p 3 ic\\T0212385J n\\Joe Ng`                                                                         |","lastModifiedDate":"2023-10-21"},{"lineNumber":513,"author":{"gitId":"yanghengtang"},"content":"| **Edit Doctor**        | `edit_d INDEX [ic\\NRIC] [n\\NAME]`\u003cbr\u003e e.g.,`edit_d 2 ic\\T0212385J n\\Joe Ng`                                                                                   |","lastModifiedDate":"2023-10-21"},{"lineNumber":514,"author":{"gitId":"yanghengtang"},"content":"| **Find Patient**       | `find_p KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find_p James Jake`                                                                                                |","lastModifiedDate":"2023-10-06"},{"lineNumber":515,"author":{"gitId":"yanghengtang"},"content":"| **Find Patient**       | `find_d KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find_d James Jake`                                                                                                |","lastModifiedDate":"2023-10-06"},{"lineNumber":516,"author":{"gitId":"yanghengtang"},"content":"| **List Patient**       | `list_p`                                                                                                                                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":517,"author":{"gitId":"yanghengtang"},"content":"| **List Doctor**        | `list_d`                                                                                                                                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":518,"author":{"gitId":"yanghengtang"},"content":"| **List Appointment**   | `list_a`                                                                                                                                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":519,"author":{"gitId":"yanghengtang"},"content":"| **Help**               | `help`                                                                                                                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":520,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":521,"author":{"gitId":"yanghengtang"},"content":"Back to [Table of Contents](#table-of-contents).","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"yanghengtang":378,"mounilsankar":2,"-":141}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"yanghengtang"},"content":"    content: \"MediConnect\";","lastModifiedDate":"2023-10-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"yanghengtang":1,"-":294}},{"path":"docs/diagrams/EditAppointmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"!include ./style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"participant \":EditAppointmentCommandParser\" as EditAppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"participant \"e:EditAppointmentCommand\" as EditAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"participant \"c:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"participant \"d:EditAppointmentDescriptor\" as EditAppointmentDescriptor LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"[-\u003e LogicManager : execute(\"edit_a 5 pic\\T01234567B\")","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"edit_a 5 pic\\T01234567B\")","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"create EditAppointmentCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"MediConnectParser -\u003e EditAppointmentCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"activate EditAppointmentCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"deactivate EditAppointmentCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"MediConnectParser -\u003e EditAppointmentCommandParser : parseCommand(\"edit_a 5 pic\\T01234567B\")","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"activate EditAppointmentCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"create EditAppointmentDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommandParser -\u003e EditAppointmentDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"activate EditAppointmentDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"EditAppointmentDescriptor --\u003e EditAppointmentCommandParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"deactivate EditAppointmentDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"create EditAppointmentCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommandParser -\u003e EditAppointmentCommand : EditAppointmentCommand(5, d)","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"activate EditAppointmentCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommand --\u003e EditAppointmentCommandParser : e","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"deactivate EditAppointmentCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommandParser --\u003e MediConnectParser : e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"deactivate EditAppointmentCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"destroy EditAppointmentCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"MediConnectParser --\u003e LogicManager : e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"LogicManager -\u003e EditAppointmentCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"activate EditAppointmentCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommand -\u003e EditAppointmentCommand : createEditedAppointment(5, d)","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"activate EditAppointmentCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommand --\u003e EditAppointmentCommand : editedAppointment","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"deactivate EditAppointmentCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommand -\u003e Model : setAppointment(5, editedAppointment)","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"Model --\u003e EditAppointmentCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"CommandResult --\u003e EditAppointmentCommand : c","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"EditAppointmentCommand --\u003e LogicManager : c","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"deactivate EditAppointmentCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"cheeggered":81}},{"path":"docs/diagrams/EditDoctorSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"!include ./style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"participant \":EditDoctorCommandParser\" as EditDoctorCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"participant \"e:EditDoctorCommand\" as EditDoctorCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"participant \"c:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"participant \"d:EditDoctorDescriptor\" as EditDoctorDescriptor LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"[-\u003e LogicManager : execute(\"edit_d 5 ic\\T0123456B\")","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"edit_d 5 ic\\T0123456B\")","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"create EditDoctorCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"MediConnectParser -\u003e EditDoctorCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"activate EditDoctorCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"deactivate EditDoctorCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"MediConnectParser -\u003e EditDoctorCommandParser : parse(\"edit_d 5 ic\\T0123456B\")","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"activate EditDoctorCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"create EditDoctorDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommandParser -\u003e EditDoctorDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"activate EditDoctorDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"EditDoctorDescriptor --\u003e EditDoctorCommandParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"deactivate EditDoctorDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"create EditDoctorCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommandParser -\u003e EditDoctorCommand : EditDoctorCommand(5, d)","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"activate EditDoctorCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommand --\u003e EditDoctorCommandParser : e","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"deactivate EditDoctorCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommandParser --\u003e MediConnectParser : e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"deactivate EditDoctorCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"destroy EditDoctorCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"MediConnectParser --\u003e LogicManager : e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"LogicManager -\u003e EditDoctorCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"activate EditDoctorCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommand -\u003e EditDoctorCommand : createEditedDoctor(5, d)","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"activate EditDoctorCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommand --\u003e EditDoctorCommand : editedDoctor","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"deactivate EditDoctorCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommand -\u003e Model : setDoctor(5, editedDoctor)","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"Model --\u003e EditDoctorCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"CommandResult --\u003e EditDoctorCommand : c","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"EditDoctorCommand --\u003e LogicManager : c","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"deactivate EditDoctorCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"cheeggered":81}},{"path":"docs/diagrams/EditPatientSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"!include ./style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"participant \":EditPatientCommandParser\" as EditPatientCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"participant \"e:EditPatientCommand\" as EditPatientCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"participant \"c:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"participant \"d:EditPatientDescriptor\" as EditPatientDescriptor LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"[-\u003e LogicManager : execute(\"edit_p 5 p\\23456789\")","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"edit_p 5 p\\23456789\")","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"create EditPatientCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"MediConnectParser -\u003e EditPatientCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"activate EditPatientCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"EditPatientCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"deactivate EditPatientCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"MediConnectParser -\u003e EditPatientCommandParser : parse(\"edit_p 5 p\\23456789\")","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"activate EditPatientCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"create EditPatientDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"EditPatientCommandParser -\u003e EditPatientDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"activate EditPatientDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"EditPatientDescriptor --\u003e EditPatientCommandParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"deactivate EditPatientDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"create EditPatientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"EditPatientCommandParser -\u003e EditPatientCommand : EditPatientCommand(5, d)","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"activate EditPatientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"EditPatientCommand --\u003e EditPatientCommandParser : e","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"deactivate EditPatientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"EditPatientCommandParser --\u003e MediConnectParser : e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"deactivate EditPatientCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"EditPatientCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"destroy EditPatientCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"MediConnectParser --\u003e LogicManager : e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"LogicManager -\u003e EditPatientCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"activate EditPatientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"EditPatientCommand -\u003e EditPatientCommand : createEditedPatient(5, d)","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"activate EditPatientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"EditPatientCommand --\u003e EditPatientCommand : editedPatient","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"deactivate EditPatientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"EditPatientCommand -\u003e Model : setPatient(5, editedPatient)","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"Model --\u003e EditPatientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"EditPatientCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"CommandResult --\u003e EditPatientCommand : c","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"EditPatientCommand --\u003e LogicManager : c","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"deactivate EditPatientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"cheeggered":81}},{"path":"docs/diagrams/EditXYZActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":":User enters EditXYZCommand with a specified index and parameter;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"floating note right","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"    XYZ \u003d Appointment, Doctor or Patient","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"end note","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":":MediConnectParser parses the command;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":":EditXYZCommandParser parses the arguments provided;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"if () then ([command is valid])","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"  :New EditXYZCommand instance is created;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"  if () then ([XYZ object already exists])","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    :Parser throws exception;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"  else ([XYZ object does not exist])","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"  :FilteredXYZList is updated with the new XYZ item;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"  endif","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"else ([command is invalid])","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"  :Parser throws exception;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"if () then ([no error thrown])","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"  :Display updated FilteredXYZList;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"else ([error thrown])","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"  :Display error message;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"cheeggered":28}},{"path":"docs/diagrams/FindDoctorSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"box NewLogic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"participant \":FindDoctorCommandParser\" as FindDoctorCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"participant \"d:FindDoctor\" as FindDoctor LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"participant \":NameContainsKeywordsDoctorPredicate\" as NameContainsKeywordsDoctorPredicate LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"[-\u003e LogicManager : execute(\"find_d John\")","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"find_d John\")","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"create FindDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"MediConnectParser -\u003e FindDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"activate FindDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"FindDoctorCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"deactivate FindDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"MediConnectParser -\u003e FindDoctorCommandParser : parse(\"John\")","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"activate FindDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"create FindDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"FindDoctorCommandParser -\u003e FindDoctor :","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"activate FindDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"create NameContainsKeywordsDoctorPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"FindDoctor -\u003e NameContainsKeywordsDoctorPredicate : NameContainsKeywordsDoctorPredicate([John])","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"activate NameContainsKeywordsDoctorPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"NameContainsKeywordsDoctorPredicate --\u003e FindDoctor : predicate","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"deactivate NameContainsKeywordsDoctorPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"FindDoctor --\u003e FindDoctorCommandParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"deactivate FindDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"FindDoctorCommandParser --\u003e MediConnectParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"deactivate FindDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"FindDoctorCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"destroy FindDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"MediConnectParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"LogicManager -\u003e FindDoctor : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"activate FindDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"FindDoctor -\u003e Model : getFilteredDoctorList(predicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"Model --\u003e FindDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"FindDoctor -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"CommandResult --\u003e FindDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"FindDoctor --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"deactivate FindDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kimshitong":79}},{"path":"docs/diagrams/FindPatientSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"box NewLogic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"participant \":FindPatientCommandParser\" as FindPatientCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"participant \"p:FindPatient\" as FindPatient LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"participant \":NameContainsKeywordsPatientPredicate\" as NameContainsKeywordsPatientPredicate LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"[-\u003e LogicManager : execute(\"find_p John\")","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"find_p John\")","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"create FindPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"MediConnectParser -\u003e FindPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"activate FindPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"FindPatientCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"deactivate FindPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"MediConnectParser -\u003e FindPatientCommandParser : parse(\"John\")","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"activate FindPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"create FindPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"FindPatientCommandParser -\u003e FindPatient :","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"activate FindPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"create NameContainsKeywordsPatientPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"FindPatient -\u003e NameContainsKeywordsPatientPredicate : NameContainsKeywordsPatientPredicate([John])","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"activate NameContainsKeywordsPatientPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"NameContainsKeywordsPatientPredicate --\u003e FindPatient : predicate","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"deactivate NameContainsKeywordsPatientPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"FindPatient --\u003e FindPatientCommandParser : p","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"deactivate FindPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"FindPatientCommandParser --\u003e MediConnectParser : p","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"deactivate FindPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"FindPatientCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"destroy FindPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"MediConnectParser --\u003e LogicManager : p","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"LogicManager -\u003e FindPatient : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"activate FindPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"FindPatient -\u003e Model : getFilteredPatientList(predicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"Model --\u003e FindPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"FindPatient -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"CommandResult --\u003e FindPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"FindPatient --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"deactivate FindPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kimshitong":79}},{"path":"docs/diagrams/ListAppointmentSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"box NewLogic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"participant \":ListAppointmentCommandParser\" as ListAppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"participant \"a:ListAppointment\" as ListAppointment LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"participant \":AppointmentEqualDoctorNricPredicate\" as AppointmentEqualDoctorNricPredicate LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"participant \":AppointmentEqualPatientNricPredicate\" as AppointmentEqualPatientNricPredicate LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"participant \":AppointmentFilterByNricPredicate\" as AppointmentFilterByNricPredicate LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"[-\u003e LogicManager : execute(\"list_a pic\\S9912343G dic\\S0548254G\")","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"list_a pic\\S9912343G dic\\S0548254G\")","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"create ListAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"MediConnectParser -\u003e ListAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"activate ListAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"ListAppointmentCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"deactivate ListAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"MediConnectParser -\u003e ListAppointmentCommandParser : parse(\"pic\\S9912343G dic\\S0548254G\")","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"activate ListAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"create ListAppointment","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"ListAppointmentCommandParser -\u003e ListAppointment :","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"activate ListAppointment","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"create AppointmentEqualPatientNricPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"ListAppointment -\u003e AppointmentEqualPatientNricPredicate : AppointmentEqualPatientNricPredicate(\"S9912343G\")","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"activate  AppointmentEqualPatientNricPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"AppointmentEqualPatientNricPredicate --\u003e ListAppointment : patientPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"deactivate AppointmentEqualPatientNricPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"create AppointmentEqualDoctorNricPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"ListAppointment -\u003e AppointmentEqualDoctorNricPredicate : AppointmentEqualDoctorNricPredicate(\"S0548254G\")","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"activate AppointmentEqualDoctorNricPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"AppointmentEqualDoctorNricPredicate --\u003e ListAppointment : doctorPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"deactivate AppointmentEqualDoctorNricPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"create AppointmentFilterByNricPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"ListAppointment -\u003e AppointmentFilterByNricPredicate : AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"activate AppointmentFilterByNricPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"AppointmentFilterByNricPredicate --\u003e ListAppointment : predicate","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"deactivate AppointmentFilterByNricPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"ListAppointment --\u003e ListAppointmentCommandParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"deactivate ListAppointment","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"ListAppointmentCommandParser --\u003e MediConnectParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"deactivate ListAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"ListAppointmentCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"destroy ListAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"MediConnectParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"LogicManager -\u003e ListAppointment : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"activate ListAppointment","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"ListAppointment -\u003e Model : updateFilteredAppointmentList(predicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"Model --\u003e ListAppointment","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"ListAppointment -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"CommandResult --\u003e ListAppointment","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"ListAppointment --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"deactivate ListAppointment","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kimshitong":93}},{"path":"docs/diagrams/ListDoctorSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"box NewLogic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"participant \"d:ListDoctor\" as ListDoctor LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"[-\u003e LogicManager : execute(\"list_d\")","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"list_d\")","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"create ListDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"MediConnectParser -\u003e ListDoctor : ListPatientsCommand()","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"activate ListDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"ListDoctor --\u003e MediConnectParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"deactivate ListDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"MediConnectParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"LogicManager -\u003e ListDoctor : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"activate ListDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"ListDoctor -\u003e Model : updateFilteredDoctorList(\\nPREDICATE_SHOW_ALL\\n_DOCTORS)","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"Model --\u003e ListDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"ListDoctor -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"CommandResult --\u003e ListDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"ListDoctor --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"deactivate ListDoctor","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kimshitong":58}},{"path":"docs/diagrams/ListPatientSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"box NewLogic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"participant \"p:ListPatient\" as ListPatient LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"[-\u003e LogicManager : execute(\"list_p\")","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"list_p\")","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"create ListPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"MediConnectParser -\u003e ListPatient : ListPatientsCommand()","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"activate ListPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"ListPatient --\u003e MediConnectParser : p","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"deactivate ListPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"MediConnectParser --\u003e LogicManager : p","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"LogicManager -\u003e ListPatient : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"activate ListPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"ListPatient -\u003e Model : updateFilteredPatientList(\\nPREDICATE_SHOW_ALL\\n_PATIENTS)","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"Model --\u003e ListPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"ListPatient -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"CommandResult --\u003e ListPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"ListPatient --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"deactivate ListPatient","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kimshitong":58}},{"path":"docs/diagrams/SortActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"skin rose","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"start","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":":User executes list command;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"if () then ([sort parameter present])","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"    if () then ([order parameter present])","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"        :Parser selects corresponding","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"        Comparator;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    else ([order paramter not present])","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"        :Parser selects Ascending Comparator;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    endif","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"else ([sort parameter not present])","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    if () then ([order parameter not present])","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"        :Parser selects the default Comparator;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    else ([order parameter present])","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"        :Parser throws Exception;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    endif","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"endif","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"if () then([No error thrown])","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    :Database sorts the list using the selected Comparator;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    :Display sorted list;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"else ([Error thrown])","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    :Display error message;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"endif","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"stop","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"derekjxtan":33}},{"path":"docs/diagrams/SortModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"!include style.puml","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nComparable\" as Comparable","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"Class Nric","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"Class Name","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Class Phone","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"Class \"{abstract}\\nAppointmentTime\" as AppointmentTime","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"Class AppointmentStartTime","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"Class AppointmentEndTime","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"Name .up.|\u003e Comparable","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"Nric .up.|\u003e Comparable","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"Phone .up.|\u003e Comparable","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"AppointmentTime .up.|\u003e Comparable","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"AppointmentStartTime -up-|\u003e AppointmentTime","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"AppointmentEndTime -up-|\u003e AppointmentTime","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"derekjxtan":21}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"!include style.puml","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"participant \"u:ListAppointmentCommand\" as ListAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"end box","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"participant \"filteredAppointments:FilteredList\" as FilteredAppointments MODEL_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"end box","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"[-\u003e LogicManager : execute(\"list_a s\\\\name o\\\\asc\")","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"activate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"list_a s\\\\name o\\\\asc\")","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"create ListAppointmentCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"MediConnectParser -\u003e ListAppointmentCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"activate ListAppointmentCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"ListAppointmentCommand --\u003e MediConnectParser","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"deactivate ListAppointmentCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"MediConnectParser --\u003e LogicManager : u","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"LogicManager -\u003e ListAppointmentCommand : execute()","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"activate ListAppointmentCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"ListAppointmentCommand -\u003e Model : updateFilteredAppointmentList(predicate, comparator)","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"activate Model","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"Model -\u003e FilteredAppointments : setPredicate(predicate)","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"activate FilteredAppointments","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"FilteredAppointments --\u003e Model","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"deactivate FilteredAppointments","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"Model -\u003e FilteredAppointments : sort(comparator)","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"activate FilteredAppointments","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"FilteredAppointments --\u003e Model","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"deactivate FilteredAppointments","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"Model --\u003e ListAppointmentCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"deactivate Model","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"ListAppointmentCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"deactivate ListAppointmentCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"ListAppointmentCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"destroy ListAppointmentCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"derekjxtan":61}},{"path":"docs/diagrams/ViewActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"skin rose","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"start","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":":User executes view command;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"switch ()","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"case ( [view appointment] )","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"  :Update Selected Appointment;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"case ( [view doctor] )","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"  :Update Selected Doctor;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"case ( [view patient] )","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"  :Update Selected Patient;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"endswitch","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":":Update UI Text in View Window;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"if () then ( [view window is opened] )","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    :Toggle Focus to Window;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"else ( [view window is not opened] )","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    :Launch Window;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"end if","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"stop","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"yanghengtang":26}},{"path":"docs/diagrams/ViewPatientLogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"!include style.puml","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"participant \":ViewPatientCommandParser\" as ViewPatientCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"participant \"vp:ViewPatientCommand\" as ViewPatientCommand LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"end box","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"end box","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"[-\u003e LogicManager : execute(\"view_p 1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"activate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"view_p 1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"create ViewPatientCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"MediConnectParser -\u003e ViewPatientCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"activate ViewPatientCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"ViewPatientCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"deactivate ViewPatientCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"MediConnectParser -\u003e ViewPatientCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"activate ViewPatientCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"create ViewPatientCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"ViewPatientCommandParser -\u003e ViewPatientCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"activate ViewPatientCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"ViewPatientCommand --\u003e ViewPatientCommandParser : vp","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"deactivate ViewPatientCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"ViewPatientCommandParser --\u003e MediConnectParser : vp","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"deactivate ViewPatientCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"ViewPatientCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"destroy ViewPatientCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"MediConnectParser --\u003e LogicManager : vp","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"LogicManager -\u003e ViewPatientCommand : execute()","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"activate ViewPatientCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"ViewPatientCommand -\u003e Model : updateSelectedPatient(patient)","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"activate Model","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"Model --\u003e ViewPatientCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"deactivate Model","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"create CommandResult","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"ViewPatientCommand -\u003e CommandResult","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"activate CommandResult","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"CommandResult --\u003e ViewPatientCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"ViewPatientCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"deactivate ViewPatientCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yanghengtang":70}},{"path":"docs/diagrams/ViewPatientUiSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"!include style.puml","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"participant \":PatientWindow\" as PatientWindow UI_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"end box","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"end box","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"[-\u003e MainWindow : executeCommand(\"view_p 1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"activate MainWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"MainWindow -\u003e LogicManager : execute(\"view_p 1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"activate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"LogicManager --\u003e MainWindow : result","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"MainWindow -\u003e LogicManager : getSelectedPatient()","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"activate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"LogicManager --\u003e MainWindow : patient","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"MainWindow -\u003e PatientWindow : updatePatient(patient)","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"activate PatientWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"PatientWindow --\u003e MainWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"deactivate PatientWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"alt PatientWindow is opened","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    MainWindow -\u003e PatientWindow : focus()","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    activate PatientWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"    PatientWindow --\u003e MainWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"    deactivate PatientWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"else PatientWindow not opened","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    MainWindow -\u003e PatientWindow : show()","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    activate PatientWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    PatientWindow --\u003e MainWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    deactivate PatientWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"end","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"[\u003c--MainWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"deactivate MainWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yanghengtang":54}},{"path":"docs/diagrams/commands/AddAppointmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"participant \":AddAppointmentCommandParser\" as AddAppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"participant \"a:AddAppointmentCommand\" as AddAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"participant \"toAdd:Appointment\" as Appointment MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"[-\u003e LogicManager : execute(\"add_a pic\\T0123456J \\n dic\\S9876543F \\n from\\2023-12-01 07:30 \\n to\\2023-12-01 08:30\")","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"add_a pic\\T0123456J \\n dic\\S9876543F \\n from\\2023-12-01 07:30 \\n to\\2023-12-01 08:30\")","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"create AddAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e AddAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"activate AddAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"AddAppointmentCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"deactivate AddAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e AddAppointmentCommandParser : parse(\"pic\\T0123456J \\n dic\\S9876543F \\n from\\2023-12-01 07:30 \\n to\\2023-12-01 08:30\")","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"activate AddAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"create Appointment","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"AddAppointmentCommandParser -\u003e Appointment","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"activate Appointment","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"Appointment --\u003e AddAppointmentCommandParser : toAdd","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"deactivate","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"create AddAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"AddAppointmentCommandParser -\u003e AddAppointmentCommand : AddAppointmentCommand(toAdd))","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"AddAppointmentCommand --\u003e AddAppointmentCommandParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"AddAppointmentCommandParser --\u003e MediConnectParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"deactivate AddAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"AddAppointmentCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"destroy AddAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -[hidden]-\u003e AddAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"destroy MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e AddAppointmentCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"AddAppointmentCommand -\u003e Model : addAppointment(toAdd)","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"Model --\u003e AddAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"AddAppointmentCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"CommandResult --\u003e AddAppointmentCommand : result","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"AddAppointmentCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"AddAppointmentCommand -[hidden]-\u003e Model","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"destroy AddAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"mounilsankar":84}},{"path":"docs/diagrams/commands/AddDoctorSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"participant \":AddDoctorCommandParser\" as AddDoctorCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"participant \"a:AddDoctorCommand\" as AddDoctorCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"participant \"toAdd:Doctor\" as Doctor MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"[-\u003e LogicManager : execute(\"add_d n\\John Doe ic\\T0212385J\")","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"add_d n\\John Doe ic\\T0212385J\")","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"create AddDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e AddDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"activate AddDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"AddDoctorCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"deactivate AddDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e AddDoctorCommandParser : parse(\"n\\John Doe ic\\T0212385J\")","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"activate AddDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"create Doctor","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"AddDoctorCommandParser -\u003e Doctor","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"activate Doctor","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"Doctor --\u003e AddDoctorCommandParser : toAdd","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"deactivate","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"create AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"AddDoctorCommandParser -\u003e AddDoctorCommand : AddDoctorCommand(toAdd))","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"activate AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"AddDoctorCommand --\u003e AddDoctorCommandParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"deactivate AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"AddDoctorCommandParser --\u003e MediConnectParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"deactivate AddDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"AddDoctorCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"destroy AddDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -[hidden]-\u003e AddDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"destroy MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e AddDoctorCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"activate AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"AddDoctorCommand -\u003e Model : addDoctor(toAdd)","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"Model --\u003e AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"AddDoctorCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"CommandResult --\u003e AddDoctorCommand : result","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"AddDoctorCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"deactivate AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"AddDoctorCommand -[hidden]-\u003e Model","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"destroy AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"mounilsankar":84}},{"path":"docs/diagrams/commands/AddPatientSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"participant \":AddPatientCommandParser\" as AddPatientCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"participant \"a:AddPatientCommand\" as AddPatientCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"participant \"toAdd:Patient\" as Patient MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"[-\u003e LogicManager : execute(\"add_p n\\John Doe \\n ic\\T0212385J p\\98765432\")","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"add_p n\\John Doe \\n ic\\T0212385J p\\98765432\")","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"create AddPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e AddPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"activate AddPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"AddPatientCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"deactivate AddPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e AddPatientCommandParser : parse(\"n\\John Doe \\n ic\\T0212385J p\\98765432\")","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"activate AddPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"create Patient","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"AddPatientCommandParser -\u003e Patient","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"activate Patient","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"Patient --\u003e AddPatientCommandParser : toAdd","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"deactivate","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"create AddPatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"AddPatientCommandParser -\u003e AddPatientCommand : AddPatientCommand(toAdd))","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"activate AddPatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"AddPatientCommand --\u003e AddPatientCommandParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"deactivate AddPatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"AddPatientCommandParser --\u003e MediConnectParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"deactivate AddPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"AddPatientCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"destroy AddPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -[hidden]-\u003e AddPatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"destroy MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e AddPatientCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"activate AddPatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"AddPatientCommand -\u003e Model : addPatient(toAdd)","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"Model --\u003e AddPatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"AddPatientCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"CommandResult --\u003e AddPatientCommand : result","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"AddPatientCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"deactivate AddPatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"AddPatientCommand -[hidden]-\u003e Model","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"destroy AddPatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"mounilsankar":84}},{"path":"docs/diagrams/commands/AddXYZActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"start","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":":User enters AddXYZCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"floating note right","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"    XYZ \u003d Appointment, Doctor or Patient","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"end note","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":":MediConnectParser parses the command;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":":AddXYZCommandParser parses the arguments provided;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"if () then ([command is valid])","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"  :New XYZ object is created;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    if() then ([XYZ object already exists])","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    :Outputs error message;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    else ([XYZ object does not exist])","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    :FilteredXYZlist is updated with the new XYZ item;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    endif","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"else ([command is invalid])","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"  :Outputs error message;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"endif","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"stop","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"mounilsankar":23}},{"path":"docs/diagrams/commands/DeleteAppointmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"participant \":DeleteAppointmentCommandParser\" as DeleteAppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"participant \"d:DeleteAppointmentCommand\" as DeleteAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"[-\u003e LogicManager : execute(\"delete_a 1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"delete_a 1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"create DeleteAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e DeleteAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"activate DeleteAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"DeleteAppointmentCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"deactivate DeleteAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e DeleteAppointmentCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"activate DeleteAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"create DeleteAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"DeleteAppointmentCommandParser -\u003e DeleteAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"activate DeleteAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"DeleteAppointmentCommand --\u003e DeleteAppointmentCommandParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"deactivate DeleteAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"DeleteAppointmentCommandParser --\u003e MediConnectParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"deactivate DeleteAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"DeleteAppointmentCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"destroy DeleteAppointmentCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e DeleteAppointmentCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"activate DeleteAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"DeleteAppointmentCommand -\u003e Model : deleteAppointment(1)","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"Model --\u003e DeleteAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"DeleteAppointmentCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"CommandResult --\u003e DeleteAppointmentCommand : result","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"DeleteAppointmentCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"deactivate DeleteAppointmentCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"mounilsankar":70}},{"path":"docs/diagrams/commands/DeleteDoctorSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"participant \":DeleteDoctorCommandParser\" as DeleteDoctorCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"participant \"d:DeleteDoctorCommand\" as DeleteDoctorCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"[-\u003e LogicManager : execute(\"delete_d 1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"delete_d 1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"create DeleteDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e DeleteDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"activate DeleteDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"DeleteDoctorCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"deactivate DeleteDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e DeleteDoctorCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"activate DeleteDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"create DeleteDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"DeleteDoctorCommandParser -\u003e DeleteDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"activate DeleteDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"DeleteDoctorCommand --\u003e DeleteDoctorCommandParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"deactivate DeleteDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"DeleteDoctorCommandParser --\u003e MediConnectParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"deactivate DeleteDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"DeleteDoctorCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"destroy DeleteDoctorCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e DeleteDoctorCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"activate DeleteDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"DeleteDoctorCommand -\u003e Model : deleteDoctor(1)","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"Model --\u003e DeleteDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"DeleteDoctorCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"CommandResult --\u003e DeleteDoctorCommand : result","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"DeleteDoctorCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"deactivate DeleteDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"mounilsankar":70}},{"path":"docs/diagrams/commands/DeletePatientSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"participant \":MediConnectParser\" as MediConnectParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"participant \":DeletePatientCommandParser\" as DeletePatientCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"participant \"d:DeletePatientCommand\" as DeletePatientCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"[-\u003e LogicManager : execute(\"delete_p 1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e MediConnectParser : parseCommand(\"delete_p 1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"activate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"create DeletePatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e DeletePatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"activate DeletePatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"DeletePatientCommandParser --\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"deactivate DeletePatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser -\u003e DeletePatientCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"activate DeletePatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"create DeletePatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"DeletePatientCommandParser -\u003e DeletePatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"activate DeletePatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"DeletePatientCommand --\u003e DeletePatientCommandParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"deactivate DeletePatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"DeletePatientCommandParser--\u003e MediConnectParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"deactivate DeletePatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"DeletePatientCommandParser -[hidden]-\u003e MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"destroy DeletePatientCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"MediConnectParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"deactivate MediConnectParser","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"LogicManager -\u003e DeletePatientCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"activate DeletePatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"DeletePatientCommand -\u003e Model : deletePatient(1)","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"Model --\u003e DeletePatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"DeletePatientCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"CommandResult --\u003e DeletePatientCommand : result","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"DeletePatientCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"deactivate DeletePatientCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"mounilsankar":70}},{"path":"docs/diagrams/commands/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"mounilsankar":1,"-":69}},{"path":"docs/diagrams/commands/DeleteXYZActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"start","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":":User enters DeleteYZCommand with a specified index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"floating note right","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"    XYZ \u003d Appointment, Doctor or Patient","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"end note","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":":MediConnectParser parses the command;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":":AddXYZCommandParser parses the index specified provided;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"if () then ([command is valid])","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"  :The XYZ item at specified index is removed \\n from the FilteredXYZlist in database;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"else ([command is invalid])","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"  :Outputs error message;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"endif","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"stop","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"mounilsankar":19}},{"path":"docs/diagrams/commands/FindCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":":User enters command;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"floating note right","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"    YZ \u003d Doctor or Patient","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"endnote","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":":MediConnectParser parses the command;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":":FindYZCommandParser parses the command;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"if () then ([argument is valid])","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"    :Return filtered YZ list to user \\n based on name predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"else ([argument is not valid])","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"    :Show error message;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"kimshitong":15}},{"path":"docs/diagrams/commands/ListAppointmentCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":":User enters ListAppointmentCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":":MediConnectParser parses command;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":":FindAppointmentCommandParser Parse arguments;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"if () then ([command is valid])","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"    :Return filtered list based on \\n(doctor and/or patient) predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"else ([command is not valid])","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"    :Show error message;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"kimshitong":13}},{"path":"docs/diagrams/commands/ListCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":":User enters ListYZCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"floating note right","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"    YZ \u003d Doctor or Patient","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"endnote","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":":MediConnectParser parses command;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":":Update YZ list with PREDICATE_SHOW_ALL_YZ;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":":Return full list to user;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"kimshitong":11}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"title: MediConnect","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T08-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T08-1/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T08-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-T08-1/tp)","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"**MediConnect is a desktop application for managing your patient and doctor details as well as appointment.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"* If you are interested in using MediConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"* If you are interested about developing MediConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yanghengtang":6,"-":13}},{"path":"docs/team/cheeggered.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"title: Chee Teng\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"### Project: MediConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"AddressBook - MediConnect is a desktop address book application used for managing hospital staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"  * What it does: ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"  * Justification: ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"  * PRs reviewed (with non-trivial review comments): []()","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"  * Contributed to forum discussions (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"  * Integrated a third party library (Natty) to the project ([]())","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"derekjxtan":39}},{"path":"docs/team/derekjxtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"title: Derek\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"### Project: MediConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"AddressBook - MediConnect is a desktop address book application used for managing hospital staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"  * What it does: ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"  * Justification: ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"  * PRs reviewed (with non-trivial review comments): []()","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"  * Contributed to forum discussions (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"  * Integrated a third party library (Natty) to the project ([]())","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"derekjxtan":39}},{"path":"docs/team/kimshitong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"title: Shi Tong\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"### Project: MediConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"AddressBook - MediConnect is a desktop address book application used for managing hospital staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"  * What it does: ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"  * Justification: ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"  * PRs reviewed (with non-trivial review comments): []()","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"  * Contributed to forum discussions (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"  * Integrated a third party library (Natty) to the project ([]())","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"derekjxtan":39}},{"path":"docs/team/mounilsankar.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"title: Mounil\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"### Project: MediConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"AddressBook - MediConnect is a desktop address book application used for managing hospital staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"  * What it does: ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"  * Justification: ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"  * PRs reviewed (with non-trivial review comments): []()","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"  * Contributed to forum discussions (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"  * Integrated a third party library (Natty) to the project ([]())","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"derekjxtan":39}},{"path":"docs/team/yanghengtang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"title: Yang Heng\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"### Project: MediConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"AddressBook - MediConnect is a desktop address book application used for managing hospital staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"  * What it does: ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"  * Justification: ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"  * PRs reviewed (with non-trivial review comments): []()","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"  * Contributed to forum discussions (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"  * Integrated a third party library (Natty) to the project ([]())","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"derekjxtan":39}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.storage.DatabaseStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.storage.JsonDatabaseStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing MediConnect ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"        DatabaseStorage databaseStorage \u003d new JsonDatabaseStorage(userPrefs.getDatabaseFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"        storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"        logger.info(\"Using data file : \" + storage.getDatabaseFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"        Optional\u003cReadOnlyDatabase\u003e databaseOptional;","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"        ReadOnlyDatabase initialData;","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"            databaseOptional \u003d storage.readDatabase();","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"            if (!databaseOptional.isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"                logger.info(\"Creating a new data file \" + storage.getDatabaseFilePath()","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"                        + \" populated with a sample Database.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"            initialData \u003d databaseOptional.orElseGet(() -\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"                try {","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"                    return SampleDataUtil.getSampleDatabase();","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"                    logger.warning(\"Data file at \" + storage.getDatabaseFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"                            + \" Will be starting with an empty Database.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"                    return new Database();","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"            });","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"            logger.warning(\"Data file at \" + storage.getDatabaseFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"                    + \" Will be starting with an empty Database.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"            initialData \u003d new Database();","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"yanghengtang"},"content":"        logger.info(\"Starting MediConnect \" + MainApp.VERSION);","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping MediConnect ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yanghengtang":18,"mounilsankar":13,"-":164}},{"path":"src/main/java/seedu/address/commons/util/lambdautil/CheckedFunction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.commons.util.lambdautil;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * A equivalent Interface for Functions that throws checked exceptions.","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" * @param \u003cT\u003e Type of the input to the CheckedFunction.","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":" * @param \u003cR\u003e Type of the output of the CheckedFunction.","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"@FunctionalInterface","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"public interface CheckedFunction\u003cT, R\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"    R apply(T t) throws Exception;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"derekjxtan":11}},{"path":"src/main/java/seedu/address/commons/util/lambdautil/CheckedFunctionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.commons.util.lambdautil;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":" * This class handles the conversion of a CheckedFunction to a Function.","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"public class CheckedFunctionUtil {","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"     * Converts a CheckedFunction to a Function.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"     * Throws runtime error when a checked exception is thrown.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"     * @param \u003cT\u003e Input type of the Function.","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"     * @param \u003cR\u003e Return type of the Function.","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"     * @param checkedFunction Function that throws a checked exception.","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"     * @return An equivalent Function to the CheckedFunction.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    public static \u003cT, R\u003e Function\u003cT, R\u003e unchecked(CheckedFunction\u003cT, R\u003e checkedFunction) {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"        return t -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"            try {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"                return checkedFunction.apply(t);","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"                throw new RuntimeException(e.getMessage());","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        };","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"derekjxtan":26}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"     * Returns the database.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"     * @see Model#getDatabase()","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    ReadOnlyDatabase getDatabase();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    /** Returns an unmodifiable view of the filtered list of Appointments */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    /** Returns an unmodifiable view of the filtered list of Patients */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    /** Returns an unmodifiable view of the filtered list of Doctors */","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    ObservableList\u003cDoctor\u003e getFilteredDoctorList();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"    /** Returns the selected appointment in the model */","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    Appointment getSelectedAppointment();","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    /** Returns the selected doctor in the model */","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"    Doctor getSelectedDoctor();","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"    /** Returns the selected patient in the model */","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"    Patient getSelectedPatient();","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":10,"mounilsankar":16,"-":42}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.logic.parser.MediConnectParser;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    private final MediConnectParser mediConnectParser;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        mediConnectParser \u003d new MediConnectParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        Command command \u003d mediConnectParser.parseCommand(commandText);","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"            storage.saveDatabase(model.getDatabase());","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"    public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        return model.getDatabase();","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"        return model.getFilteredDoctorList();","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"    public Appointment getSelectedAppointment() {","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"        return model.getSelectedAppointment();","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"    public Doctor getSelectedDoctor() {","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"        return model.getSelectedDoctor();","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"    public Patient getSelectedPatient() {","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"        return model.getSelectedPatient();","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"        return model.getDatabaseFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":21,"mounilsankar":19,"-":75}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"            \"The appointment index provided is invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d patients listed!\";","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX \u003d \"The doctor index provided is invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_DOCTORS_LISTED_OVERVIEW \u003d \"%1$d doctors listed!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"     * Formats the {@code appointment} for display to the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"    public static String format(Appointment appointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"        builder.append(\"Patient NRIC: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"                .append(appointment.getPatientNric())","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"                .append(\"; Doctor NRIC: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"                .append(appointment.getDoctorNric())","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"                .append(\"; From: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"                .append(appointment.getStartTime())","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"                .append(\"; to: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"                .append(appointment.getEndTime());","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"     * Formats the {@code patient} for display to the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    public static String format(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        builder.append(patient.getName())","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"                .append(patient.getPhone())","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"                .append(\"; NRIC: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"                .append(patient.getNric());","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"     * Formats the {@code doctor} for display to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"    public static String format(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"        builder.append(doctor.getName())","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"                .append(\"; Nric: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"                .append(doctor.getNric());","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mounilsankar":19,"-":40,"kimshitong":15,"cheeggered":11}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    public static final String COMMAND_WORD \u003d \"add_a\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment to the database. \"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_PATIENT_NRIC + \"PATIENT_NRIC \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_DOCTOR_NRIC + \"DOCTOR_NRIC \\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_APPOINTMENT_START_TIME + \"START_TIME \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_APPOINTMENT_END_TIME + \"END_TIME \\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_PATIENT_NRIC + \"S9912343G \"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_DOCTOR_NRIC + \"T0212385J \"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_APPOINTMENT_START_TIME + \"2023-09-11 07:30 \"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_APPOINTMENT_END_TIME + \"2023-09-11 08:00 \";","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"            \"This Appointment already exists in the database\";","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_INVALID_DOCTOR \u003d \"This Doctor does not exist in the database\";","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_INVALID_PATIENT \u003d \"This Patient does not exist in the database\";","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_OVERLAPPING_PATIENT_APPOINTMENTS \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"            \"Appointment overlaps with an existing appointment of Patient\";","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_OVERLAPPING_DOCTOR_APPOINTMENTS \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"            \"Appointment overlaps with an existing appointment of Doctor\";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        if (!model.hasDoctorWithNric(toAdd.getDoctorNric())) {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(MESSAGE_INVALID_DOCTOR);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        if (!model.hasPatientWithNric(toAdd.getPatientNric())) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(MESSAGE_INVALID_PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof AddAppointmentCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"        AddAppointmentCommand otherAddCommand \u003d (AddAppointmentCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hash(toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":3,"mounilsankar":101,"derekjxtan":1}},{"path":"src/main/java/seedu/address/logic/commands/AddDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.exceptions.DuplicateItemException;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":" * Adds a doctor to the database.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"public class AddDoctorCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public static final String COMMAND_WORD \u003d \"add_d\";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a doctor to the database. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_NRIC + \"NRIC \\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_NRIC + \"T0212385J\\n \";","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New doctor added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"This doctor already exists in the database\";","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    private final Doctor toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"     * Creates an AddDoctorCommand to add the specified {@code Doctor}","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    public AddDoctorCommand(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        toAdd \u003d doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"            model.addDoctor(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        if (!(other instanceof AddDoctorCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        AddDoctorCommand otherAddCommand \u003d (AddDoctorCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"        return Objects.hash(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":3,"derekjxtan":4,"mounilsankar":4,"kimshitong":71}},{"path":"src/main/java/seedu/address/logic/commands/AddMedicalConditionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":" * Adds a medical condition to an existing patient in the database.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"public class AddMedicalConditionCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    public static final String COMMAND_WORD \u003d \"add_tag_p\";","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            + \": Adds a medical condition to the patient identified \"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"            + PREFIX_TAG + \"[MEDICAL CONDITION]\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"            + PREFIX_TAG + \"diabetes\";","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_ADD_CONDITION_SUCCESS \u003d \"New medical condition added: %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_ADD_CONDITION_FAILURE \u003d \"The medical condition \"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"            + \"already exists in patient: %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    private final Tag medicalCondition;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     * @param index of the patient in the filtered patient list to add the medical condition","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"     * @param medicalCondition of the patient to be updated to","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    public AddMedicalConditionCommand(Index index, Tag medicalCondition) {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        requireAllNonNull(index, medicalCondition);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        return Objects.hash(this.index, this.medicalCondition);","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        if (patientToEdit.getTags().contains(medicalCondition)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"            throw new CommandException(String.format(MESSAGE_ADD_CONDITION_FAILURE, this.medicalCondition.tagName));","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"        HashSet\u003cTag\u003e currentConditions \u003d patientToEdit.getTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        currentConditions.add(this.medicalCondition);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d new Patient(","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"                patientToEdit.getName(), patientToEdit.getPhone(),","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"                patientToEdit.getNric(), patientToEdit.getRemark(), currentConditions);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_CONDITION_SUCCESS, medicalCondition.tagName));","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"        if (!(other instanceof AddMedicalConditionCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand command \u003d (AddMedicalConditionCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        return index.equals(command.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"                \u0026\u0026 medicalCondition.equals(command.medicalCondition);","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"cheeggered":91}},{"path":"src/main/java/seedu/address/logic/commands/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.exceptions.DuplicateItemException;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":" * Adds a patient to the database.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"public class AddPatientCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    public static final String COMMAND_WORD \u003d \"add_p\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to the database. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_PHONE + \"PHONE \\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_NRIC + \"T0212385J \"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_PHONE + \"98765432 \";","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the database\";","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    private final Patient toAdd;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     * Creates an AddPatientCommand to add the specified {@code Patient}","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        return Objects.hash(this.toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"            model.addPatient(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"        if (!(other instanceof AddPatientCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"        AddPatientCommand otherAddPatientCommand \u003d (AddPatientCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"        return toAdd.equals(otherAddPatientCommand.toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":3,"derekjxtan":5,"mounilsankar":3,"cheeggered":73}},{"path":"src/main/java/seedu/address/logic/commands/AddPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":" * Adds a prescription to an existing appointment in the database.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"public class AddPrescriptionCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    public static final String COMMAND_WORD \u003d \"add_tag_a\";","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"            + \": Adds the prescription to the appointment identified \"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"            + \"by the index number used in the last appointment listing. \"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"            + \"Existing tags will not be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_TAG + \" [PRESCRIPTION]\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_TAG + \"CoughSyrup\";","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_ADD_PRESCRIPTION_SUCCESS \u003d \"Added prescription to Appointment: %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_ADD_PRESCRIPTION_FAILURE \u003d \"The prescription \"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"            + \"already exist in Appointment: %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    private final Tag prescription;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"     * @param index of the appointment in the filtered appointment list to add prescription to","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"     * @param prescription of the appointment to be updated","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    public AddPrescriptionCommand(Index index, Tag prescription) {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"        requireAllNonNull(index, prescription);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        this.prescription \u003d prescription;","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        HashSet\u003cTag\u003e currentPrescriptions \u003d appointmentToEdit.getTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        if (currentPrescriptions.contains(prescription)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(String.format(MESSAGE_ADD_PRESCRIPTION_FAILURE, prescription));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        currentPrescriptions.add(prescription);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d new Appointment(","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"                appointmentToEdit.getDoctorNric(), appointmentToEdit.getPatientNric(),","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"                appointmentToEdit.getStartTime(),","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"                appointmentToEdit.getEndTime(), appointmentToEdit.getRemark(), currentPrescriptions);","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_PRESCRIPTION_SUCCESS, editedAppointment));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hash(this.index, this.prescription);","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof AddPrescriptionCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"        AddPrescriptionCommand c \u003d (AddPrescriptionCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"        return index.equals(c.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"                \u0026\u0026 prescription.equals(c.prescription);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"mounilsankar":97}},{"path":"src/main/java/seedu/address/logic/commands/AddSpecialisationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DOCTORS;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":" * Adds a specialisation for a doctor in the database.","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"public class AddSpecialisationCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    public static final String COMMAND_WORD \u003d \"add_tag_d\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"            + \": Adds a specialisation tag to the doctor identified \"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"            + \"by the index number used in the displayed doctor list.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"            + PREFIX_TAG + \"[SPECIALISATION]\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_TAG + \"Orthopaedic\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_ADD_SPECIALISATION_SUCCESS \u003d \"New Specialisation added: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_ADD_SPECIALISATION_FAILURE \u003d \"The specialisation \"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"            + \"already exists in doctor: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"    private final Tag specialisation;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"     * Creates an AddSpecialisationCommand to add the specified {@code Doctor}","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    public AddSpecialisationCommand(Index index, Tag specialisation) {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        requireAllNonNull(index, specialisation);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        this.specialisation \u003d specialisation;","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        Doctor doctorToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        HashSet\u003cTag\u003e doctorTags \u003d doctorToEdit.getTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        if (doctorTags.contains(specialisation)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"            throw new CommandException(String.format(MESSAGE_ADD_SPECIALISATION_FAILURE, specialisation));","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        doctorTags.add(specialisation);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d new Doctor(","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"                doctorToEdit.getName(), doctorToEdit.getNric(),","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"                doctorToEdit.getRemark(), doctorTags);","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        model.setDoctor(doctorToEdit, editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"        model.updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_SPECIALISATION_SUCCESS, editedDoctor));","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        if (!(other instanceof AddSpecialisationCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand otherAddCommand \u003d (AddSpecialisationCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"        return index.equals(otherAddCommand.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"                \u0026\u0026 specialisation.equals(otherAddCommand.specialisation);","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        return Objects.hash(index, specialisation);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"                .add(\"specialisation\", specialisation)","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"                .toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kimshitong":108}},{"path":"src/main/java/seedu/address/logic/commands/AppointmentRemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":" * Changes the remark of an existing appointment in the database.","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentRemarkCommand extends Command {","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    public static final String COMMAND_WORD \u003d \"remark_a\";","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"            + \": Edits the remark of the appointment identified \"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"            + \"by the index number used in the last appointment listing. \"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_REMARK + \" [REMARK]\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_REMARK + \" Patient to follow up in 1 month.\";","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Appointment at index %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Appointment at index %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    private final Index index;","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"     * @param index of the appointment in the filtered appointment list to edit the remark","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"     * @param remark of the appointment to be updated to","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentRemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d new Appointment(","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"                appointmentToEdit.getDoctorNric(), appointmentToEdit.getPatientNric(),","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"                appointmentToEdit.getStartTime(),","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"                appointmentToEdit.getEndTime(), remark, appointmentToEdit.getTags());","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        return new CommandResult(generateSuccessMessage(index));","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"     * {@code appointmentToEdit}.","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"    private String generateSuccessMessage(Index index) {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"        String message \u003d !remark.remark.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        return String.format(message, index.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hash(this.index, this.remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof AppointmentRemarkCommand)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"        AppointmentRemarkCommand e \u003d (AppointmentRemarkCommand) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"mounilsankar":98}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    private final boolean showAppointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    private final boolean showDoctor;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    private final boolean showPatient;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult(String feedbackToUser, boolean showAppointment, boolean showDoctor,","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"                         boolean showPatient, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        this.showAppointment \u003d showAppointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        this.showDoctor \u003d showDoctor;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        this.showPatient \u003d showPatient;","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        this(feedbackToUser, false, false, false, false, false);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code showHelp},","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"     * {@code exit}, and other fields set to their default value.","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        this(feedbackToUser, false, false, false, showHelp, exit);","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code showAppointment},","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"     * {@code showDoctor}, {@code showPatient}, and other fields set to their default value.","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult(String feedbackToUser, boolean showAppointment, boolean showDoctor, boolean showPatient) {","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"        this(feedbackToUser, showAppointment, showDoctor, showPatient, false, false);","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"    public boolean isShowAppointment() {","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"        return showAppointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"    public boolean isShowDoctor() {","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"        return showDoctor;","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"    public boolean isShowPatient() {","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"        return showPatient;","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 showAppointment \u003d\u003d otherCommandResult.showAppointment","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 showDoctor \u003d\u003d otherCommandResult.showDoctor","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 showPatient \u003d\u003d otherCommandResult.showPatient","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"yanghengtang"},"content":"        return Objects.hash(feedbackToUser, showAppointment, showDoctor, showPatient, showHelp, exit);","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"yanghengtang"},"content":"                .add(\"showAppointment\", showAppointment)","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"yanghengtang"},"content":"                .add(\"showDoctor\", showDoctor)","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"yanghengtang"},"content":"                .add(\"showPatient\", showPatient)","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yanghengtang":50,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":" * Deletes an Appointment identified using it\u0027s displayed index from the database.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    public static final String COMMAND_WORD \u003d \"delete_a\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"            + \": Deletes the appointment identified by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public DeleteAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"                Messages.format(appointmentToDelete)));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof DeleteAppointmentCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        DeleteAppointmentCommand otherDeleteAppointmentCommand \u003d (DeleteAppointmentCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        return targetIndex.equals(otherDeleteAppointmentCommand.targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"        return Objects.hash(this.targetIndex);","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":4,"mounilsankar":73}},{"path":"src/main/java/seedu/address/logic/commands/DeleteDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":" * Deletes a doctor identified using it\u0027s displayed index from the database.","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"public class DeleteDoctorCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    public static final String COMMAND_WORD \u003d \"delete_d\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"            + \": Deletes the doctor identified by the index number used in the displayed doctor list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_DELETE_DOCTOR_SUCCESS \u003d \"Deleted Doctor: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public DeleteDoctorCommand(Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        Doctor doctorToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        model.deleteDoctor(doctorToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DOCTOR_SUCCESS, Messages.format(doctorToDelete)));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        if (!(other instanceof DeleteDoctorCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand otherDeleteCommand \u003d (DeleteDoctorCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        return Objects.hash(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":1,"mounilsankar":2,"-":53,"kimshitong":17}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMedicalConditionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":" * Deletes a medical condition of an existing patient in the database.","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"public class DeleteMedicalConditionCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    public static final String COMMAND_WORD \u003d \"delete_tag_p\";","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"            + \": Deletes a medical condition of the patient \"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"            + \"t\\\\ [MEDICAL CONDITION]\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"            + \"t\\\\ diabetes \";","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_DELETE_CONDITION_SUCCESS \u003d \"Medical condition deleted: %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_DELETE_CONDITION_FAILURE \u003d \"Medical condition does not exist in patient: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    private final Tag medicalCondition;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     * @param index of the patient in the filtered patient list to delete the medical condition","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     * @param medicalCondition of the patient to be updated to","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    public DeleteMedicalConditionCommand(Index index, Tag medicalCondition) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        requireAllNonNull(index, medicalCondition);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        return Objects.hash(this.index, this.medicalCondition);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        HashSet\u003cTag\u003e currentConditions \u003d patientToEdit.getTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        if (!currentConditions.contains(medicalCondition)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_CONDITION_FAILURE, medicalCondition.tagName));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        currentConditions.remove(medicalCondition);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d new Patient(","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"                patientToEdit.getName(), patientToEdit.getPhone(),","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"                patientToEdit.getNric(),","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"                patientToEdit.getRemark(), currentConditions);","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CONDITION_SUCCESS, medicalCondition.tagName));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"        if (!(other instanceof DeleteMedicalConditionCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"        DeleteMedicalConditionCommand command \u003d (DeleteMedicalConditionCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"        return index.equals(command.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"                \u0026\u0026 medicalCondition.equals(command.medicalCondition);","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"cheeggered":95}},{"path":"src/main/java/seedu/address/logic/commands/DeletePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":" * Deletes a patient identified using it\u0027s displayed index from the database.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"public class DeletePatientCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public static final String COMMAND_WORD \u003d \"delete_p\";","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted patient: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    public DeletePatientCommand(Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"        return Objects.hash(this.targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        Patient patientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        model.deletePatient(patientToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, Messages.format(patientToDelete)));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        if (!(other instanceof DeletePatientCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand otherDeletePatientCommand \u003d (DeletePatientCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"        return targetIndex.equals(otherDeletePatientCommand.targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":3,"mounilsankar":1,"cheeggered":71}},{"path":"src/main/java/seedu/address/logic/commands/DeletePrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":" * Deletes a prescription from an existing appointment in the database.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"public class DeletePrescriptionCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    public static final String COMMAND_WORD \u003d \"delete_tag_a\";","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"            + \": Deletes the prescription from the appointment identified \"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"            + \"by the index number used in the last appointment listing. \"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_TAG + \" [PRESCRIPTION]\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_TAG + \"CoughSyrup\";","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_DELETE_PRESCRIPTION_SUCCESS \u003d \"Deleted prescription from Appointment: %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_DELETE_PRESCRIPTION_FAILURE \u003d \"The prescription \"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"            + \"does not exist in Appointment: %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    private final Tag prescription;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"     * @param index of the appointment in the filtered appointment list to delete prescription from","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"     * @param prescription of the appointment to be updated","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    public DeletePrescriptionCommand(Index index, Tag prescription) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        requireAllNonNull(index, prescription);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        this.prescription \u003d prescription;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"        HashSet\u003cTag\u003e currentPrescriptions \u003d appointmentToEdit.getTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"        if (!currentPrescriptions.contains(prescription)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_PRESCRIPTION_FAILURE, prescription));","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"        currentPrescriptions.remove(prescription);","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d new Appointment(","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"                appointmentToEdit.getDoctorNric(), appointmentToEdit.getPatientNric(),","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"                appointmentToEdit.getStartTime(),","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"                appointmentToEdit.getEndTime(), appointmentToEdit.getRemark(), currentPrescriptions);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PRESCRIPTION_SUCCESS, editedAppointment));","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hash(this.index, this.prescription);","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof DeletePrescriptionCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"        DeletePrescriptionCommand c \u003d (DeletePrescriptionCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"        return index.equals(c.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"                \u0026\u0026 prescription.equals(c.prescription);","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"mounilsankar":96}},{"path":"src/main/java/seedu/address/logic/commands/DeleteSpecialisationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DOCTORS;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":" * Deletes a specialisation of an existing doctor in the database.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"public class DeleteSpecialisationCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public static final String COMMAND_WORD \u003d \"delete_tag_d\";","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"            + \": Deletes a specialisation of the doctor \"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"            + \"by the index number used in the last doctor listing. \"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"            + PREFIX_TAG + \" [SPECIALISATION]\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"            + PREFIX_TAG + \" Orthopaedic \";","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_DELETE_SPECIALISATION_SUCCESS \u003d \"Specialisation deleted: %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_DELETE_SPECIALISATION_FAILURE \u003d \"Specialisation does not exist: %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    private final Tag specialisation;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"     * @param index of the doctor in the filtered doctor list to delete the specialisation","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"     * @param specialisation of the doctor to be deleted to","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"    public DeleteSpecialisationCommand(Index index, Tag specialisation) {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        requireAllNonNull(index, specialisation);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        this.specialisation \u003d specialisation;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        return Objects.hash(this.index, this.specialisation);","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        Doctor doctorToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        HashSet\u003cTag\u003e currentConditions \u003d doctorToEdit.getTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        if (!currentConditions.contains(specialisation)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_SPECIALISATION_FAILURE,","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"                    specialisation.tagName));","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        currentConditions.remove(specialisation);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d new Doctor(","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"                doctorToEdit.getName(),","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"                doctorToEdit.getNric(),","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"                doctorToEdit.getRemark(), currentConditions);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"        model.setDoctor(doctorToEdit, editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        model.updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SPECIALISATION_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"                specialisation.tagName));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        if (!(other instanceof DeleteSpecialisationCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"        DeleteSpecialisationCommand command \u003d (DeleteSpecialisationCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"        return index.equals(command.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"                \u0026\u0026 specialisation.equals(command.specialisation);","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kimshitong":98}},{"path":"src/main/java/seedu/address/logic/commands/DoctorRemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DOCTORS;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":" * Changes the remark of an existing doctor in the database.","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"public class DoctorRemarkCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public static final String COMMAND_WORD \u003d \"remark_d\";","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"            + \": Edits the remark of the doctor identified \"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"            + \"by the index number used in the last doctor listing. \"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"            + PREFIX_REMARK + \" [REMARK]\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"            + PREFIX_REMARK + \" Doctor will not be in clinic until  30/12/2023.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Doctor at index %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Doctor at index %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"     * @param index of the doctor in the filtered doctor list to edit the remark","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"     * @param remark of the doctor to be updated to","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    public DoctorRemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        Doctor doctorToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d new Doctor(","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"                doctorToEdit.getName(),","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"                doctorToEdit.getNric(),","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"                remark, doctorToEdit.getTags());","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        model.setDoctor(doctorToEdit, editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        model.updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        return new CommandResult(generateSuccessMessage(index));","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"     * {@code doctorToEdit}.","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    private String generateSuccessMessage(Index index) {","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"        String message \u003d !remark.remark.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"        return String.format(message, index.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"        return Objects.hash(this.index, this.remark);","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"        if (!(other instanceof DoctorRemarkCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"        DoctorRemarkCommand e \u003d (DoctorRemarkCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"mounilsankar":5,"kimshitong":95}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import java.util.List;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":" * Edits the details of an existing appointment in the database.","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    public static final String COMMAND_WORD \u003d \"edit_a\";","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the appointment identified \"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"            + \"by the index number used in the displayed appointment list. \"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"            + \"[\" + PREFIX_PATIENT_NRIC + \"PATIENT_NRIC] \"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"            + \"[\" + PREFIX_DOCTOR_NRIC + \"DOCTOR_NRIC] \"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"            + \"[\" + PREFIX_APPOINTMENT_START_TIME + \"START_TIME] \"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"            + \"[\" + PREFIX_APPOINTMENT_END_TIME + \"END_TIME]...\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_PATIENT_NRIC + \"T0123456J \"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_DOCTOR_NRIC + \"T5012345A \"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_APPOINTMENT_START_TIME + \"2023-09-12 07:30 \"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_APPOINTMENT_END_TIME + \"2023-09-12 08:00\";","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Edited Appointment: %1$s\";","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the database.\";","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"    private final Index index;","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"     * @param index of the Appointment in the filtered appointment list to edit","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"     * @param editAppointmentDescriptor details to edit the appointment with","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"    public EditAppointmentCommand(Index index, EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editAppointmentDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"        if (!appointmentToEdit.isSame(editedAppointment) \u0026\u0026 model.hasAppointment(editedAppointment)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS, Messages.format(editedAppointment)));","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"     * Creates and returns a {@code Appointment} with the details of {@code appointmentToEdit}","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"     * edited with {@code editAppointmentDescriptor}.","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"    private static Appointment createEditedAppointment(Appointment appointmentToEdit,","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"                                                       EditAppointmentDescriptor editAppointmentDescriptor)","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"        Nric updatedPatientNric \u003d editAppointmentDescriptor.getPatientNric().orElse(appointmentToEdit.getPatientNric());","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"        Nric updatedDoctorNric \u003d editAppointmentDescriptor.getDoctorNric().orElse(appointmentToEdit.getDoctorNric());","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"        AppointmentStartTime updatedStartTime \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"                editAppointmentDescriptor.getAppointmentStartTime()","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"                        .orElse(appointmentToEdit.getStartTime());","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEndTime updateEndTime \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"                editAppointmentDescriptor.getAppointmentEndTime()","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"                        .orElse(appointmentToEdit.getEndTime());","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"        return new Appointment(updatedDoctorNric, updatedPatientNric, updatedStartTime, updateEndTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand otherEditAppointmentCommand \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"        return index.equals(otherEditAppointmentCommand.index)","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"                \u0026\u0026 editAppointmentDescriptor.equals(otherEditAppointmentCommand.editAppointmentDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hash(index, editAppointmentDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"                .add(\"editAppointmentDescriptor\", editAppointmentDescriptor)","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"                .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"     * Stores the details to edit the appointment with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"     * corresponding field value of the appointment.","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"        private Nric patientNric;","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"        private Nric doctorNric;","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"        private AppointmentStartTime startTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"        private AppointmentEndTime endTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"        public EditAppointmentDescriptor() {}","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"        /**","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"         */","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"            setPatientNric(toCopy.patientNric);","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"            setDoctorNric(toCopy.doctorNric);","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"            setAppointmentStartTime(toCopy.startTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"            setAppointmentEndTime(toCopy.endTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"        /**","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"         */","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"            return CollectionUtil.isAnyNonNull(patientNric, doctorNric, startTime, endTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"        public void setPatientNric(Nric patientNric) {","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"            this.patientNric \u003d patientNric;","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"mounilsankar"},"content":"        public Optional\u003cNric\u003e getPatientNric() {","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"mounilsankar"},"content":"            return Optional.ofNullable(patientNric);","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"mounilsankar"},"content":"        public void setDoctorNric(Nric doctorNric) {","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"mounilsankar"},"content":"            this.doctorNric \u003d doctorNric;","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"mounilsankar"},"content":"        public Optional\u003cNric\u003e getDoctorNric() {","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"mounilsankar"},"content":"            return Optional.ofNullable(doctorNric);","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":178,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"mounilsankar"},"content":"        public void setAppointmentStartTime(AppointmentStartTime startTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"mounilsankar"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":181,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"mounilsankar"},"content":"        public Optional\u003cAppointmentStartTime\u003e getAppointmentStartTime() {","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"mounilsankar"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"mounilsankar"},"content":"        public void setAppointmentEndTime(AppointmentEndTime endTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"mounilsankar"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"mounilsankar"},"content":"        public Optional\u003cAppointmentEndTime\u003e getAppointmentEndTime() {","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"mounilsankar"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":194,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":195,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":196,"author":{"gitId":"mounilsankar"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"mounilsankar"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":198,"author":{"gitId":"mounilsankar"},"content":"                return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":199,"author":{"gitId":"mounilsankar"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":200,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"mounilsankar"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"mounilsankar"},"content":"            if (!(other instanceof EditAppointmentDescriptor)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":203,"author":{"gitId":"mounilsankar"},"content":"                return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"mounilsankar"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"mounilsankar"},"content":"            EditAppointmentDescriptor otherEditAppointmentDescriptor \u003d (EditAppointmentDescriptor) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"mounilsankar"},"content":"            return Objects.equals(patientNric, otherEditAppointmentDescriptor.patientNric)","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"mounilsankar"},"content":"                    \u0026\u0026 Objects.equals(doctorNric, otherEditAppointmentDescriptor.doctorNric)","lastModifiedDate":"2023-10-21"},{"lineNumber":209,"author":{"gitId":"mounilsankar"},"content":"                    \u0026\u0026 Objects.equals(startTime, otherEditAppointmentDescriptor.startTime)","lastModifiedDate":"2023-10-21"},{"lineNumber":210,"author":{"gitId":"mounilsankar"},"content":"                    \u0026\u0026 Objects.equals(endTime, otherEditAppointmentDescriptor.endTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":211,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":212,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":213,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":214,"author":{"gitId":"mounilsankar"},"content":"        public int hashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":215,"author":{"gitId":"mounilsankar"},"content":"            return Objects.hash(patientNric, doctorNric, startTime, endTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":216,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":217,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":218,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":219,"author":{"gitId":"mounilsankar"},"content":"        public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":220,"author":{"gitId":"mounilsankar"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":221,"author":{"gitId":"mounilsankar"},"content":"                    .add(\"patientNric\", patientNric)","lastModifiedDate":"2023-10-21"},{"lineNumber":222,"author":{"gitId":"mounilsankar"},"content":"                    .add(\"doctorNric\", doctorNric)","lastModifiedDate":"2023-10-21"},{"lineNumber":223,"author":{"gitId":"mounilsankar"},"content":"                    .add(\"startTime\", startTime)","lastModifiedDate":"2023-10-21"},{"lineNumber":224,"author":{"gitId":"mounilsankar"},"content":"                    .add(\"endTime\", endTime)","lastModifiedDate":"2023-10-21"},{"lineNumber":225,"author":{"gitId":"mounilsankar"},"content":"                    .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":226,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":227,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":228,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"yanghengtang":4,"mounilsankar":224}},{"path":"src/main/java/seedu/address/logic/commands/EditDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DOCTORS;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":" * Edits the details of an existing doctor in the database.","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"public class EditDoctorCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    public static final String COMMAND_WORD \u003d \"edit_d\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the doctor identified \"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"            + \"by the index number used in the displayed doctor list. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"            + \"[\" + PREFIX_NRIC + \"NRIC]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"            + PREFIX_NAME + \"BOBE \"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"            + PREFIX_NRIC + \"T5012345A\";","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_EDIT_DOCTOR_SUCCESS \u003d \"Edited Doctor: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"This doctor already exists in the database.\";","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"    private final EditDoctorDescriptor editDoctorDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"     * @param index of the doctor in the filtered doctor list to edit","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"     * @param editDoctorDescriptor details to edit the doctor with","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    public EditDoctorCommand(Index index, EditDoctorDescriptor editDoctorDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        requireNonNull(editDoctorDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        this.editDoctorDescriptor \u003d new EditDoctorDescriptor(editDoctorDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        Doctor doctorToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d createEditedDoctor(doctorToEdit, editDoctorDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        if (!doctorToEdit.isSame(editedDoctor) \u0026\u0026 model.hasDoctor(editedDoctor)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        model.setDoctor(doctorToEdit, editedDoctor);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"        model.updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_DOCTOR_SUCCESS, Messages.format(editedDoctor)));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"     * Creates and returns a {@code Doctor} with the details of {@code doctorToEdit}","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"     * edited with {@code editDoctorDescriptor}.","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"    private static Doctor createEditedDoctor(Doctor doctorToEdit, EditDoctorDescriptor editDoctorDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        assert doctorToEdit !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"        Name updatedName \u003d editDoctorDescriptor.getName().orElse(doctorToEdit.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"        Nric updatedNric \u003d editDoctorDescriptor.getNric().orElse(doctorToEdit.getNric());","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"        return new Doctor(updatedName, updatedNric);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"        if (!(other instanceof EditDoctorCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand otherEditCommand \u003d (EditDoctorCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"                \u0026\u0026 editDoctorDescriptor.equals(otherEditCommand.editDoctorDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"        return Objects.hash(index, editDoctorDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"                .add(\"editDoctorDescriptor\", editDoctorDescriptor)","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"     * Stores the details to edit the doctor with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"     * corresponding field value of the doctor.","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"    public static class EditDoctorDescriptor {","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"        private Name name;","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"        private Nric nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"        public EditDoctorDescriptor() {}","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"        public EditDoctorDescriptor(EditDoctorDescriptor toCopy) {","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"            return CollectionUtil.isAnyNonNull(name, nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"                return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"            if (!(other instanceof EditDoctorDescriptor)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"                return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"            EditDoctorDescriptor otherEditDoctorDescriptor \u003d (EditDoctorDescriptor) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"            return Objects.equals(name, otherEditDoctorDescriptor.name)","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"                    \u0026\u0026 Objects.equals(nric, otherEditDoctorDescriptor.nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"        public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"            return Objects.hash(name, nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"kimshitong"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"        public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"kimshitong"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"kimshitong"},"content":"                    .add(\"nric\", nric)","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"kimshitong"},"content":"                    .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":4,"mounilsankar":2,"kimshitong":185}},{"path":"src/main/java/seedu/address/logic/commands/EditPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":" * Edits the details of an existing patient in the database.","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"public class EditPatientCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    public static final String COMMAND_WORD \u003d \"edit_p\";","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient identified \"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"            + \"by the index number used in the displayed patient list. \"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"            + \"[\" + PREFIX_NRIC + \"NRIC]...\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"            + PREFIX_NRIC + \"A1234567B\";","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_EDIT_PATIENT_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the database.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    private final Index index;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"     * @param editPatientDescriptor details to edit the patient with","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    public EditPatientCommand(Index index, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"        return Objects.hash(this.index, this.editPatientDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"        if (!patientToEdit.isSame(editedPatient) \u0026\u0026 model.hasPatient(editedPatient)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"        model.updateFilteredPatientList(Model.PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, Messages.format(editedPatient)));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"        Nric updatedNric \u003d editPatientDescriptor.getNric().orElse(patientToEdit.getNric());","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"        return new Patient(updatedName, updatedPhone, updatedNric);","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"        if (!(other instanceof EditPatientCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand otherEditPatientCommand \u003d (EditPatientCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"        return index.equals(otherEditPatientCommand.index)","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"                \u0026\u0026 editPatientDescriptor.equals(otherEditPatientCommand.editPatientDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"cheeggered"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"                .add(\"editPatientDescriptor\", editPatientDescriptor)","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"    public static class EditPatientDescriptor {","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"cheeggered"},"content":"        private Name name;","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"        private Phone phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"cheeggered"},"content":"        private Nric nric;","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"        public EditPatientDescriptor() {}","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"cheeggered"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"cheeggered"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"cheeggered"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"cheeggered"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"cheeggered"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"cheeggered"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"cheeggered"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"cheeggered"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"cheeggered"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, nric);","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"cheeggered"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"cheeggered"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"cheeggered"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"cheeggered"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"cheeggered"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"cheeggered"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"cheeggered"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"cheeggered"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"cheeggered"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"cheeggered"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"cheeggered"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"cheeggered"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"cheeggered"},"content":"                return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"cheeggered"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"cheeggered"},"content":"            if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"cheeggered"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"cheeggered"},"content":"            EditPatientDescriptor otherEditPatientDescriptor \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"cheeggered"},"content":"            return Objects.equals(name, otherEditPatientDescriptor.name)","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"cheeggered"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPatientDescriptor.phone)","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"cheeggered"},"content":"                    \u0026\u0026 Objects.equals(nric, otherEditPatientDescriptor.nric);","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"cheeggered"},"content":"        public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"cheeggered"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"cheeggered"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"cheeggered"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"cheeggered"},"content":"                    .add(\"nric\", nric)","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"cheeggered"},"content":"                    .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"yanghengtang":4,"cheeggered":197}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting MediConnect as requested ...\";","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"derekjxtan":3,"-":14}},{"path":"src/main/java/seedu/address/logic/commands/FindDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.NameContainsKeywordsDoctorPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":" * Finds and lists all doctors in database whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"public class FindDoctorCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    public static final String COMMAND_WORD \u003d \"find_d\";","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all doctors whose names contain any of \"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    private final NameContainsKeywordsDoctorPredicate predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    public FindDoctorCommand(NameContainsKeywordsDoctorPredicate predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        model.updateFilteredDoctorList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"                String.format(Messages.MESSAGE_DOCTORS_LISTED_OVERVIEW, model.getFilteredDoctorList().size()));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        if (!(other instanceof FindDoctorCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand otherFindCommand \u003d (FindDoctorCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        return Objects.hash(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":1,"-":47,"kimshitong":18}},{"path":"src/main/java/seedu/address/logic/commands/FindPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.NameContainsKeywordsPatientPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":" * Finds and lists all patients in database whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public class FindPatientCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    public static final String COMMAND_WORD \u003d \"find_p\";","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose names contain any of \"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    private final NameContainsKeywordsPatientPredicate predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public FindPatientCommand(NameContainsKeywordsPatientPredicate predicate) {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        return Objects.hash(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"                String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        if (!(other instanceof FindPatientCommand)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand otherFindCommand \u003d (FindPatientCommand) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"                .toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yanghengtang":3,"cheeggered":61}},{"path":"src/main/java/seedu/address/logic/commands/ListAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":" * Lists all Appoiintments in the database to the user.","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"public class ListAppointmentCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    public static final String COMMAND_WORD \u003d \"list_a\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists appointments in the database. \"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_PATIENT_NRIC + \"PATIENT_NRIC \"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"            + PREFIX_DOCTOR_NRIC + \"DOCTOR_NRIC\";","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all appointments\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    public final Predicate\u003cAppointment\u003e predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    public ListAppointmentCommand(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    public ListAppointmentCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        this.predicate \u003d PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof ListAppointmentCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        ListAppointmentCommand otherListAppointmentCommand \u003d (ListAppointmentCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        return predicate.equals(otherListAppointmentCommand.predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hash(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yanghengtang":4,"mounilsankar":67}},{"path":"src/main/java/seedu/address/logic/commands/ListDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DOCTORS;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":" * Lists all doctors in the database to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"public class ListDoctorCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"    public static final String COMMAND_WORD \u003d \"list_d\";","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all doctors\";","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"        model.updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":4,"kimshitong":19}},{"path":"src/main/java/seedu/address/logic/commands/ListPatientsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":" * Lists all patients in the database to the user.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"public class ListPatientsCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"    public static final String COMMAND_WORD \u003d \"list_p\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":4,"cheeggered":20}},{"path":"src/main/java/seedu/address/logic/commands/PatientRemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":" * Changes the remark of an existing patient in the database.","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"public class PatientRemarkCommand extends Command {","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public static final String COMMAND_WORD \u003d \"remark_p\";","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"            + \": Edits the remark of the patient identified \"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"            + \"r\\\\ [REMARK]\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"            + \"r/ Patient to follow up in 1 month.\";","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Patient at index %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Patient at index %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    private final Index index;","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     * @param index of the patient in the filtered patient list to edit the remark","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     * @param remark of the patient to be updated to","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    public PatientRemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        return Objects.hash(this.index, this.remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d new Patient(","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"                patientToEdit.getName(), patientToEdit.getPhone(),","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"                patientToEdit.getNric(), remark, patientToEdit.getTags());","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        return new CommandResult(generateSuccessMessage(index));","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"     * {@code patientToEdit}.","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    private String generateSuccessMessage(Index index) {","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"        String message \u003d !remark.remark.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"        return String.format(message, index.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        if (!(other instanceof PatientRemarkCommand)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"        PatientRemarkCommand command \u003d (PatientRemarkCommand) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"        return index.equals(command.index)","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"                \u0026\u0026 remark.equals(command.remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"mounilsankar":5,"cheeggered":90}},{"path":"src/main/java/seedu/address/logic/commands/ViewAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":" * Views an appointment identified using it\u0027s displayed index from the database.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"public class ViewAppointmentCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    public static final String COMMAND_WORD \u003d \"view_a\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"            + \": Views the specified appointment from the system.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_VIEW_APPOINTMENT_SUCCESS \u003d \"View Appointment: %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public ViewAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        model.updateSelectedAppointment(appointmentToView);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"                Messages.format(appointmentToView)), true, false, false);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof ViewAppointmentCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        ViewAppointmentCommand otherViewAppointmentCommand \u003d (ViewAppointmentCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        return targetIndex.equals(otherViewAppointmentCommand.targetIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hash(this.targetIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"mounilsankar":76}},{"path":"src/main/java/seedu/address/logic/commands/ViewDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":" * Views an doctor identified using it\u0027s displayed index from the database.","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"public class ViewDoctorCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    public static final String COMMAND_WORD \u003d \"view_d\";","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"            + \": Views the specified doctor from the system.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    public static final String MESSAGE_VIEW_DOCTOR_SUCCESS \u003d \"View Doctor: %1$s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public ViewDoctorCommand(Index targetIndex) {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        Doctor doctorToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        model.updateSelectedDoctor(doctorToView);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_DOCTOR_SUCCESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"                Messages.format(doctorToView)), false, true, false);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        if (!(other instanceof ViewDoctorCommand)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand otherViewDoctorCommand \u003d (ViewDoctorCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        return targetIndex.equals(otherViewDoctorCommand.targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        return Objects.hash(this.targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"mounilsankar":2,"kimshitong":74}},{"path":"src/main/java/seedu/address/logic/commands/ViewPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":" * Views a patient identified using it\u0027s displayed index from the database.","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"public class ViewPatientCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public static final String COMMAND_WORD \u003d \"view_p\";","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"            + \": Views the specified patient from the system.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public static final String MESSAGE_VIEW_PATIENT_SUCCESS \u003d \"View Patient: %1$s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    public ViewPatientCommand(Index targetIndex) {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        Patient patientToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        model.updateSelectedPatient(patientToView);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"                Messages.format(patientToView)), false, false, true);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        if (!(other instanceof ViewPatientCommand)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand otherViewPatientCommand \u003d (ViewPatientCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"        return targetIndex.equals(otherViewPatientCommand.targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"        return Objects.hash(this.targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"mounilsankar":2,"cheeggered":74}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAppointmentCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"     * and returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException, CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                        PREFIX_PATIENT_NRIC,","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"                        PREFIX_DOCTOR_NRIC,","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"                        PREFIX_APPOINTMENT_START_TIME, PREFIX_APPOINTMENT_END_TIME);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        if (!arePrefixesPresent(argMultimap,","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_PATIENT_NRIC,","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_DOCTOR_NRIC,","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_APPOINTMENT_START_TIME,","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_APPOINTMENT_END_TIME)","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PATIENT_NRIC,","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_DOCTOR_NRIC,","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_APPOINTMENT_START_TIME,","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_APPOINTMENT_END_TIME);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"        Nric patientNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_PATIENT_NRIC).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"        Nric doctorNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_DOCTOR_NRIC).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"        AppointmentStartTime start \u003d ParserUtil","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"                .parseAppointmentStartTime(argMultimap.getValue(PREFIX_APPOINTMENT_START_TIME).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEndTime end \u003d ParserUtil","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"                .parseAppointmentEndTime(argMultimap.getValue(PREFIX_APPOINTMENT_END_TIME).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointment \u003d new Appointment(doctorNric, patientNric, start, end);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":1,"mounilsankar":68}},{"path":"src/main/java/seedu/address/logic/parser/AddDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":" * Parses input arguments and creates a new AddDoctorCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"public class AddDoctorCommandParser implements Parser\u003cAddDoctorCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDoctorCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     * and returns an AddDoctorCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    public AddDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_NRIC)","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"        Doctor doctor \u003d new Doctor(name, nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        return new AddDoctorCommand(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":1,"kimshitong":51}},{"path":"src/main/java/seedu/address/logic/parser/AddMedicalConditionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddMedicalConditionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":" * Parses input arguments and creates a new {@code AddMedicalConditionCommand} object","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"public class AddMedicalConditionCommandParser implements Parser\u003cAddMedicalConditionCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddMedicalConditionCommand}","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     * and returns a {@code AddMedicalConditionCommand} object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    public AddMedicalConditionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"                    AddMedicalConditionCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"                    pe);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"                    AddMedicalConditionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        Tag condition \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        return new AddMedicalConditionCommand(index, condition);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"cheeggered":54}},{"path":"src/main/java/seedu/address/logic/parser/AddPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":" * Parses input arguments and creates a new AddPatientCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"public class AddPatientCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPatientCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * and returns an AddPatientCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_NRIC, PREFIX_PHONE);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_NRIC, PREFIX_PHONE)","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_NRIC, PREFIX_PHONE);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        Patient patient \u003d new Patient(name, phone, nric);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        return new AddPatientCommand(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":3,"-":37,"cheeggered":14}},{"path":"src/main/java/seedu/address/logic/parser/AddPrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":" * Parses input arguments and creates a new AddPrescriptionCommand object","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"public class AddPrescriptionCommandParser implements Parser\u003cAddPrescriptionCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPrescriptionCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"     * and returns an AddPrescriptionCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    public AddPrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"                    AddPrescriptionCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"                    pe);","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"                    AddPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        Tag prescription \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        return new AddPrescriptionCommand(index, prescription);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"mounilsankar":56}},{"path":"src/main/java/seedu/address/logic/parser/AddSpecialisationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.AddSpecialisationCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":" * Parses input arguments and creates a new AddSpecialisationCommand object","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"public class AddSpecialisationCommandParser implements Parser\u003cAddSpecialisationCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     * Parses the given {@code String} of arguments in the context of the AddSpecialisationCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     * and returns an AddSpecialisationCommand object for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    public AddSpecialisationCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"                    AddSpecialisationCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"                    pe);","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"                    AddSpecialisationCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        Tag specialisation \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        return new AddSpecialisationCommand(index, specialisation);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kimshitong":56}},{"path":"src/main/java/seedu/address/logic/parser/AppointmentRemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.AppointmentRemarkCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":" * Parses input arguments and creates a new {@code AppointmentRemarkCommand} object","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentRemarkCommandParser implements Parser\u003cAppointmentRemarkCommand\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AppointmentRemarkCommand}","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"     * and returns a {@code AppointmentRemarkCommand} object for execution.","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentRemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        Index index;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                    AppointmentRemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        Remark remark \u003d new Remark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        return new AppointmentRemarkCommand(index, remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"mounilsankar":38}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n\\\\\");","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p\\\\\");","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"ic\\\\\");","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t\\\\\");","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r\\\\\");","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    public static final Prefix PREFIX_PATIENT_NRIC \u003d new Prefix(\"pic\\\\\");","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    public static final Prefix PREFIX_DOCTOR_NRIC \u003d new Prefix(\"dic\\\\\");","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    public static final Prefix PREFIX_APPOINTMENT_START_TIME \u003d new Prefix(\"from\\\\\");","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    public static final Prefix PREFIX_APPOINTMENT_END_TIME \u003d new Prefix(\"to\\\\\");","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"mounilsankar":4,"-":10,"cheeggered":5}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":" * Parses input arguments and creates a new DeleteAppointmentCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAppointmentCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"     * and returns a DeleteAppointmentCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"            return new DeleteAppointmentCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":1,"mounilsankar":28}},{"path":"src/main/java/seedu/address/logic/parser/DeleteDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"public class DeleteDoctorCommandParser implements Parser\u003cDeleteDoctorCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteDoctorCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    public DeleteDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"            return new DeleteDoctorCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDoctorCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":1,"-":23,"kimshitong":5}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMedicalConditionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.DeleteMedicalConditionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":" * Parses input arguments and creates a new DeleteMedicalConditionCommand object","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"public class DeleteMedicalConditionCommandParser implements Parser\u003cDeleteMedicalConditionCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMedicalConditionCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     * and returns a DeleteMedicalConditionCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    public DeleteMedicalConditionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"                    DeleteMedicalConditionCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"                    pe);","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"                    DeleteMedicalConditionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        Tag condition \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        return new DeleteMedicalConditionCommand(index, condition);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"cheeggered":56}},{"path":"src/main/java/seedu/address/logic/parser/DeletePatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":" * Parses input arguments and creates a new DeletePatientCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"public class DeletePatientCommandParser implements Parser\u003cDeletePatientCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePatientCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     * and returns a DeletePatientCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    public DeletePatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"            return new DeletePatientCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePatientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":1,"cheeggered":28}},{"path":"src/main/java/seedu/address/logic/parser/DeletePrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.DeletePrescriptionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":" * Parses input arguments and creates a new DeletePrescriptionCommand object","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"public class DeletePrescriptionCommandParser implements Parser\u003cDeletePrescriptionCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePrescriptionCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"     * and returns an DeletePrescriptionCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    public DeletePrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"                    DeletePrescriptionCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"                    pe);","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"                    DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        Tag prescription \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        return new DeletePrescriptionCommand(index, prescription);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"mounilsankar":56}},{"path":"src/main/java/seedu/address/logic/parser/DeleteSpecialisationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DeleteSpecialisationCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" * Parses input arguments and creates a new DeleteSpecialisationCommand object","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"public class DeleteSpecialisationCommandParser implements Parser\u003cDeleteSpecialisationCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteSpecialisationCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     * and returns an DeleteSpecialisationCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public DeleteSpecialisationCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"                    DeleteSpecialisationCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"                    pe);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"                    DeleteSpecialisationCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        Tag specialisation \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        return new DeleteSpecialisationCommand(index, specialisation);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kimshitong":55}},{"path":"src/main/java/seedu/address/logic/parser/DoctorRemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DoctorRemarkCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":" * Parses input arguments and creates a new {@code DoctorRemarkCommand} object","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"public class DoctorRemarkCommandParser implements Parser\u003cDoctorRemarkCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code DoctorRemarkCommand}","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     * and returns a {@code DoctorRemarkCommand} object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public DoctorRemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"                    DoctorRemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        Remark remark \u003d new Remark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        return new DoctorRemarkCommand(index, remark);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kimshitong":38}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":" * Parses input arguments and creates a new EditAppointmentCommand object","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"     * Parses the given {@code String} of arguments in the context of the EditAppointmentCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"     * and returns an EditAppointmentCommand object for execution.","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"                        PREFIX_PATIENT_NRIC,","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"                        PREFIX_DOCTOR_NRIC,","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                        PREFIX_APPOINTMENT_START_TIME,","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"                        PREFIX_APPOINTMENT_END_TIME);","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        Index index;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"                    pe);","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PATIENT_NRIC,","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_DOCTOR_NRIC,","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_APPOINTMENT_START_TIME,","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_APPOINTMENT_END_TIME);","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"        if (argMultimap.getValue(PREFIX_PATIENT_NRIC).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"            editAppointmentDescriptor","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"                    .setPatientNric(ParserUtil","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"                            .parseNric(argMultimap","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"                                    .getValue(PREFIX_PATIENT_NRIC).get()));","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"        if (argMultimap.getValue(PREFIX_DOCTOR_NRIC).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"            editAppointmentDescriptor","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"                    .setDoctorNric(ParserUtil","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"                            .parseNric(argMultimap","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"                                    .getValue(PREFIX_DOCTOR_NRIC).get()));","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        if (argMultimap.getValue(PREFIX_APPOINTMENT_START_TIME).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"            editAppointmentDescriptor","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"                    .setAppointmentStartTime(ParserUtil","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"                            .parseAppointmentStartTime(argMultimap","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"                                    .getValue(PREFIX_APPOINTMENT_START_TIME).get()));","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        if (argMultimap.getValue(PREFIX_APPOINTMENT_END_TIME).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"            editAppointmentDescriptor","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"                    .setAppointmentEndTime(ParserUtil","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"                            .parseAppointmentEndTime(argMultimap","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"                                    .getValue(PREFIX_APPOINTMENT_END_TIME).get()));","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"        return new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"yanghengtang":1,"mounilsankar":82}},{"path":"src/main/java/seedu/address/logic/parser/EditDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.EditDoctorCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public class EditDoctorCommandParser implements Parser\u003cEditDoctorCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    public EditDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"                    EditDoctorCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor editDoctorDescriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"            editDoctorDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"            editDoctorDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"        if (!editDoctorDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"            throw new ParseException(EditDoctorCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        return new EditDoctorCommand(index, editDoctorDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":1,"kimshitong":54}},{"path":"src/main/java/seedu/address/logic/parser/EditPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":" * Parses input arguments and creates a new EditPatientCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"public class EditPatientCommandParser implements Parser\u003cEditPatientCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPatientCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * and returns an EditPatientCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    public EditPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_NRIC);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        Index index;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPatientCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"                    pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_NRIC);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"            editPatientDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(EditPatientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"        return new EditPatientCommand(index, editPatientDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"yanghengtang":1,"cheeggered":58}},{"path":"src/main/java/seedu/address/logic/parser/FindDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.FindDoctorCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.NameContainsKeywordsDoctorPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" * Parses input arguments and creates a new FindDoctorCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"public class FindDoctorCommandParser implements Parser\u003cFindDoctorCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"     * Parses the given {@code String} of arguments in the context of the FindDoctorCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"     * and returns a FindDoctorCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    public FindDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        return new FindDoctorCommand(new NameContainsKeywordsDoctorPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":1,"-":24,"kimshitong":8}},{"path":"src/main/java/seedu/address/logic/parser/FindPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.FindPatientCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.NameContainsKeywordsPatientPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":" * Parses input arguments and creates a new FindPatientCommand object","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"public class FindPatientCommandParser implements Parser\u003cFindPatientCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPatientCommand","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     * and returns a FindPatientCommand object for execution.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    public FindPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        return new FindPatientCommand(new NameContainsKeywordsPatientPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yanghengtang":1,"cheeggered":32}},{"path":"src/main/java/seedu/address/logic/parser/ListAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.ListAppointmentCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEqualDoctorNricPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEqualPatientNricPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentFilterByNricPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":" * Parses input arguments and creates a new ListAppointmentCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"public class ListAppointmentCommandParser implements Parser\u003cListAppointmentCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"     * Parses the given {@code String} of arguments in the context of the ListAppointmentCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"     * and returns an ListAppointmentCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    public ListAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_PATIENT_NRIC,","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_DOCTOR_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PATIENT_NRIC,","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"                PREFIX_DOCTOR_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"                    ListAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PATIENT_NRIC)","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_DOCTOR_NRIC)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"            return new ListAppointmentCommand();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        } else if (!arePrefixesPresent(argMultimap, PREFIX_PATIENT_NRIC)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"            Nric doctorNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_DOCTOR_NRIC).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"            AppointmentEqualDoctorNricPredicate doctorPredicate \u003d new AppointmentEqualDoctorNricPredicate(doctorNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"            Predicate\u003cAppointment\u003e patientPredicate \u003d PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"            AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"                    new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"            return new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"        } else if (!arePrefixesPresent(argMultimap, PREFIX_DOCTOR_NRIC)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"            Nric patientNric \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"                    ParserUtil.parseNric(argMultimap.getValue(PREFIX_PATIENT_NRIC).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"            AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"                    new AppointmentEqualPatientNricPredicate(patientNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"            Predicate\u003cAppointment\u003e doctorPredicate \u003d PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"            AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"                    new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"            return new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"            Nric patientNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_PATIENT_NRIC).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"            Nric doctorNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_DOCTOR_NRIC).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"            AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"                    new AppointmentEqualPatientNricPredicate(patientNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"            AppointmentEqualDoctorNricPredicate doctorPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"                    new AppointmentEqualDoctorNricPredicate(doctorNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"            AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"                    new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"            return new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":2,"mounilsankar":78}},{"path":"src/main/java/seedu/address/logic/parser/MediConnectParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddMedicalConditionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.AddSpecialisationCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.AppointmentRemarkCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.DeleteMedicalConditionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.DeletePrescriptionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DeleteSpecialisationCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DoctorRemarkCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.EditDoctorCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.FindDoctorCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.FindPatientCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.ListAppointmentCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.ListDoctorCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.ListPatientsCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.PatientRemarkCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.ViewAppointmentCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.ViewDoctorCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.ViewPatientCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":" * Parses user input.","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"public class MediConnectParser {","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MediConnectParser.class);","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"    public Command parseCommand(String userInput) throws ParseException, CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"        case AddDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"            return new AddDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"        case AddPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"            return new AddPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"        case ListAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"            return new ListAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        case ListDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"            return new ListDoctorCommand();","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"        case ListPatientsCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"            return new ListPatientsCommand();","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        case EditDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"            return new EditDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"        case EditPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"            return new EditPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        case DeleteDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"            return new DeleteDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"        case DeletePatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"            return new DeletePatientCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"        case FindDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"            return new FindDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"        case FindPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"            return new FindPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"        case ViewAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"            return new ViewAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"        case ViewDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"            return new ViewDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"        case ViewPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"            return new ViewPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"        case AppointmentRemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"            return new AppointmentRemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"        case DoctorRemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"            return new DoctorRemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"        case PatientRemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"            return new PatientRemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"        case AddPrescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"            return (new AddPrescriptionCommandParser().parse(arguments));","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"        case DeleteSpecialisationCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"            return (new DeleteSpecialisationCommandParser().parse(arguments));","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"        case AddSpecialisationCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"            return new AddSpecialisationCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"        case DeletePrescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"            return (new DeletePrescriptionCommandParser().parse(arguments));","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"        case AddMedicalConditionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"            return new AddMedicalConditionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"        case DeleteMedicalConditionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"            return new DeleteMedicalConditionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"derekjxtan"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"derekjxtan"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"        default:","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":6,"mounilsankar":85,"derekjxtan":4,"cheeggered":35,"kimshitong":32}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    T parse(String userInput) throws ParseException, CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"mounilsankar":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"     * Parses {@code nric} into an {@code NRIC} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"     * trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the specified nric is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        String trimmedNric \u003d nric.trim().toUpperCase();","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"     * Parses {@code time} into an {@code AppointmentStartTime} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"     * trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the specified time is invalid (or not correct format).","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"    public static AppointmentStartTime parseAppointmentStartTime(String time) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"        if (!AppointmentStartTime.isValidAppointmentTime(trimmedTime)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(AppointmentStartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"        return new AppointmentStartTime(trimmedTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"     * Parses {@code time} into an {@code AppointmentEndTime} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"     * trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the specified time is invalid (or not correct format).","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"    public static AppointmentEndTime parseAppointmentEndTime(String time) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"derekjxtan"},"content":"        if (!AppointmentEndTime.isValidAppointmentTime(trimmedTime)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(AppointmentEndTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"        return new AppointmentEndTime(trimmedTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"mounilsankar":30,"derekjxtan":2,"-":102}},{"path":"src/main/java/seedu/address/logic/parser/PatientRemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.PatientRemarkCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":" * Parses input arguments and creates a new {@code PatientRemarkCommand} object","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"public class PatientRemarkCommandParser implements Parser\u003cPatientRemarkCommand\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code PatientRemarkCommand}","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     * and returns a {@code PatientRemarkCommand} object for execution.","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    public PatientRemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        Index index;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"                    PatientRemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        Remark remark \u003d new Remark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        return new PatientRemarkCommand(index, remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"cheeggered":38}},{"path":"src/main/java/seedu/address/logic/parser/ViewAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.ViewAppointmentCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":" * Parses input arguments and creates a new ViewAppointmentCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"public class ViewAppointmentCommandParser implements Parser\u003cViewAppointmentCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewAppointmentCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"     * and returns a ViewAppointmentCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"    public ViewAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"            return new ViewAppointmentCommand(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"mounilsankar":29}},{"path":"src/main/java/seedu/address/logic/parser/ViewDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.ViewDoctorCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":" * Parses input arguments and creates a new ViewDoctorCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"public class ViewDoctorCommandParser implements Parser\u003cViewDoctorCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewDoctorCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"     * and returns a ViewDoctorCommand object for execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    public ViewDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"            return new ViewDoctorCommand(index);","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewDoctorCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"kimshitong":29}},{"path":"src/main/java/seedu/address/logic/parser/ViewPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.ViewPatientCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":" * Parses input arguments and creates a new ViewPatientCommandParser object","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"public class ViewPatientCommandParser implements Parser\u003cViewPatientCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewPatientCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     * and returns a ViewPatientCommand object for execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    public ViewPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"            return new ViewPatientCommand(index);","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewPatientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"cheeggered":29}},{"path":"src/main/java/seedu/address/model/Data.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":" * A common class for classes that have remarks and tags to inherit from.","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" * Ensures remark and tags are immutable.","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public abstract class Data implements Listable {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    private final HashSet\u003cTag\u003e tags;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"     * Default constructor for Data which takes in no arguments.","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * {@Code remark} will be an empty string and {@Code tags} will be a empty set by default.","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    public Data() {","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        this.remark \u003d new Remark(\"\");","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for Data.","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     * @param remark remark for the Data object","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     * @param tags tags for the Data object","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    public Data(Remark remark, HashSet\u003c? extends Tag\u003e tags) {","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(remark, tags);","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        HashSet\u003cTag\u003e tagsClone \u003d (HashSet\u003cTag\u003e) tags.clone();","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        this.tags \u003d tagsClone;","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    public final Remark getRemark() {","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        return this.remark;","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    public final HashSet\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        HashSet\u003cTag\u003e clone \u003d (HashSet\u003cTag\u003e) this.tags.clone();","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        return clone;","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yanghengtang":6,"derekjxtan":44}},{"path":"src/main/java/seedu/address/model/Database.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.commons.util.lambdautil.CheckedFunctionUtil.unchecked;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":" * Wraps all data at the system level","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":" * Duplicates are not allowed (by .isSame comparison)","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"public class Database implements ReadOnlyDatabase {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_OVERLAPPING_PATIENT_APPOINTMENTS \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"            \"Appointment overlaps with an existing appointment of Patient\";","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_OVERLAPPING_DOCTOR_APPOINTMENTS \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"            \"Appointment overlaps with an existing appointment of Doctor\";","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    private final UniqueItemList\u003cAppointment\u003e appointments;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    private final UniqueItemList\u003cDoctor\u003e doctors;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    private final UniqueItemList\u003cPatient\u003e patients;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"     * Creates a new empty Database.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    public Database() {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        appointments \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        doctors \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        patients \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"     * Creates a Database using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    public Database(ReadOnlyDatabase toBeCopied) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        this();","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        setAppointments(toBeCopied.getAppointmentList());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        setDoctors(toBeCopied.getDoctorList());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        setPatients(toBeCopied.getPatientList());","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"     * Replaces the contents of the appointment list with {@code appointments}.","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        this.appointments.setItems(appointments);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"     * Replaces the contents of the doctor list with {@code doctors}.","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"     * {@code doctors} must not contain duplicate doctors.","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"    public void setDoctors(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"        this.doctors.setItems(doctors);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"     * Replaces the contents of the doctor list with {@code doctors}.","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"     * {@code doctors} must not contain duplicate doctors.","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"        this.patients.setItems(patients);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if an appointment with the same key fields as {@code appointment} exists in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"     * Adds an appointment to the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"     * The appointment must not already exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"    public void addAppointment(Appointment appointment) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"        validateAddAppointment(appointment);","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"        appointments.add(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"     * Replaces the given appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"     * {@code target} must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"     * The key fields of {@code editedAppointment} must not be the same as another existing appointment in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"        validateAddAppointment(target, editedAppointment);","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"        appointments.setItem(target, editedAppointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"     * Removes {@code appointment} from this {@code Database}.","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"     * {@code appointment} must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"    public void removeAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"        appointments.remove(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if a doctor with the same NRIC as {@code appointment} exists in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"yanghengtang"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"yanghengtang"},"content":"        return doctors.contains(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"derekjxtan"},"content":"     * Returns true if a doctor with the given NRIC as {@code nric} exists in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"derekjxtan"},"content":"    public boolean hasDoctorWithNric(Nric nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"derekjxtan"},"content":"        return doctors.contains(doctor -\u003e doctor.getNric().equals(nric));","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"yanghengtang"},"content":"     * Adds a doctor to the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"yanghengtang"},"content":"     * The doctor must not already exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"yanghengtang"},"content":"    public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"yanghengtang"},"content":"        doctors.add(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"yanghengtang"},"content":"     * Replaces the given doctor {@code target} in the list with {@code editedDoctor}.","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"yanghengtang"},"content":"     * {@code target} must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"yanghengtang"},"content":"     * The NRIC of {@code editedDoctor} must not be the same as another existing doctor in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"derekjxtan"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(editedDoctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"derekjxtan"},"content":"        if (!target.getNric().equals(editedDoctor.getNric())) {","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"derekjxtan"},"content":"            appointments.setMultipleItems(","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"derekjxtan"},"content":"                    appointment -\u003e appointment.getDoctorNric().equals(target.getNric()),","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"derekjxtan"},"content":"                    unchecked(appointment -\u003e new Appointment(","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"derekjxtan"},"content":"                            editedDoctor.getNric(),","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"derekjxtan"},"content":"                            appointment.getPatientNric(),","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"derekjxtan"},"content":"                            appointment.getStartTime(),","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"derekjxtan"},"content":"                            appointment.getEndTime(),","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"derekjxtan"},"content":"                            appointment.getRemark(),","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"derekjxtan"},"content":"                            appointment.getTags()","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"derekjxtan"},"content":"                    ))","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"derekjxtan"},"content":"            );","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"derekjxtan"},"content":"        doctors.setItem(target, editedDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"yanghengtang"},"content":"     * Removes {@code doctor} from this {@code Database}.","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"yanghengtang"},"content":"     * {@code doctor} must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"yanghengtang"},"content":"    public void removeDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"yanghengtang"},"content":"        doctors.remove(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"derekjxtan"},"content":"        appointments.remove(appointment -\u003e appointment.getDoctorNric().equals(doctor.getNric()));","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if a patient with the same NRIC as {@code appointment} exists in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"yanghengtang"},"content":"        return patients.contains(patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"derekjxtan"},"content":"     * Returns true if a patient with the given NRIC {@code nric} exists in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"derekjxtan"},"content":"    public boolean hasPatientWithNric(Nric nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"derekjxtan"},"content":"        return patients.contains(patient -\u003e patient.getNric().equals(nric));","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"yanghengtang"},"content":"     * Adds a patient to the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"yanghengtang"},"content":"     * The patient must not already exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"yanghengtang"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"yanghengtang"},"content":"        patients.add(patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"yanghengtang"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedDoctor}.","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"yanghengtang"},"content":"     * {@code target} must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"yanghengtang"},"content":"     * The NRIC of {@code editedDoctor} must not be the same as another existing patient in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"derekjxtan"},"content":"    public void setPatient(Patient target, Patient editedPatient) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"derekjxtan"},"content":"        if (!target.getNric().equals(editedPatient.getNric())) {","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"derekjxtan"},"content":"            appointments.setMultipleItems(","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"derekjxtan"},"content":"                    appointment -\u003e appointment.getPatientNric().equals(target.getNric()),","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"derekjxtan"},"content":"                    unchecked(appointment -\u003e new Appointment(","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"derekjxtan"},"content":"                            appointment.getDoctorNric(),","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"derekjxtan"},"content":"                            editedPatient.getNric(),","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"derekjxtan"},"content":"                            appointment.getStartTime(),","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"derekjxtan"},"content":"                            appointment.getEndTime(),","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"derekjxtan"},"content":"                            appointment.getRemark(),","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"derekjxtan"},"content":"                            appointment.getTags()","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"derekjxtan"},"content":"                    ))","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"derekjxtan"},"content":"            );","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"derekjxtan"},"content":"        patients.setItem(target, editedPatient);","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":218,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":219,"author":{"gitId":"yanghengtang"},"content":"     * Removes {@code patient} from this {@code Database}.","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"yanghengtang"},"content":"     * {@code patient} must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"yanghengtang"},"content":"    public void removePatient(Patient patient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"yanghengtang"},"content":"        patients.remove(patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":224,"author":{"gitId":"derekjxtan"},"content":"        appointments.remove(appointment -\u003e appointment.getPatientNric().equals(patient.getNric()));","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":226,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":227,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"yanghengtang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":229,"author":{"gitId":"yanghengtang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"yanghengtang"},"content":"                .add(\"appointments\", appointments)","lastModifiedDate":"2023-10-12"},{"lineNumber":231,"author":{"gitId":"yanghengtang"},"content":"                .add(\"doctors\", doctors)","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"yanghengtang"},"content":"                .add(\"patients\", patients)","lastModifiedDate":"2023-10-12"},{"lineNumber":233,"author":{"gitId":"yanghengtang"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":234,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":236,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":237,"author":{"gitId":"yanghengtang"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":238,"author":{"gitId":"yanghengtang"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-12"},{"lineNumber":239,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":240,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":241,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":242,"author":{"gitId":"yanghengtang"},"content":"    public ObservableList\u003cDoctor\u003e getDoctorList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":243,"author":{"gitId":"yanghengtang"},"content":"        return doctors.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-12"},{"lineNumber":244,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":245,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":246,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":247,"author":{"gitId":"yanghengtang"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":248,"author":{"gitId":"yanghengtang"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-12"},{"lineNumber":249,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":250,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":251,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":252,"author":{"gitId":"yanghengtang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":253,"author":{"gitId":"yanghengtang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":254,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":255,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":256,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":257,"author":{"gitId":"yanghengtang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":258,"author":{"gitId":"yanghengtang"},"content":"        if (!(other instanceof Database)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":259,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":260,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":261,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":262,"author":{"gitId":"yanghengtang"},"content":"        Database otherDatabase \u003d (Database) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":263,"author":{"gitId":"yanghengtang"},"content":"        return appointments.equals(otherDatabase.appointments)","lastModifiedDate":"2023-10-12"},{"lineNumber":264,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 doctors.equals(otherDatabase.doctors)","lastModifiedDate":"2023-10-12"},{"lineNumber":265,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 patients.equals(otherDatabase.patients);","lastModifiedDate":"2023-10-12"},{"lineNumber":266,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":267,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":268,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":269,"author":{"gitId":"mounilsankar"},"content":"     * Checks if the appointment is valid to be inserted into the appointment list","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"mounilsankar"},"content":"     * @throws CommandException if {@code predicate} is null.","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":272,"author":{"gitId":"mounilsankar"},"content":"    void validateAddAppointment(Appointment reference, Appointment toAdd) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":273,"author":{"gitId":"mounilsankar"},"content":"        for (Appointment a : appointments) {","lastModifiedDate":"2023-10-23"},{"lineNumber":274,"author":{"gitId":"mounilsankar"},"content":"            if (toAdd.getPatientNric().equals(a.getPatientNric())","lastModifiedDate":"2023-10-23"},{"lineNumber":275,"author":{"gitId":"mounilsankar"},"content":"                    \u0026\u0026 (toAdd.overlaps(a))","lastModifiedDate":"2023-10-23"},{"lineNumber":276,"author":{"gitId":"mounilsankar"},"content":"                    \u0026\u0026 !a.equals(reference)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":277,"author":{"gitId":"mounilsankar"},"content":"                throw new CommandException(MESSAGE_OVERLAPPING_PATIENT_APPOINTMENTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":278,"author":{"gitId":"mounilsankar"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":279,"author":{"gitId":"mounilsankar"},"content":"            if (toAdd.getDoctorNric().equals(a.getDoctorNric())","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"mounilsankar"},"content":"                    \u0026\u0026 (toAdd.overlaps(a))","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"mounilsankar"},"content":"                    \u0026\u0026 !a.equals(reference)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"mounilsankar"},"content":"                throw new CommandException(MESSAGE_OVERLAPPING_DOCTOR_APPOINTMENTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":283,"author":{"gitId":"mounilsankar"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":285,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":286,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":287,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":288,"author":{"gitId":"mounilsankar"},"content":"     * Checks if the appointment is valid to be inserted into the appointment list","lastModifiedDate":"2023-10-24"},{"lineNumber":289,"author":{"gitId":"mounilsankar"},"content":"     * @throws CommandException if {@code predicate} is null.","lastModifiedDate":"2023-10-24"},{"lineNumber":290,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":291,"author":{"gitId":"mounilsankar"},"content":"    void validateAddAppointment(Appointment toAdd) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":292,"author":{"gitId":"mounilsankar"},"content":"        validateAddAppointment(null, toAdd);","lastModifiedDate":"2023-10-24"},{"lineNumber":293,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":294,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":295,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":296,"author":{"gitId":"yanghengtang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":297,"author":{"gitId":"yanghengtang"},"content":"        return Objects.hash(appointments, doctors, patients);","lastModifiedDate":"2023-10-12"},{"lineNumber":298,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":299,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":210,"derekjxtan":52,"mounilsankar":37}},{"path":"src/main/java/seedu/address/model/Listable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * A interface for all classes that needs to be added to a UniqueList to implement.","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"public interface Listable {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"     * Checks if 2 Listables are the same. This method is separate from equals as it represents a weaker notion of","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"     * equality.","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"     * @param otherListable Another Listable to compare the current instance to.","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"     * @return True if both listables are the same.","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    public boolean isSame(Listable otherListable);","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"derekjxtan":17}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    Predicate\u003cDoctor\u003e PREDICATE_SHOW_ALL_DOCTORS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"     * Returns the user prefs\u0027 database file path.","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"     * Sets the user prefs\u0027 database file path.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"    void setDatabaseFilePath(Path addressBookFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"     * Replaces current Database data with the data in {@code database}.","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"    void setDatabase(ReadOnlyDatabase database);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"    /** Returns the Database */","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"    ReadOnlyDatabase getDatabase();","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if an appointment with the same fields as {@code appointment} exists in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if a doctor with the same NRIC as {@code doctor} exists in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"    boolean hasDoctor(Doctor doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if a patient with the same NRIC as {@code patient} exists in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"    boolean hasPatient(Patient patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if a doctor with the same NRIC as {@code doctor} exists in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"    boolean hasDoctorWithNric(Nric nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if a patient with the same NRIC as {@code patient} exists in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    boolean hasPatientWithNric(Nric nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"     * Deletes the given appointment.","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"     * The appointment must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"    void deleteAppointment(Appointment target);","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"     * Deletes the given doctor.","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"     * The doctor must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"    void deleteDoctor(Doctor target);","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"     * Deletes the given patient.","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"     * The patient must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"    void deletePatient(Patient target);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"     * Adds the given appointment.","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"yanghengtang"},"content":"     * {@code appointment} must not already exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"    void addAppointment(Appointment appointment) throws CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":"     * Adds the given doctor.","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"yanghengtang"},"content":"     * {@code doctor} must not already exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"yanghengtang"},"content":"    void addDoctor(Doctor doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"yanghengtang"},"content":"     * Adds the patient doctor.","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"yanghengtang"},"content":"     * {@code patient} must not already exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"yanghengtang"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"yanghengtang"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"yanghengtang"},"content":"     * {@code target} must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"yanghengtang"},"content":"     * The doctor, patient and dateTime of {@code editedAppointment} must not be the same as another existing","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"yanghengtang"},"content":"     * appointment in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment) throws CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"yanghengtang"},"content":"     * Replaces the given doctor {@code target} with {@code editedDoctor}.","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"yanghengtang"},"content":"     * {@code target} must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"yanghengtang"},"content":"     * The NRIC of {@code editedDoctor} must not be the same as another existing doctor in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"derekjxtan"},"content":"    void setDoctor(Doctor target, Doctor editedDoctor) throws CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"yanghengtang"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"yanghengtang"},"content":"     * {@code target} must exist in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"yanghengtang"},"content":"     * The NRIC of {@code editedPatient} must not be the same as another existing patient in the database.","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"derekjxtan"},"content":"    void setPatient(Patient target, Patient editedPatient) throws CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"yanghengtang"},"content":"    /** Returns an unmodifiable view of the filtered appointment list */","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"yanghengtang"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"yanghengtang"},"content":"    /** Returns an unmodifiable view of the filtered doctor list */","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"yanghengtang"},"content":"    ObservableList\u003cDoctor\u003e getFilteredDoctorList();","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"yanghengtang"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"yanghengtang"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"yanghengtang"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"yanghengtang"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"     * Updates the filter of the filtered doctor list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"    void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"yanghengtang"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"yanghengtang"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"yanghengtang"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"yanghengtang"},"content":"    /** Returns the selected appointment in the model */","lastModifiedDate":"2023-10-22"},{"lineNumber":179,"author":{"gitId":"yanghengtang"},"content":"    Appointment getSelectedAppointment();","lastModifiedDate":"2023-10-22"},{"lineNumber":180,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":181,"author":{"gitId":"yanghengtang"},"content":"    /** Returns the selected doctor in the model */","lastModifiedDate":"2023-10-22"},{"lineNumber":182,"author":{"gitId":"yanghengtang"},"content":"    Doctor getSelectedDoctor();","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"yanghengtang"},"content":"    /** Returns the selected patient in the model */","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"yanghengtang"},"content":"    Patient getSelectedPatient();","lastModifiedDate":"2023-10-22"},{"lineNumber":186,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"     * Updates the selected appointment with the given {@code appointment}.","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"yanghengtang"},"content":"     * @throws NullPointerException if {@code appointment} is null.","lastModifiedDate":"2023-10-22"},{"lineNumber":190,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":191,"author":{"gitId":"yanghengtang"},"content":"    void updateSelectedAppointment(Appointment appointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":192,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"yanghengtang"},"content":"     * Updates the selected doctor with the given {@code doctor}.","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"yanghengtang"},"content":"     * @throws NullPointerException if {@code doctor} is null.","lastModifiedDate":"2023-10-22"},{"lineNumber":196,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"yanghengtang"},"content":"    void updateSelectedDoctor(Doctor doctor);","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"yanghengtang"},"content":"     * Updates the selected patient with the given {@code patient}.","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"yanghengtang"},"content":"     * @throws NullPointerException if {@code patient} is null.","lastModifiedDate":"2023-10-22"},{"lineNumber":202,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":203,"author":{"gitId":"yanghengtang"},"content":"    void updateSelectedPatient(Patient patient);","lastModifiedDate":"2023-10-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":138,"mounilsankar":3,"derekjxtan":2,"-":61}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":" * Represents the in-memory model of the MediConnect data.","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    private final Database database;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    private final FilteredList\u003cDoctor\u003e filteredDoctors;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    private Appointment selectedAppointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    private Doctor selectedDoctor;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    private Patient selectedPatient;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    public ModelManager(ReadOnlyDatabase database, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        requireAllNonNull(database, userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        logger.fine(\"Initializing with database: \" + database + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        this.database \u003d new Database(database);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.database.getAppointmentList());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        filteredDoctors \u003d new FilteredList\u003c\u003e(this.database.getDoctorList());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.database.getPatientList());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        this(new Database(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"        return userPrefs.getDatabaseFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"    public void setDatabaseFilePath(Path databaseFilePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(databaseFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"        userPrefs.setDatabaseFilePath(databaseFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Database \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    public void setDatabase(ReadOnlyDatabase database) {","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"        this.database.setDoctors(database.getDoctorList());","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"        this.database.setPatients(database.getPatientList());","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"        this.database.setAppointments(database.getAppointmentList());","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"    public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"        return database;","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"        return database.hasAppointment(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"yanghengtang"},"content":"        return database.hasDoctor(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"yanghengtang"},"content":"        return database.hasPatient(patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"yanghengtang"},"content":"    public boolean hasDoctorWithNric(Nric nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"yanghengtang"},"content":"        return database.hasDoctorWithNric(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"yanghengtang"},"content":"    public boolean hasPatientWithNric(Nric nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"yanghengtang"},"content":"        return database.hasPatientWithNric(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"yanghengtang"},"content":"    public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"yanghengtang"},"content":"        database.removeAppointment(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"yanghengtang"},"content":"    public void deleteDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"yanghengtang"},"content":"        database.removeDoctor(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"yanghengtang"},"content":"    public void deletePatient(Patient patient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"yanghengtang"},"content":"        database.removePatient(patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"    public void addAppointment(Appointment appointment) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"yanghengtang"},"content":"        database.addAppointment(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"yanghengtang"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"yanghengtang"},"content":"    public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"yanghengtang"},"content":"        database.addDoctor(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"yanghengtang"},"content":"        updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"yanghengtang"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"yanghengtang"},"content":"        database.addPatient(patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"yanghengtang"},"content":"        updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"mounilsankar"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"        database.setAppointment(target, editedAppointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"derekjxtan"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"yanghengtang"},"content":"        requireAllNonNull(target, editedDoctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"        database.setDoctor(target, editedDoctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"derekjxtan"},"content":"    public void setPatient(Patient target, Patient editedPatient) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"yanghengtang"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"yanghengtang"},"content":"        database.setPatient(target, editedPatient);","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"yanghengtang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"yanghengtang"},"content":"     * {@code versionedDatabase}","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"yanghengtang"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"yanghengtang"},"content":"        return filteredAppointments;","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"yanghengtang"},"content":"     * Returns an unmodifiable view of the list of {@code Doctor} backed by the internal list of","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"yanghengtang"},"content":"     * {@code versionedDatabase}","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"yanghengtang"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"yanghengtang"},"content":"        return filteredDoctors;","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"yanghengtang"},"content":"     * Returns an unmodifiable view of the list of {@code Patient} backed by the internal list of","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"yanghengtang"},"content":"     * {@code versionedDatabase}","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"yanghengtang"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"yanghengtang"},"content":"        return filteredPatients;","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":214,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"yanghengtang"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"yanghengtang"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":218,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":219,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"yanghengtang"},"content":"    public void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"yanghengtang"},"content":"        filteredDoctors.setPredicate(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":224,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":226,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":227,"author":{"gitId":"yanghengtang"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":229,"author":{"gitId":"yanghengtang"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":231,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"yanghengtang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Selected Entity Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":233,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"yanghengtang"},"content":"    public Appointment getSelectedAppointment() {","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"yanghengtang"},"content":"        return selectedAppointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":237,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":239,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":240,"author":{"gitId":"yanghengtang"},"content":"    public Doctor getSelectedDoctor() {","lastModifiedDate":"2023-10-22"},{"lineNumber":241,"author":{"gitId":"yanghengtang"},"content":"        return selectedDoctor;","lastModifiedDate":"2023-10-22"},{"lineNumber":242,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":243,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":244,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":245,"author":{"gitId":"yanghengtang"},"content":"    public Patient getSelectedPatient() {","lastModifiedDate":"2023-10-22"},{"lineNumber":246,"author":{"gitId":"yanghengtang"},"content":"        return selectedPatient;","lastModifiedDate":"2023-10-22"},{"lineNumber":247,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":248,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":249,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":250,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"yanghengtang"},"content":"        selectedAppointment \u003d appointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":255,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":256,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":257,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-10-22"},{"lineNumber":258,"author":{"gitId":"yanghengtang"},"content":"        selectedDoctor \u003d doctor;","lastModifiedDate":"2023-10-22"},{"lineNumber":259,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":260,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":261,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":262,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedPatient(Patient patient) {","lastModifiedDate":"2023-10-22"},{"lineNumber":263,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-22"},{"lineNumber":264,"author":{"gitId":"yanghengtang"},"content":"        selectedPatient \u003d patient;","lastModifiedDate":"2023-10-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":279,"author":{"gitId":"yanghengtang"},"content":"        return database.equals(otherModelManager.getDatabase())","lastModifiedDate":"2023-10-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-10-12"},{"lineNumber":281,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 filteredAppointments.equals(otherModelManager.filteredAppointments)","lastModifiedDate":"2023-10-12"},{"lineNumber":282,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 filteredDoctors.equals(otherModelManager.filteredDoctors)","lastModifiedDate":"2023-10-12"},{"lineNumber":283,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 filteredPatients.equals(otherModelManager.filteredPatients);","lastModifiedDate":"2023-10-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":174,"mounilsankar":3,"derekjxtan":2,"-":107}},{"path":"src/main/java/seedu/address/model/ReadOnlyDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"public interface ReadOnlyDatabase {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"     * Returns an unmodifiable view of the Appointment list.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"     * This list will not contain any duplicate Appointments.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"     * Returns an unmodifiable view of the Doctor list.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"     * This list will not contain any duplicate Doctors.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    ObservableList\u003cDoctor\u003e getDoctorList();","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"     * Returns an unmodifiable view of the Patient list.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"     * This list will not contain any duplicate Patients.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":30}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"yanghengtang":1,"-":15}},{"path":"src/main/java/seedu/address/model/Sorters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":" * A Class to hold all the Comparators required for sorting.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"public class Sorters {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"    // appointment Comparators","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cAppointment\u003e APPOINTMENT_START_TIME_ASC_COMPARATOR \u003d (a1, a2)","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"            -\u003e a1.getStartTime().compareTo(a2.getStartTime());","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cAppointment\u003e APPOINTMENT_START_TIME_DESC_COMPARATOR \u003d (a1, a2)","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"            -\u003e -(a1.getStartTime().compareTo(a2.getStartTime()));","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cAppointment\u003e APPOINTMENT_END_TIME_ASC_COMPARATOR \u003d (a1, a2)","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"            -\u003e a1.getEndTime().compareTo(a2.getEndTime());","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cAppointment\u003e APPOINTMENT_END_TIME_DESC_COMPARATOR \u003d (a1, a2)","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"            -\u003e -(a1.getEndTime().compareTo(a2.getEndTime()));","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cAppointment\u003e APPOINTMENT_PATIENT_NRIC_ASC_COMPARATOR \u003d (a1, a2)","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"            -\u003e a1.getPatientNric().compareTo(a2.getPatientNric());","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cAppointment\u003e APPOINTMENT_PATIENT_NRIC_DESC_COMPARATOR \u003d (a1, a2)","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"            -\u003e -(a1.getPatientNric().compareTo(a2.getPatientNric()));","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cAppointment\u003e APPOINTMENT_DOCTOR_NRIC_ASC_COMPARATOR \u003d (a1, a2)","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"            -\u003e a1.getDoctorNric().compareTo(a2.getDoctorNric());","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cAppointment\u003e APPOINTMENT_DOCTOR_NRIC_DESC_COMPARATOR \u003d (a1, a2)","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"            -\u003e -(a1.getDoctorNric().compareTo(a2.getDoctorNric()));","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    // doctor comparators","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cDoctor\u003e DOCTOR_NRIC_ASC_COMPARATOR \u003d (d1, d2)","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"            -\u003e d1.getNric().compareTo(d2.getNric());","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cDoctor\u003e DOCTOR_NRIC_DESC_COMPARATOR \u003d (d1, d2)","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"            -\u003e -(d1.getNric().compareTo(d2.getNric()));","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cDoctor\u003e DOCTOR_NAME_ASC_COMPARATOR \u003d (d1, d2)","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"            -\u003e d1.getName().compareTo(d2.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cDoctor\u003e DOCTOR_NAME_DESC_COMPARATOR \u003d (d1, d2)","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"            -\u003e -(d1.getName().compareTo(d2.getName()));","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    // patient comparators","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cPatient\u003e PATIENT_NRIC_ASC_COMPARATOR \u003d (p1, p2)","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"            -\u003e p1.getNric().compareTo(p2.getNric());","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cPatient\u003e PATIENT_NRIC_DESC_COMPARATOR \u003d (p1, p2)","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"            -\u003e -(p1.getNric().compareTo(p2.getNric()));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cPatient\u003e PATIENT_NAME_ASC_COMPARATOR \u003d (p1, p2)","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"            -\u003e p1.getName().compareTo(p2.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cPatient\u003e PATIENT_NAME_DESC_COMPARATOR \u003d (p1, p2)","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"            -\u003e -(p1.getName().compareTo(p2.getName()));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cPatient\u003e PATIENT_PHONE_ASC_COMPARATOR \u003d (p1, p2)","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"            -\u003e p1.getPhone().compareTo(p2.getPhone());","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    public static final Comparator\u003cPatient\u003e PATIENT_PHONE_DESC_COMPARATOR \u003d (p1, p2)","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"            -\u003e -(p1.getPhone().compareTo(p2.getPhone()));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"derekjxtan":54}},{"path":"src/main/java/seedu/address/model/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.exceptions.DuplicateItemException;","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":" * A list of Listables that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":" * A Listable is considered unique by comparing using {@code Listable#isSame(Listable)}. As such, adding and updating of","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":" * items uses Listable#isSame(Listable) for equality so as to ensure that the item being added or updated is","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":" * unique in terms of identity in the UniqueItemList. However, the removal of a item uses Listable#equals(Object) so","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":" * as to ensure that the items with exactly the same fields will be removed.","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":" *","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":" *","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":" * @see Listable#isSame(Listable)","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"public class UniqueItemList\u003cS extends Listable\u003e implements Iterable\u003cS\u003e {","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    private final ObservableList\u003cS\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    private final ObservableList\u003cS\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * Returns true if the list contains an equivalent item as the given argument.","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    public boolean contains(S toCheck) {","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"     * Returns true if the list contains an item that returns true based on the given predicate.","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"     * @param predicate predicate to check the items","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"     * @return true if the item exists in the list","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    public boolean contains(Function\u003cS, Boolean\u003e predicate) {","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        return internalList.stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"                .map(item -\u003e predicate.apply(item))","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"                .reduce(false, (acc, item) -\u003e acc || item);","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"     * Adds a item to the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"    public void add(S toAdd) {","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"     * Replaces the item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"    public void setItem(S target, S editedItem) {","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"        if (!target.isSame(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"     * Replaces multiple items in the list based on a given transformation.","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"     * @param pred predicate used to test the item, returns true if the item is to be edited.","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"     * @param transformer function to transform the current item to the new desired item.","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"    public void setMultipleItems(Predicate\u003c? super S\u003e pred, Function\u003c? super S, ? extends S\u003e transformer)","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(pred, transformer);","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"        // conditionally applies the transformation to the existing item","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"            List\u003cS\u003e temp \u003d internalList.stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"                    .map(item -\u003e pred.test(item) ? transformer.apply(item) : item)","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"            this.setItems(temp);","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"     * Removes the equivalent item from the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"     * The item must exist in the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":110,"author":{"gitId":"derekjxtan"},"content":"    public void remove(S toRemove) {","lastModifiedDate":"2023-10-08"},{"lineNumber":111,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-08"},{"lineNumber":112,"author":{"gitId":"derekjxtan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":113,"author":{"gitId":"derekjxtan"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2023-10-08"},{"lineNumber":114,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":115,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":116,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":117,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"derekjxtan"},"content":"     * Remove the all items satisfying a predicate.","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"derekjxtan"},"content":"     * At least 1 item must exist in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"derekjxtan"},"content":"     * @param predicate to check items to remove.","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"derekjxtan"},"content":"    public void remove(Predicate\u003cS\u003e predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"derekjxtan"},"content":"        internalList.removeIf(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"derekjxtan"},"content":"    public void setItems(UniqueItemList\u003cS\u003e replacement) {","lastModifiedDate":"2023-10-08"},{"lineNumber":128,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"derekjxtan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":133,"author":{"gitId":"derekjxtan"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2023-10-08"},{"lineNumber":134,"author":{"gitId":"derekjxtan"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2023-10-08"},{"lineNumber":135,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":136,"author":{"gitId":"derekjxtan"},"content":"    public void setItems(List\u003cS\u003e items) {","lastModifiedDate":"2023-10-08"},{"lineNumber":137,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2023-10-08"},{"lineNumber":138,"author":{"gitId":"derekjxtan"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":139,"author":{"gitId":"derekjxtan"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-10-08"},{"lineNumber":140,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":141,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":142,"author":{"gitId":"derekjxtan"},"content":"        internalList.setAll(items);","lastModifiedDate":"2023-10-08"},{"lineNumber":143,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":144,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":145,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":146,"author":{"gitId":"derekjxtan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-08"},{"lineNumber":147,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":148,"author":{"gitId":"derekjxtan"},"content":"    public ObservableList\u003cS\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-08"},{"lineNumber":149,"author":{"gitId":"derekjxtan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-08"},{"lineNumber":150,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":151,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":152,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":153,"author":{"gitId":"derekjxtan"},"content":"    public Iterator\u003cS\u003e iterator() {","lastModifiedDate":"2023-10-08"},{"lineNumber":154,"author":{"gitId":"derekjxtan"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-08"},{"lineNumber":155,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":156,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":157,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":158,"author":{"gitId":"derekjxtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-08"},{"lineNumber":159,"author":{"gitId":"derekjxtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-08"},{"lineNumber":160,"author":{"gitId":"derekjxtan"},"content":"            return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":161,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":162,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":163,"author":{"gitId":"derekjxtan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-08"},{"lineNumber":164,"author":{"gitId":"derekjxtan"},"content":"        if (!(other instanceof UniqueItemList\u003c?\u003e)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":165,"author":{"gitId":"derekjxtan"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":166,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":167,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":168,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003c?\u003e otherUniqueItemList \u003d (UniqueItemList\u003c?\u003e) other;","lastModifiedDate":"2023-10-08"},{"lineNumber":169,"author":{"gitId":"derekjxtan"},"content":"        return internalList.equals(otherUniqueItemList.internalList);","lastModifiedDate":"2023-10-08"},{"lineNumber":170,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":171,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":172,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":173,"author":{"gitId":"derekjxtan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-08"},{"lineNumber":174,"author":{"gitId":"derekjxtan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-08"},{"lineNumber":175,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":176,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":177,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":178,"author":{"gitId":"derekjxtan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":179,"author":{"gitId":"derekjxtan"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-08"},{"lineNumber":180,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":181,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":182,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":183,"author":{"gitId":"derekjxtan"},"content":"     * Returns true if {@code items} contains only unique items.","lastModifiedDate":"2023-10-08"},{"lineNumber":184,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":185,"author":{"gitId":"derekjxtan"},"content":"    private boolean itemsAreUnique(List\u003cS\u003e items) {","lastModifiedDate":"2023-10-08"},{"lineNumber":186,"author":{"gitId":"derekjxtan"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2023-10-08"},{"lineNumber":187,"author":{"gitId":"derekjxtan"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2023-10-08"},{"lineNumber":188,"author":{"gitId":"derekjxtan"},"content":"                if (items.get(i).isSame(items.get(j))) {","lastModifiedDate":"2023-10-08"},{"lineNumber":189,"author":{"gitId":"derekjxtan"},"content":"                    return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":190,"author":{"gitId":"derekjxtan"},"content":"                }","lastModifiedDate":"2023-10-08"},{"lineNumber":191,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":192,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":193,"author":{"gitId":"derekjxtan"},"content":"        return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":194,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":195,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"derekjxtan":195}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    private Path databaseFilePath \u003d Paths.get(\"data\" , \"database.json\");","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        setDatabaseFilePath(newUserPrefs.getDatabaseFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        return databaseFilePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    public void setDatabaseFilePath(Path databaseFilePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(databaseFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        this.databaseFilePath \u003d databaseFilePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 databaseFilePath.equals(otherUserPrefs.databaseFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"        return Objects.hash(guiSettings, databaseFilePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"        sb.append(\"\\nDatabase file location : \" + databaseFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yanghengtang":10,"-":78}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Data;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Listable;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":" * Represents a Appointment in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"public class Appointment extends Data {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_TIME \u003d \"Appointment\u0027s end time cannot be before start time\";","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    public static final String MESSAGE_SAME_PIC_DIC \u003d \"Patient\u0027s NRIC cannot be the same as Doctor\u0027s NRIC\";","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    private final Nric doctorNric;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    private final Nric patientNric;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"    private final AppointmentStartTime startTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    private final AppointmentEndTime endTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for Appointment.","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     * Used for initial creation of an Appointment, as remarks and tags need not be initialized.","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    public Appointment(Nric doctorNric, Nric patientNric, AppointmentStartTime startTime, AppointmentEndTime endTime)","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"        super();","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(doctorNric, patientNric, startTime, endTime);","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"        validateFields(doctorNric, patientNric, startTime, endTime);","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        this.doctorNric \u003d doctorNric;","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for Appointment.","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"     * Used when remark and tags need to be set.","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    public Appointment(Nric doctorNric, Nric patientNric, AppointmentStartTime startTime, AppointmentEndTime endTime,","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"                       Remark remark, HashSet\u003cTag\u003e tags) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        super(remark, tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        requireAllNonNull(doctorNric, patientNric, startTime, endTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        validateFields(doctorNric, patientNric, startTime, endTime);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        this.doctorNric \u003d doctorNric;","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"     * Checks if the endTime is after the startTime and if the patient and doctor nric are different","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"    public static void validateFields(Nric doctorNric, Nric patientNric,","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"                                      AppointmentStartTime startTime, AppointmentEndTime endTime)","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        if (startTime.getTime().isAfter(endTime.getTime())) {","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(MESSAGE_INVALID_APPOINTMENT_TIME);","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        if (patientNric.equals(doctorNric)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"            throw new CommandException(MESSAGE_SAME_PIC_DIC);","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"    public Nric getDoctorNric() {","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"        return doctorNric;","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"    public Nric getPatientNric() {","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"        return patientNric;","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentStartTime getStartTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"        return startTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentEndTime getEndTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"        return endTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"    public boolean isSame(Listable otherListable) {","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"        if (!(otherListable instanceof Appointment)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"        Appointment otherAppointment \u003d (Appointment) otherListable;","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"        return otherAppointment.getDoctorNric().equals(getDoctorNric())","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 otherAppointment.getPatientNric().equals(getPatientNric())","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"                \u0026\u0026 otherAppointment.getStartTime().equals(getStartTime())","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"                \u0026\u0026 otherAppointment.getEndTime().equals(getEndTime());","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"     * Returns true if both appointments have overlapping timings","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"    public boolean overlaps(Appointment a) {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"        if (this.startTime.equals(a.startTime) \u0026\u0026 this.endTime.equals(a.endTime)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"derekjxtan"},"content":"        return this.withinInterval(a.startTime.getTime())","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"derekjxtan"},"content":"                || this.withinInterval(a.endTime.getTime())","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"derekjxtan"},"content":"                || a.withinInterval(this.startTime.getTime())","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"derekjxtan"},"content":"                || a.withinInterval(this.endTime.getTime());","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"     * Returns true if given time is within the appointment timings","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"    public boolean withinInterval(LocalDateTime time) {","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"derekjxtan"},"content":"        return time.isBefore(this.endTime.getTime()) \u0026\u0026 time.isAfter(this.startTime.getTime());","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":130,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if both appointments have the same identity fields.","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"     * This defines a stronger notion of equality between two appointments.","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":134,"author":{"gitId":"yanghengtang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":135,"author":{"gitId":"yanghengtang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"yanghengtang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":140,"author":{"gitId":"yanghengtang"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":143,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"yanghengtang"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":145,"author":{"gitId":"yanghengtang"},"content":"        return doctorNric.equals(otherAppointment.doctorNric)","lastModifiedDate":"2023-10-10"},{"lineNumber":146,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 patientNric.equals(otherAppointment.patientNric)","lastModifiedDate":"2023-10-10"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"                \u0026\u0026 startTime.equals(otherAppointment.startTime)","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"                \u0026\u0026 endTime.equals(otherAppointment.endTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":150,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":151,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":152,"author":{"gitId":"yanghengtang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":153,"author":{"gitId":"yanghengtang"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-10"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hash(doctorNric, patientNric, startTime, endTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":156,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":157,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":158,"author":{"gitId":"yanghengtang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":159,"author":{"gitId":"yanghengtang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-10"},{"lineNumber":160,"author":{"gitId":"yanghengtang"},"content":"                .add(\"doctorNric\", doctorNric)","lastModifiedDate":"2023-10-10"},{"lineNumber":161,"author":{"gitId":"yanghengtang"},"content":"                .add(\"patientNric\", patientNric)","lastModifiedDate":"2023-10-10"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"                .add(\"startTime\", startTime)","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"                .add(\"endTime\", endTime)","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"                .add(\"remark\", getRemark())","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"                .add(\"prescriptions\", getTags())","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"yanghengtang"},"content":"                .toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"yanghengtang":82,"mounilsankar":59,"derekjxtan":27}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentEndTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":" * Represents a Appointment\u0027s end time in the database.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" * Guarantees: immutable; is valid as declared in {@link AppointmentTime#isValidAppointmentTime(String)}","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"public class AppointmentEndTime extends AppointmentTime {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d String.format(AppointmentTime.MESSAGE_CONSTRAINTS, \"end\");","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"     * Constructs an {@code AppointmentEndTime}.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"     * @param time A valid LocalDateTime time.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentEndTime(String time) {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"        super(AppointmentTime.parse(time, MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"        if (!(other instanceof AppointmentEndTime)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        AppointmentEndTime otherAppointmentEndTime \u003d (AppointmentEndTime) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        return super.equals(otherAppointmentEndTime);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"mounilsankar":13,"derekjxtan":16}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentEqualDoctorNricPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":" * Tests that a {@code Doctor}\u0027s {@code Nric} matches the nric given.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentEqualDoctorNricPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentEqualDoctorNricPredicate(Nric nric) {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"        return appointment.getDoctorNric().equals(this.nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof AppointmentEqualDoctorNricPredicate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate otherAppointmentEqualDoctorNricPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"                (AppointmentEqualDoctorNricPredicate) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        return nric.equals(otherAppointmentEqualDoctorNricPredicate.nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hashCode(this.nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        return new ToStringBuilder(this).add(\"nric\", nric).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"mounilsankar":48}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentEqualPatientNricPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":" * Tests that a {@code Patient}\u0027s {@code Nric} matches the nric given.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentEqualPatientNricPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentEqualPatientNricPredicate(Nric nric) {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"        return appointment.getPatientNric().equals(this.nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof AppointmentEqualPatientNricPredicate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate otherAppointmentEqualPatientNricPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"                (AppointmentEqualPatientNricPredicate) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        return nric.equals(otherAppointmentEqualPatientNricPredicate.nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hashCode(this.nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        return new ToStringBuilder(this).add(\"nric\", nric).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"mounilsankar":48}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentFilterByNricPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":" * Tests that an {@code Appointment}\u0027s {@code Doctor}\u0027s {@code Nric}","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":" * and {@code Patient}\u0027s {@code Nric} matches the predicates given.","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentFilterByNricPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    private final Predicate\u003cAppointment\u003e patientPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    private final Predicate\u003cAppointment\u003e doctorPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"     * Constructor for a {@code AppointmentFilterByNricPredicate} object","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"     * @param patientPredicate","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"     * @param doctorPredicate","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentFilterByNricPredicate(Predicate\u003cAppointment\u003e patientPredicate,","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"                                               Predicate\u003cAppointment\u003e doctorPredicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"        this.patientPredicate \u003d patientPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        this.doctorPredicate \u003d doctorPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        return patientPredicate.test(appointment) \u0026\u0026 doctorPredicate.test(appointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"        if (!(other instanceof AppointmentFilterByNricPredicate)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate otherAppointmentFilterByNricPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"                (AppointmentFilterByNricPredicate) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        return patientPredicate.equals(otherAppointmentFilterByNricPredicate.patientPredicate)","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"                \u0026\u0026 doctorPredicate.equals(otherAppointmentFilterByNricPredicate.doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"        return Objects.hash(this.patientPredicate, this.doctorPredicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"                .add(\"patientPredicate\", patientPredicate)","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"                .add(\"doctorPredicate\", doctorPredicate)","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"mounilsankar":61}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentStartTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":" * Represents a Appointment\u0027s start time in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" * Guarantees: immutable; is valid as declared in {@link AppointmentTime#isValidAppointmentTime(String)}","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"public class AppointmentStartTime extends AppointmentTime {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d String.format(AppointmentTime.MESSAGE_CONSTRAINTS, \"start\");","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"     * Constructs an {@code AppointmentStartTime}.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"     * @param time A valid LocalDateTime time.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentStartTime(String time) {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"        super(AppointmentTime.parse(time, MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"        if (!(other instanceof AppointmentStartTime)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        AppointmentStartTime otherAppointmentStartTime \u003d (AppointmentStartTime) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        return super.equals(otherAppointmentStartTime);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"mounilsankar":15,"derekjxtan":14}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":" * Represents a time to be used in Appointment.","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAppointmentTime(String)}","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public abstract class AppointmentTime implements Comparable\u003cAppointmentTime\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"            \"Appointment %s date and time should be of the format YYYY-MM-DD HH:mm \";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    public static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final DateTimeFormatter","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"            DATE_TIME_INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     * Constructs an {@code AppointmentTime}.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"     * @param time A valid LocalDateTime time.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    public AppointmentTime(LocalDateTime time) {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     * Returns if a given string is a valid dateTime.","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    public static boolean isValidAppointmentTime(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"            LocalDateTime.parse(test, DATE_TIME_INPUT_FORMATTER);","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"            return true; // Parsing successful, so it matches the specified format.","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"            return false; // Parsing failed, indicating it doesn\u0027t match the format.","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        return this.time;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        return time.format(DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        if (!(other instanceof AppointmentTime)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        AppointmentTime otherAppointmentTime \u003d (AppointmentTime) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"        return time.equals(otherAppointmentTime.time);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        return time.hashCode();","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"    public int compareTo(AppointmentTime time) {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"        if (this.time.isBefore(time.time)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"            return -1;","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"        } else if (this.time.isAfter(time.time)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"            return 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"        return 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"     * Parses a given string using the date_time_formatter.","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"     * @param time string representation of the time","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"     * @param msg message to return if the appointment time is invalid","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"     * @return LocalDateTime object of the given time","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"    public static LocalDateTime parse(String time, String msg) {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"        checkArgument(isValidAppointmentTime((trimmedTime)), msg);","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"        return LocalDateTime.parse(trimmedTime, DATE_TIME_INPUT_FORMATTER);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"derekjxtan":95}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"    public int compareTo(Name name) {","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        return this.fullName.compareTo(name.fullName);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"derekjxtan":5,"-":66}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsDoctorPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" * Tests that a {@code Doctor}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"public class NameContainsKeywordsDoctorPredicate implements Predicate\u003cDoctor\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    public NameContainsKeywordsDoctorPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public boolean test(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(doctor.getName().fullName, keyword));","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        if (!(other instanceof NameContainsKeywordsDoctorPredicate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"                (NameContainsKeywordsDoctorPredicate) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        return Objects.hash(keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"-":37,"kimshitong":15}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPatientPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"public class NameContainsKeywordsPatientPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public NameContainsKeywordsPatientPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        return Objects.hash(this.keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName, keyword));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        if (!(other instanceof NameContainsKeywordsPatientPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate otherNameContainsKeywordsPatientPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"                (NameContainsKeywordsPatientPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        return keywords.equals(otherNameContainsKeywordsPatientPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"cheeggered":49}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":" * Represents a Person\u0027s NRIC in the system.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"public class Nric implements Comparable\u003cNric\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"            \"NRIC should only contain alphanumeric characters and it should not be blank\";","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"    /*","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"     * The first character of the NRIC must either be \u0027S\u0027, \u0027T\u0027, \u0027F\u0027, \u0027G\u0027 or \u0027M\u0027,","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"     * followed by 7 digits and ending with a uppercase alphabet.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[STFGM]\\\\d{7}[A-Z]\";","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    public final String nric;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"     * Constructs a {@code Nric}.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     * @param nric A valid NRIC.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    public Nric(String nric) {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        String uppercaseNric \u003d nric.toUpperCase();","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        checkArgument(isValidNric(uppercaseNric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"        this.nric \u003d uppercaseNric;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if a given string is a valid NRIC.","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        return nric;","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        return nric.equals(otherNric.nric);","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"        return nric.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"    public int compareTo(Nric nric) {","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        return this.nric.compareTo(nric.nric);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"yanghengtang":62,"derekjxtan":6,"mounilsankar":3}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Data;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Listable;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":" * A parent class for all different types of people in the system.","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"public abstract class Person extends Data {","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for Person.","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     * @param name name of the person.","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     * @param nric nric of the person.","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    public Person(Name name, Nric nric) {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        super();","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(name, nric);","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for Person to set remark and tags.","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     * @param name name of person.","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * @param nric nric of the person.","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     * @param remark remark for the person.","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     * @param tags tags for the person.","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    public Person(Name name, Nric nric, Remark remark, HashSet\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        super(remark, tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(name, nric);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        return this.name;","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    public Nric getNric() {","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        return nric;","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"     * Returns true if both people have the same NRIC.","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"     * This defines a weaker notion of equality between two people.","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"    public boolean isSame(Listable otherListable) {","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        if (otherListable \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        if (!(otherListable instanceof Person)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"        Person otherPerson \u003d (Person) otherListable;","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        return otherPerson.nric.equals(nric);","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"     * Returns true if both people have the same identity fields.","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"     * This defines a stronger notion of equality between two people.","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"                \u0026\u0026 nric.equals(otherPerson.nric);","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"        return Objects.hash(name, nric);","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"derekjxtan":44,"-":53}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"public class Phone implements Comparable\u003cPhone\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"    public int compareTo(Phone phone) {","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        return value.compareTo(phone.value);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"derekjxtan":5,"-":60}},{"path":"src/main/java/seedu/address/model/person/doctor/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Listable;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" * Represents a Doctor in the address book.","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"public class Doctor extends Person {","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    public Doctor(Name name, Nric nric) {","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"        super(name, nric);","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"     * Constructor to set remark and tags.","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"     * @param name name of doctor.","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"     * @param nric nric of doctor.","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     * @param remark remark for doctor.","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     * @param tags tags for doctor.","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    public Doctor(Name name, Nric nric, Remark remark, HashSet\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        super(name, nric, remark, tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if both doctors have the same NRIC.","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"     * This defines a weaker notion of equality between two doctors.","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    public boolean isSame(Listable otherListable) {","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        if (!(otherListable instanceof Doctor)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        Doctor otherDoctor \u003d (Doctor) otherListable;","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        if (otherDoctor \u003d\u003d this) {","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        return otherDoctor.getNric().equals(getNric());","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if both doctors have the same identity fields.","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"     * This defines a stronger notion of equality between two doctors.","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"        if (!(other instanceof Doctor)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"        Doctor otherDoctor \u003d (Doctor) other;","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"        return super.equals(otherDoctor);","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"                .add(\"nric\", getNric())","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"                .add(\"tags\", getTags())","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"                .add(\"remark\", getRemark())","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"                .toString();","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yanghengtang":59,"derekjxtan":23,"kimshitong":2}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * Signals that the operation will result in duplicate Listable (Listables are considered duplicates if they have the","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" * same identity).","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"derekjxtan":11}},{"path":"src/main/java/seedu/address/model/person/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * Signals that the operation is unable to find the specified Listable.","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"public class ItemNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"derekjxtan":7}},{"path":"src/main/java/seedu/address/model/person/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":" * Represents a Patient in the system.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"public class Patient extends Person {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    // Identity fields","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    private final Phone phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for Patient.","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"     * @param name name of patient.","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"     * @param phone phone number of patient.","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     * @param nric nric of patient.","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    public Patient(Name name, Phone phone, Nric nric) {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        super(name, nric);","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(phone);","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     * Constructor to set remark and tags.","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"     * @param name name of patient.","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"     * @param phone phone number of patient.","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"     * @param nric nric of patient.","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"     * @param remark remark for patient.","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"     * @param tags tags for patient.","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    public Patient(Name name, Phone phone, Nric nric, Remark remark, HashSet\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        super(name, nric, remark, tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(phone);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        return phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if both patients have the same identity fields.","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"        return super.equals(otherPatient) \u0026\u0026 phone.equals(otherPatient.phone);","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        return Objects.hash(getName(), phone, getNric());","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"                .add(\"nric\", getNric())","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"                .add(\"remark\", getRemark())","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"                .add(\"conditions\", getTags())","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"yanghengtang":61,"derekjxtan":30,"cheeggered":2}},{"path":"src/main/java/seedu/address/model/remark/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model.remark;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":" * Represents a Remark in MediConnect","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidRemark(String)}","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"public class Remark {","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"\";","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"    public final String remark;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"     * Returns true if a given string is a valid NRIC.","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"        return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    // TODO: implement validation check","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        return remark;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        return remark.equals(otherRemark.remark);","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        return remark.hashCode();","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"derekjxtan":58}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":" * Contains utility methods for populating {@code Database} with sample data.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        return new Patient[] {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"            new Patient(new Name(\"Mike Ng\"), new Phone(\"87438807\"), new Nric(\"S6912483J\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"ChronicMigraine\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"            new Patient(new Name(\"Michelle Lim\"), new Phone(\"99272758\"), new Nric(\"S2349123A\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Depression\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"            new Patient(new Name(\"Joe Sin\"), new Phone(\"93210283\"), new Nric(\"S1890251D\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"Patient is to fast 12 hours before next appointment\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Diabetes\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"            new Patient(new Name(\"Jonathan Reese\"), new Phone(\"91031282\"), new Nric(\"S7142983F\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Gastric\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"            new Patient(new Name(\"Damien Ng\"), new Phone(\"92492021\"), new Nric(\"S1348067K\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"HeartDisease\")))","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    public static Doctor[] getSampleDoctors() {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        return new Doctor[] {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"            new Doctor(new Name(\"Kim Shi Tong\"), new Nric(\"G0234723F\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"Not available: 13 Nov 2023 - 15 Nov 2023\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Psychiatry\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"            new Doctor(new Name(\"Mah Chee Teng\"), new Nric(\"T0384394D\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"Overseas: 5 Dec 2023 - 16 Dec 2023\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Pediatric\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"            new Doctor(new Name(\"Mounil Sankar\"), new Nric(\"T0123483C\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"On Course: 1 Dec 2023\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Cardiology\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"            new Doctor(new Name(\"Derek Tan\"), new Nric(\"T0151708E\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"National Service ICT: 11 Jan 2024 - 22 Jan 2024\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Neurology\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"            new Doctor(new Name(\"Tang Yang Heng\"), new Nric(\"T0157283A\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"On Course: 15 Jan 2024\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"GP\", \"Trauma\")))","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"        };","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"    public static Appointment[] getSampleAppointments() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"        return new Appointment[] {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"            new Appointment(new Nric(\"S6912483J\"), new Nric(\"T0157283A\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"                    new AppointmentStartTime(\"2023-09-09 10:30\"), new AppointmentEndTime(\"2023-09-09 10:45\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"Patient came with flu with cough, but Covid ART -ve\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Panadol\", \"CoughSyrup\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"            new Appointment(new Nric(\"S2349123A\"), new Nric(\"G0234723F\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"                    new AppointmentStartTime(\"2023-09-09 14:30\"), new AppointmentEndTime(\"2023-09-09 15:30\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"Patient exhibits worsening symptoms\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Antidepressants\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"            new Appointment(new Nric(\"S1890251D\"), new Nric(\"T0157283A\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"                    new AppointmentStartTime(\"2023-09-10 10:00\"), new AppointmentEndTime(\"2023-09-10 10:30\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"Patient to return in November for blood sugar testing\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Chlorpropamide\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"            new Appointment(new Nric(\"S7142983F\"), new Nric(\"T0151708E\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"                    new AppointmentStartTime(\"2023-09-11 10:30\"), new AppointmentEndTime(\"2023-09-11 11:30\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"No follow up appointment required\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"            new Appointment(new Nric(\"S1348067K\"), new Nric(\"T0123483C\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"                    new AppointmentStartTime(\"2023-09-11 11:30\"), new AppointmentEndTime(\"2023-09-11 12:30\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"                    new Remark(\"Patient\u0027s cholesterol level has steadily decreased\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"                    new HashSet\u003c\u003e(getTagSet(\"Atorvastatin\", \"Lovastatin\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"            new Appointment(new Nric(\"S2349123A\"), new Nric(\"G0234723F\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"                    new AppointmentStartTime(\"2023-11-04 14:30\"), new AppointmentEndTime(\"2023-11-04 15:30\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"            new Appointment(new Nric(\"S1890251D\"), new Nric(\"T0157283A\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"                    new AppointmentStartTime(\"2023-11-06 10:00\"), new AppointmentEndTime(\"2023-11-06 10:30\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"            new Appointment(new Nric(\"S1348067K\"), new Nric(\"T0123483C\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"                    new AppointmentStartTime(\"2023-11-11 10:30\"), new AppointmentEndTime(\"2023-11-11 11:30\"))","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"        };","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"    public static ReadOnlyDatabase getSampleDatabase() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"        Database sampleDb \u003d new Database();","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"        for (Patient samplePatient : getSamplePatients()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"            sampleDb.addPatient(samplePatient);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"        for (Doctor sampleDoctor : getSampleDoctors()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"            sampleDb.addDoctor(sampleDoctor);","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"        for (Appointment sampleAppointment : getSampleAppointments()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"            sampleDb.addAppointment(sampleAppointment);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"        return sampleDb;","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yanghengtang":88,"mounilsankar":3,"-":29}},{"path":"src/main/java/seedu/address/storage/DatabaseStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" * Represents a storage for {@link seedu.address.model.Database}.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public interface DatabaseStorage {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"     * Returns the file path of the patient data file.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     * Returns Database data as a {@link seedu.address.model.ReadOnlyDatabase}.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     * Returns {@code Optional.empty()} if storage files are not found.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataLoadingException, CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     * @see #getDatabaseFilePath()","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath)","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"            throws DataLoadingException, CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     * Saves the given {@link ReadOnlyDatabase} to the storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     * @param database cannot be null.","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    void saveDatabase(ReadOnlyDatabase database) throws IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"     * @see #saveDatabase(ReadOnlyDatabase)","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":43,"mounilsankar":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"class JsonAdaptedAppointment extends JsonAdaptedData {","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    private final String doctorNric;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    private final String patientNric;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    private final String startTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    private final String endTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"doctorNric\") String doctorNric,","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"                                  @JsonProperty(\"patientNric\") String patientNric,","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"                                  @JsonProperty(\"startTime\") String startTime,","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"                                  @JsonProperty(\"endTime\") String endTime,","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"                                  @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"                                  @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        super(remark, tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        this.doctorNric \u003d doctorNric;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        super(source);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        doctorNric \u003d source.getDoctorNric().nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        patientNric \u003d source.getPatientNric().nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        startTime \u003d source.getStartTime().toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        endTime \u003d source.getEndTime().toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"    public Appointment toModelType() throws IllegalValueException, CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        if (doctorNric \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"        if (!Nric.isValidNric(doctorNric)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        final Nric modelDoctorNric \u003d new Nric(doctorNric);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"        if (patientNric \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"        if (!Nric.isValidNric(patientNric)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"        final Nric modelPatientNric \u003d new Nric(patientNric);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"                    AppointmentStartTime.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        if (!AppointmentStartTime.isValidAppointmentTime(startTime)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(AppointmentStartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"        final AppointmentStartTime modelAppointmentStartTime \u003d new AppointmentStartTime(startTime);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"                    AppointmentEndTime.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"        if (!AppointmentEndTime.isValidAppointmentTime(endTime)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(AppointmentEndTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"        final AppointmentEndTime modelAppointmentEndTime \u003d new AppointmentEndTime(endTime);","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"        final Remark modelRemark \u003d getModelRemark();","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"        final HashSet\u003cTag\u003e modelTags \u003d getModelTags();","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"        return new Appointment(modelDoctorNric, modelPatientNric, modelAppointmentStartTime, modelAppointmentEndTime,","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"                modelRemark, modelTags);","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":102,"mounilsankar":2}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Data;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":" * A parallel class to {@link Data} for saving to/loading from file.","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":" * Handles and validates remark and tags.","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"public abstract class JsonAdaptedData {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"%s field is missing!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    private final String remark;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"     * Constructor used when loading data from file.","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedData(String remark, List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     * Constructor used when saving data to file.","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedData(Data source) {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"        this.remark \u003d source.getRemark().remark;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        this.tags.addAll(source.getTags().stream().map(JsonAdaptedTag::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     * Validates and returns a {@code Remark}.","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    public Remark getModelRemark() throws IllegalValueException {","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        if (this.remark \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        if (!Remark.isValidRemark(this.remark)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        return new Remark(this.remark);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"     * Validates and returns {@code HashSet} of {@code Tag}.","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    public HashSet\u003cTag\u003e getModelTags() throws IllegalValueException {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        final List\u003cTag\u003e dataTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        for (JsonAdaptedTag tag : this.tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"            dataTags.add(tag.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        return new HashSet\u003cTag\u003e(dataTags);","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"derekjxtan":62}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDoctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":" * Jackson-friendly version of {@link Doctor}.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"class JsonAdaptedDoctor extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * Constructs a {@code JsonAdaptedDoctor} with the given doctor details.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedDoctor(@JsonProperty(\"nric\") String nric, @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"                             @JsonProperty(\"remark\") String remark, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        super(nric, name, remark, tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     * Converts a given {@code Doctor} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedDoctor(Doctor source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        super(source);","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     * Converts this Jackson-friendly adapted doctor object into the model\u0027s {@code Doctor} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted doctor.","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    public Doctor toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        final Name modelName \u003d getModelName();","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        final Nric modelNric \u003d getModelNric();","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        final Remark modelRemark \u003d getModelRemark();","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        final HashSet\u003cTag\u003e modelTags \u003d getModelTags();","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        return new Doctor(modelName, modelNric, modelRemark, modelTags);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"class JsonAdaptedPatient extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"%s field is missing!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    private final String phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"nric\") String nric, @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"                              @JsonProperty(\"phone\") String phone, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"                              @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        super(nric, name, remark, tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        super(source);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        final Name modelName \u003d getModelName();","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        final Nric modelNric \u003d getModelNric();","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        final Remark modelRemark \u003d getModelRemark();","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        final HashSet\u003cTag\u003e modelTags \u003d getModelTags();","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        return new Patient(modelName, modelPhone, modelNric, modelRemark, modelTags);","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":66}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":" * A parallel class to {@link Person} for saving to/loading from file.","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" * Handles and validates name and nric.","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public abstract class JsonAdaptedPerson extends JsonAdaptedData {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"%s field is missing!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    private final String nric;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * Constructor used when loading data from file.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedPerson(String nric, String name, String remark, List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        super(remark, tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     * Constructor used when saving data to file.","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        super(source);","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        nric \u003d source.getNric().nric;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     * Validates and returns a {@code Name}.","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    public Name getModelName() throws IllegalValueException {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        if (this.name \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        if (!Name.isValidName(this.name)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        return new Name(this.name);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"     * Validates and returns a {@code Nric}.","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    public Nric getModelNric() throws IllegalValueException {","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        if (this.nric \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"        if (!Nric.isValidNric(this.nric)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        return new Nric(this.nric);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"derekjxtan":28,"-":35}},{"path":"src/main/java/seedu/address/storage/JsonDatabaseStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":" * A class to access Database data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"public class JsonDatabaseStorage implements DatabaseStorage {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDatabaseStorage.class);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    public JsonDatabaseStorage(Path filePath) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        return filePath;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataLoadingException, CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        return readDatabase(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"     * Similar to {@link #readDatabase()}.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath)","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"            throws DataLoadingException, CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        Optional\u003cJsonSerializableDatabase\u003e jsonDatabase \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"                filePath, JsonSerializableDatabase.class);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        if (!jsonDatabase.isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"            return Optional.of(jsonDatabase.get().toModelType());","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"    public void saveDatabase(ReadOnlyDatabase database) throws IOException {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"        saveDatabase(database, filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"     * Similar to {@link #saveDatabase(ReadOnlyDatabase)}.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"    public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(database);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDatabase(database), filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":80,"mounilsankar":3}},{"path":"src/main/java/seedu/address/storage/JsonSerializableDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":" * An Immutable Database that is serializable to JSON format.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"@JsonRootName(value \u003d \"database\")","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"class JsonSerializableDatabase {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"Patients list contains duplicate patients(s).\";","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    public static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"Doctors list contains duplicate doctors(s).\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointments list contains duplicate appointments(s).\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    private final List\u003cJsonAdaptedDoctor\u003e doctors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     * Constructs a {@code JsonSerializableDatabase} with the given persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    public JsonSerializableDatabase(@JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients,","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"                                    @JsonProperty(\"doctors\") List\u003cJsonAdaptedDoctor\u003e doctors,","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"                                    @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        this.patients.addAll(patients);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        this.doctors.addAll(doctors);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"     * Converts a given {@code ReadOnlyDatabase} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableDatabase}.","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    public JsonSerializableDatabase(ReadOnlyDatabase source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        patients.addAll(source.getPatientList().stream().map(JsonAdaptedPatient::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        doctors.addAll(source.getDoctorList().stream().map(JsonAdaptedDoctor::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        appointments.addAll(source.getAppointmentList().stream().map(JsonAdaptedAppointment::new)","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"     * Converts this database into the model\u0027s {@code Database} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"    public Database toModelType() throws IllegalValueException, CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        Database database \u003d new Database();","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        for (JsonAdaptedPatient jsonAdaptedPatient : patients) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"            Patient patient \u003d jsonAdaptedPatient.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"            if (database.hasPatient(patient)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"            database.addPatient(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"        for (JsonAdaptedDoctor jsonAdaptedDoctor : doctors) {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"            Doctor doctor \u003d jsonAdaptedDoctor.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"            if (database.hasDoctor(doctor)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"            database.addDoctor(doctor);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"            if (database.hasAppointment(appointment)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"            database.addAppointment(appointment);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"        return database;","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":86,"mounilsankar":2}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public interface Storage extends DatabaseStorage, UserPrefsStorage {","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataLoadingException, CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    void saveDatabase(ReadOnlyDatabase database) throws IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":1,"mounilsankar":2,"derekjxtan":3,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":" * Manages storage of MediConnect data in local storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    private DatabaseStorage databaseStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code StorageManager} with the given {@code DatabaseStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    public StorageManager(DatabaseStorage databaseStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        this.databaseStorage \u003d databaseStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Database methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        return databaseStorage.getDatabaseFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataLoadingException, CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        return readDatabase(databaseStorage.getDatabaseFilePath());","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath) throws DataLoadingException, CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"        return databaseStorage.readDatabase(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"    public void saveDatabase(ReadOnlyDatabase database) throws IOException {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        saveDatabase(database, databaseStorage.getDatabaseFilePath());","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"    public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        databaseStorage.saveDatabase(database, filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":2,"mounilsankar":3,"derekjxtan":13,"-":61}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":" * An UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"MMM d yyyy HH:mm\";","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    public final Appointment appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    private Label startDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"    private Label endDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    private Label id;","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    private Label patientNric;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"    private Label doctorNric;","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code AppointmentCard} with the given {@code Appointment} and index to display.","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    public AppointmentCard(Appointment appointment, int displayedIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        super(FXML);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        id.setText(String.format(\"%d\", displayedIndex));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        startDateTime.setText(appointment.getStartTime().getTime().format(DateTimeFormatter","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"                .ofPattern(DATE_TIME_FORMAT)));","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        endDateTime.setText(appointment.getEndTime().getTime().format(DateTimeFormatter.ofPattern(DATE_TIME_FORMAT)));","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        patientNric.setText(appointment.getPatientNric().nric);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        doctorNric.setText(appointment.getDoctorNric().nric);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"yanghengtang":53,"derekjxtan":1}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" * Panel containing the list of appointments.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code AppointmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        super(FXML);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"                setText(null);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"            } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"yanghengtang":48}},{"path":"src/main/java/seedu/address/ui/AppointmentWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" * Controller for an appointment page","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"public class AppointmentWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppointmentWindow.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    private static final String FXML \u003d \"AppointmentWindow.fxml\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"MMM d yyyy HH:mm\";","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    private Appointment appointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    private Label startDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    private Label endDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    private Label patientNric;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    private Label doctorNric;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    private Label remark;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"     * Creates a new AppointmentWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"     * @param root Stage to use as the root of the AppointmentWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    public AppointmentWindow(Stage root) {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"     * Creates a new AppointmentWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"    public AppointmentWindow() {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        this(new Stage());","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"     * Updates the displayed appointment in the window.","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"     * @param appointment The given appointment to be displayed","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"        startDateTime.setText(appointment.getStartTime().getTime().format(DateTimeFormatter","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"                .ofPattern(DATE_TIME_FORMAT)));","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"        endDateTime.setText(appointment.getEndTime().getTime().format(DateTimeFormatter.ofPattern(DATE_TIME_FORMAT)));","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"        patientNric.setText(appointment.getPatientNric().nric);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"        doctorNric.setText(appointment.getDoctorNric().nric);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"        remark.setText(appointment.getRemark().remark);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"        appointment.getTags().stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"     * Shows the appointment window.","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"    public void show() {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"        logger.fine(\"Showing appointment page about the application.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if the appointment window is currently being shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"     * Hides the appointment window.","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"    public void hide() {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"        getRoot().hide();","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"yanghengtang"},"content":"     * Focuses on the appointment window.","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"yanghengtang"},"content":"    public void focus() {","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"yanghengtang"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yanghengtang":116}},{"path":"src/main/java/seedu/address/ui/DoctorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":" * An UI component that displays information of a {@code Doctor}.","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"public class DoctorCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"    private static final String FXML \u003d \"DoctorListCard.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    public final Doctor doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    private Label name;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    private Label id;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    private Label nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code DoctorCard} with the given {@code Doctor} and index to display.","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    public DoctorCard(Doctor doctor, int displayedIndex) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        super(FXML);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        id.setText(String.format(\"%d\", displayedIndex));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"        name.setText(doctor.getName().fullName);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        nric.setText(doctor.getNric().nric);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":44}},{"path":"src/main/java/seedu/address/ui/DoctorListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" * Panel containing the list of doctors.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public class DoctorListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    private static final String FXML \u003d \"DoctorListPanel.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DoctorListPanel.class);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    private ListView\u003cDoctor\u003e doctorListView;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code DoctorListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    public DoctorListPanel(ObservableList\u003cDoctor\u003e doctorsList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        super(FXML);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        doctorListView.setItems(doctorsList);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        doctorListView.setCellFactory(listView -\u003e new DoctorListViewCell());","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Doctor} using a {@code DoctorCard}.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    class DoctorListViewCell extends ListCell\u003cDoctor\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        protected void updateItem(Doctor doctor, boolean empty) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"            super.updateItem(doctor, empty);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"            if (empty || doctor \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"                setText(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"                setGraphic(new DoctorCard(doctor, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":48}},{"path":"src/main/java/seedu/address/ui/DoctorWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" * Controller for a doctor page","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public class DoctorWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DoctorWindow.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    private static final String FXML \u003d \"DoctorWindow.fxml\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    private Doctor doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    private Label name;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    private Label nric;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    private Label remark;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"     * Creates a new DoctorWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"     * @param root Stage to use as the root of the DoctorWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    public DoctorWindow(Stage root) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"     * Creates a new DoctorWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    public DoctorWindow() {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        this(new Stage());","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"     * Updates the displayed doctor in the window.","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"     * @param doctor The given doctor to be displayed","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        name.setText(doctor.getName().fullName);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        nric.setText(doctor.getNric().nric);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        remark.setText(doctor.getRemark().remark);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        doctor.getTags().stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"     * Shows the doctor window.","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"    public void show() {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"        logger.fine(\"Showing doctor page about the application.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if the doctor window is currently being shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"     * Hides the doctor window.","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"    public void hide() {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"        getRoot().hide();","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"     * Focuses on the doctor window.","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"    public void focus() {","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yanghengtang":107}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"    private DoctorListPanel doctorListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    private AppointmentWindow appointmentWindow;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    private DoctorWindow doctorWindow;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    private PatientWindow patientWindow;","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"    private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"    private StackPane doctorListPanelPlaceholder;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"        appointmentWindow \u003d new AppointmentWindow();","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"        doctorWindow \u003d new DoctorWindow();","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"        patientWindow \u003d new PatientWindow();","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"yanghengtang"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"yanghengtang"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"yanghengtang"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPatientList());","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"yanghengtang"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"yanghengtang"},"content":"        doctorListPanel \u003d new DoctorListPanel(logic.getFilteredDoctorList());","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"yanghengtang"},"content":"        doctorListPanelPlaceholder.getChildren().add(doctorListPanel.getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"yanghengtang"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getDatabaseFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"yanghengtang"},"content":"     * Opens the appointment window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"yanghengtang"},"content":"    public void handleViewAppointment() {","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"yanghengtang"},"content":"        Appointment selectedAppointment \u003d logic.getSelectedAppointment();","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"        appointmentWindow.updateSelectedAppointment(selectedAppointment);","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"yanghengtang"},"content":"        if (!appointmentWindow.isShowing()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"            appointmentWindow.show();","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"yanghengtang"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"            appointmentWindow.focus();","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"yanghengtang"},"content":"     * Opens the doctor window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"yanghengtang"},"content":"    public void handleViewDoctor() {","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"yanghengtang"},"content":"        Doctor selectedDoctor \u003d logic.getSelectedDoctor();","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"yanghengtang"},"content":"        doctorWindow.updateSelectedDoctor(selectedDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"yanghengtang"},"content":"        if (!doctorWindow.isShowing()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"yanghengtang"},"content":"            doctorWindow.show();","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"yanghengtang"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"yanghengtang"},"content":"            doctorWindow.focus();","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"yanghengtang"},"content":"     * Opens the patient window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"yanghengtang"},"content":"    public void handleViewPatient() {","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"yanghengtang"},"content":"        Patient selectedPatient \u003d logic.getSelectedPatient();","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"yanghengtang"},"content":"        patientWindow.updateSelectedPatient(selectedPatient);","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"yanghengtang"},"content":"        if (!patientWindow.isShowing()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"yanghengtang"},"content":"            patientWindow.show();","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"yanghengtang"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"yanghengtang"},"content":"            patientWindow.focus();","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-21"},{"lineNumber":230,"author":{"gitId":"yanghengtang"},"content":"        appointmentWindow.hide();","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"yanghengtang"},"content":"        doctorWindow.hide();","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"yanghengtang"},"content":"        patientWindow.hide();","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":237,"author":{"gitId":"yanghengtang"},"content":"    public AppointmentListPanel getAppointmentListPanel() {","lastModifiedDate":"2023-10-14"},{"lineNumber":238,"author":{"gitId":"yanghengtang"},"content":"        return appointmentListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":239,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":240,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":241,"author":{"gitId":"yanghengtang"},"content":"    public DoctorListPanel getDoctorListPanel() {","lastModifiedDate":"2023-10-14"},{"lineNumber":242,"author":{"gitId":"yanghengtang"},"content":"        return doctorListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":243,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":244,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":245,"author":{"gitId":"yanghengtang"},"content":"    public PatientListPanel getPatientListPanel() {","lastModifiedDate":"2023-10-14"},{"lineNumber":246,"author":{"gitId":"yanghengtang"},"content":"        return patientListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-10-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"yanghengtang"},"content":"            if (commandResult.isShowAppointment()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"yanghengtang"},"content":"                handleViewAppointment();","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"yanghengtang"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"yanghengtang"},"content":"            if (commandResult.isShowDoctor()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"yanghengtang"},"content":"                handleViewDoctor();","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"yanghengtang"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"yanghengtang"},"content":"            if (commandResult.isShowPatient()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"yanghengtang"},"content":"                handleViewPatient();","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"yanghengtang"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yanghengtang":98,"-":189}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    public final Patient patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    private Label name;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    private Label id;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    private Label nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code PatientCard} with the given {@code Patient} and index to display.","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        super(FXML);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        id.setText(String.format(\"%d\", displayedIndex));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        nric.setText(patient.getNric().nric);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":44}},{"path":"src/main/java/seedu/address/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" * Panel containing the list of patients.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    private static final String FXML \u003d \"PatientListPanel.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientListPanel.class);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code PatientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        super(FXML);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"                setText(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":48}},{"path":"src/main/java/seedu/address/ui/PatientWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" * Controller for a patient page","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public class PatientWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PatientWindow.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    private static final String FXML \u003d \"PatientWindow.fxml\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    private Patient patient;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    private Label name;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    private Label phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    private Label nric;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    private Label remark;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"     * Creates a new PatientWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"     * @param root Stage to use as the root of the PatientWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"    public PatientWindow(Stage root) {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"     * Creates a new PatientWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    public PatientWindow() {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        this(new Stage());","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"     * Updates the displayed patient in the window.","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"     * @param patient The given patient to be displayed","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedPatient(Patient patient) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        nric.setText(patient.getNric().nric);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        phone.setText(patient.getPhone().value);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        remark.setText(patient.getRemark().remark);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"        patient.getTags().stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"     * Shows the patient window.","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"    public void show() {","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"        logger.fine(\"Showing patient page about the application.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if the patient window is currently being shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"     * Hides the patient window.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"    public void hide() {","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"        getRoot().hide();","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"     * Focuses on the patient window.","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"    public void focus() {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yanghengtang":110}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"         \u003cHBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"                \u003cLabel fx:id\u003d\"header\" styleClass\u003d\"cell_label_bold\" text\u003d\"Appointment \" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"                   \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_label_bold\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"                       \u003cminWidth\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"                           \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"                           \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"                       \u003c/minWidth\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"                   \u003c/Label\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"                \u003cLabel fx:id\u003d\"startHeader\" styleClass\u003d\"cell_label_bold\" text\u003d\"Start: \" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"                \u003cLabel fx:id\u003d\"startDateTime\" styleClass\u003d\"cell_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"               \u003cLabel fx:id\u003d\"endHeader\" styleClass\u003d\"cell_label_bold\" text\u003d\"End: \" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"               \u003cLabel fx:id\u003d\"endDateTime\" styleClass\u003d\"cell_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"                    \u003cLabel fx:id\u003d\"patientNricHeader\" styleClass\u003d\"cell_label_bold\" text\u003d\"Patient NRIC: \" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"                    \u003cLabel fx:id\u003d\"patientNric\" styleClass\u003d\"cell_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"                    \u003cLabel fx:id\u003d\"doctorNricHeader\" styleClass\u003d\"cell_label_bold\" text\u003d\"Doctor NRIC: \" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"                    \u003cLabel fx:id\u003d\"doctorNric\" styleClass\u003d\"cell_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"yanghengtang":59}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"yanghengtang":8}},{"path":"src/main/resources/view/AppointmentWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"\u003cfx:root minHeight\u003d\"300\" minWidth\u003d\"500\" resizable\u003d\"false\" title\u003d\"Appointment Window\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    \u003cicons\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"                \u003cURL value\u003d\"@MediConnectTheme.css\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"                    \u003cStackPane styleClass\u003d\"header2-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel styleClass\u003d\"label-header2\" text\u003d\"Appointment Details\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"                    \u003cStackPane styleClass\u003d\"header3-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel styleClass\u003d\"label-header3\" text\u003d\"Schedule Information\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"                    \u003cVBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"                            \u003cHBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel styleClass\u003d\"cell_label_bold\" text\u003d\"Start Time: \" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel fx:id\u003d\"startDateTime\" styleClass\u003d\"cell_label\" text\u003d\"\\$start\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"                            \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"                            \u003cHBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel styleClass\u003d\"cell_label_bold\" text\u003d\"End Time: \" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel fx:id\u003d\"endDateTime\" styleClass\u003d\"cell_label\" text\u003d\"\\$end\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"                            \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"                            \u003cHBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel styleClass\u003d\"cell_label_bold\" text\u003d\"Patient NRIC: \" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel fx:id\u003d\"patientNric\" styleClass\u003d\"cell_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"                            \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"                            \u003cHBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel styleClass\u003d\"cell_label_bold\" text\u003d\"Doctor NRIC: \" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel fx:id\u003d\"doctorNric\" styleClass\u003d\"cell_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"                            \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"                    \u003cStackPane styleClass\u003d\"header3-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel styleClass\u003d\"label-header3\" text\u003d\"Prescription\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"                    \u003cFlowPane fx:id\u003d\"tags\" minHeight\u003d\"50\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"                    \u003cStackPane styleClass\u003d\"header3-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel styleClass\u003d\"label-header3\" text\u003d\"Remarks\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"                    \u003cStackPane alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yanghengtang":92}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003cStackPane styleClass\u003d\"pane-borderless\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"yanghengtang":1,"-":8}},{"path":"src/main/resources/view/DoctorListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"         \u003cHBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"                \u003cLabel fx:id\u003d\"header\" styleClass\u003d\"cell_label_bold\" text\u003d\"Doctor \" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"                   \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_label_bold\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"                       \u003cminWidth\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"                           \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"                           \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"                       \u003c/minWidth\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"                   \u003c/Label\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"             \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"         \u003cHBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"               \u003cLabel fx:id\u003d\"nricHeader\" styleClass\u003d\"cell_label_bold\" text\u003d\"NRIC: \" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"                  \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":44}},{"path":"src/main/resources/view/DoctorListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"    \u003cListView fx:id\u003d\"doctorListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":1,"-":7}},{"path":"src/main/resources/view/DoctorWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"\u003cfx:root minHeight\u003d\"300\" minWidth\u003d\"500\" resizable\u003d\"false\" title\u003d\"Doctor Window\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    \u003cicons\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"                \u003cURL value\u003d\"@MediConnectTheme.css\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"                    \u003cStackPane styleClass\u003d\"header2-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel styleClass\u003d\"label-header2\" text\u003d\"Doctor Details\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"                    \u003cStackPane styleClass\u003d\"header3-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel styleClass\u003d\"label-header3\" text\u003d\"Basic Information\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"                    \u003cVBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"                            \u003cHBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel styleClass\u003d\"cell_label_bold\" text\u003d\"Name: \" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"                            \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"                            \u003cHBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel styleClass\u003d\"cell_label_bold\" text\u003d\"NRIC: \" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"                                    \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"                            \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"                    \u003cStackPane styleClass\u003d\"header3-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel styleClass\u003d\"label-header3\" text\u003d\"Specialisation\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"                    \u003cFlowPane fx:id\u003d\"tags\" minHeight\u003d\"50\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"                    \u003cStackPane styleClass\u003d\"header3-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel styleClass\u003d\"label-header3\" text\u003d\"Remarks\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"                    \u003cStackPane alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yanghengtang":80}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"\u003cfx:root minHeight\u003d\"750\" minWidth\u003d\"750\" onCloseRequest\u003d\"#handleExit\" title\u003d\"MediConnect App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"        \u003cURL value\u003d\"@MediConnectTheme.css\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"            \u003cStackPane prefHeight\u003d\"40.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"header-pane\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"                  \u003cLabel text\u003d\"MediConnect\" styleClass\u003d\"label-header\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-borderless\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"125\" minHeight\u003d\"125\" prefHeight\u003d\"125\" styleClass\u003d\"pane-borderless\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-borderless\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"               \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"                \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" minWidth\u003d\"250.0\" prefWidth\u003d\"300.0\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"                     \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" minWidth\u003d\"250.0\" prefWidth\u003d\"300.0\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"                     \u003cStackPane fx:id\u003d\"doctorListPanelPlaceholder\" minWidth\u003d\"250.0\" prefWidth\u003d\"300.0\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yanghengtang":23,"-":48}},{"path":"src/main/resources/view/MediConnectTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":".background {","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"    background-color: #F5F5F5; /* Used in the default.html file */","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"/*","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":" * Metro style Push Button","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":".button {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":".button:hover {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":".button:focused {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":".button:default {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":".button:default:hover {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":".cell_label_bold {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":".cell_label {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #505050;","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":".command-box {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #AFE4D8;","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-color: #F5F5F5;","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":".context-menu {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":".context-menu .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":".dialog-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":".grid-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"yanghengtang"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":".header-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #6FC2AE;","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"yanghengtang"},"content":".header2-pane {","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #6FC2AE;","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"yanghengtang"},"content":".header3-pane {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #979B9A;","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"yanghengtang"},"content":".label {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"yanghengtang"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"yanghengtang"},"content":".label-bright {","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"yanghengtang"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"yanghengtang"},"content":".label-header {","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 30px;","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-weight: 500;","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"yanghengtang"},"content":".label-header2 {","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 25px;","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-weight: 500;","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"yanghengtang"},"content":".label-header3 {","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-weight: 500;","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"yanghengtang"},"content":".list-view {","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"yanghengtang"},"content":".list-cell {","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"yanghengtang"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"yanghengtang"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"yanghengtang"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"yanghengtang"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"yanghengtang"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #979B9A;","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"yanghengtang"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-color: #979B9A;","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"yanghengtang"},"content":".list-cell .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #505050;","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"yanghengtang"},"content":".menu-bar {","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #979B9A;","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"yanghengtang"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"yanghengtang"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"yanghengtang"},"content":".menu .left-container {","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"yanghengtang"},"content":".pane-borderless {","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"yanghengtang"},"content":"     -fx-background-color: #F5F5F5;","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"yanghengtang"},"content":"     -fx-padding: 4px;","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"yanghengtang"},"content":".result-display {","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #AFE4D8;","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #224940;","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"yanghengtang"},"content":".result-display .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"yanghengtang"},"content":".scroll-bar {","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #CBCECD;","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"yanghengtang"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #979B9A;","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"yanghengtang"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"yanghengtang"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"yanghengtang"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"yanghengtang"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"yanghengtang"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"yanghengtang"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"yanghengtang"},"content":".split-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":262,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":265,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":266,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":267,"author":{"gitId":"yanghengtang"},"content":".stack-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":268,"author":{"gitId":"yanghengtang"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":270,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":271,"author":{"gitId":"yanghengtang"},"content":".status-bar {","lastModifiedDate":"2023-10-18"},{"lineNumber":272,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #979B9A;","lastModifiedDate":"2023-10-18"},{"lineNumber":273,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":274,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":275,"author":{"gitId":"yanghengtang"},"content":".status-bar .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"yanghengtang"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-10-18"},{"lineNumber":280,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":281,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":282,"author":{"gitId":"yanghengtang"},"content":".status-bar-with-border {","lastModifiedDate":"2023-10-18"},{"lineNumber":283,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":284,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":287,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":288,"author":{"gitId":"yanghengtang"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":290,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":291,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":292,"author":{"gitId":"yanghengtang"},"content":".text-field {","lastModifiedDate":"2023-10-18"},{"lineNumber":293,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":294,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":295,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":297,"author":{"gitId":"yanghengtang"},"content":".tab-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":298,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":300,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":301,"author":{"gitId":"yanghengtang"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-10-18"},{"lineNumber":302,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":303,"author":{"gitId":"yanghengtang"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"yanghengtang"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":305,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":306,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":307,"author":{"gitId":"yanghengtang"},"content":".table-view {","lastModifiedDate":"2023-10-18"},{"lineNumber":308,"author":{"gitId":"yanghengtang"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-10-18"},{"lineNumber":309,"author":{"gitId":"yanghengtang"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-10-18"},{"lineNumber":310,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-18"},{"lineNumber":311,"author":{"gitId":"yanghengtang"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":312,"author":{"gitId":"yanghengtang"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":313,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-10-18"},{"lineNumber":314,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":315,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":316,"author":{"gitId":"yanghengtang"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-10-18"},{"lineNumber":317,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"yanghengtang"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"yanghengtang"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":323,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":324,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-color:","lastModifiedDate":"2023-10-18"},{"lineNumber":325,"author":{"gitId":"yanghengtang"},"content":"        transparent","lastModifiedDate":"2023-10-18"},{"lineNumber":326,"author":{"gitId":"yanghengtang"},"content":"        transparent","lastModifiedDate":"2023-10-18"},{"lineNumber":327,"author":{"gitId":"yanghengtang"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-10-18"},{"lineNumber":328,"author":{"gitId":"yanghengtang"},"content":"        transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":329,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":330,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":331,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":332,"author":{"gitId":"yanghengtang"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":333,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":334,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":335,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":336,"author":{"gitId":"yanghengtang"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-10-18"},{"lineNumber":337,"author":{"gitId":"yanghengtang"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":338,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":339,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":340,"author":{"gitId":"yanghengtang"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-10-18"},{"lineNumber":341,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-18"},{"lineNumber":342,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":343,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":344,"author":{"gitId":"yanghengtang"},"content":"#cardPane {","lastModifiedDate":"2023-10-18"},{"lineNumber":345,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #E2F5F1;","lastModifiedDate":"2023-10-18"},{"lineNumber":346,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":347,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":348,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":349,"author":{"gitId":"yanghengtang"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-10-18"},{"lineNumber":350,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-10-18"},{"lineNumber":351,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-10-18"},{"lineNumber":352,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":353,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":354,"author":{"gitId":"yanghengtang"},"content":"#commandTextField {","lastModifiedDate":"2023-10-18"},{"lineNumber":355,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #AFE4D8;","lastModifiedDate":"2023-10-18"},{"lineNumber":356,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":357,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-10-18"},{"lineNumber":358,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-10-18"},{"lineNumber":359,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":360,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: #224940;","lastModifiedDate":"2023-10-18"},{"lineNumber":361,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":362,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":363,"author":{"gitId":"yanghengtang"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-10-18"},{"lineNumber":364,"author":{"gitId":"yanghengtang"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-18"},{"lineNumber":365,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":366,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":367,"author":{"gitId":"yanghengtang"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-10-18"},{"lineNumber":368,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #AFE4D8;","lastModifiedDate":"2023-10-18"},{"lineNumber":369,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":370,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":371,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":372,"author":{"gitId":"yanghengtang"},"content":"#tags {","lastModifiedDate":"2023-10-18"},{"lineNumber":373,"author":{"gitId":"yanghengtang"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-18"},{"lineNumber":374,"author":{"gitId":"yanghengtang"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":375,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":376,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":377,"author":{"gitId":"yanghengtang"},"content":"#tags .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":378,"author":{"gitId":"yanghengtang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":379,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-10-18"},{"lineNumber":380,"author":{"gitId":"yanghengtang"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":381,"author":{"gitId":"yanghengtang"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":382,"author":{"gitId":"yanghengtang"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":383,"author":{"gitId":"yanghengtang"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-18"},{"lineNumber":384,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"yanghengtang":384}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"         \u003cHBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"                \u003cLabel fx:id\u003d\"header\" styleClass\u003d\"cell_label_bold\" text\u003d\"Patient \" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"                   \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_label_bold\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"                       \u003cminWidth\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"                           \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"                           \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"                       \u003c/minWidth\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"                   \u003c/Label\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"             \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"         \u003cHBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"               \u003cLabel fx:id\u003d\"nricHeader\" styleClass\u003d\"cell_label_bold\" text\u003d\"NRIC: \" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"                  \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":44}},{"path":"src/main/resources/view/PatientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"    \u003cListView fx:id\u003d\"patientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":8}},{"path":"src/main/resources/view/PatientWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"\u003cfx:root minHeight\u003d\"300\" minWidth\u003d\"500\" resizable\u003d\"false\" title\u003d\"Patient Window\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    \u003cicons\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"                \u003cURL value\u003d\"@MediConnectTheme.css\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"         \u003cVBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"               \u003cStackPane styleClass\u003d\"header2-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"                     \u003cLabel styleClass\u003d\"label-header2\" text\u003d\"Patient Details\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"               \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"               \u003cStackPane styleClass\u003d\"header3-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"                     \u003cLabel styleClass\u003d\"label-header3\" text\u003d\"Basic Information\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"               \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"               \u003cVBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"                           \u003cLabel styleClass\u003d\"cell_label_bold\" text\u003d\"Name: \" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"                           \u003cLabel styleClass\u003d\"cell_label_bold\" text\u003d\"NRIC: \" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"                           \u003cLabel styleClass\u003d\"cell_label_bold\" text\u003d\"Phone: \" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"                            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"                     \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"               \u003cStackPane styleClass\u003d\"header3-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"                     \u003cLabel styleClass\u003d\"label-header3\" text\u003d\"Medical History\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"               \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"                \u003cFlowPane fx:id\u003d\"tags\" minHeight\u003d\"50\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"                  \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"               \u003cStackPane styleClass\u003d\"header3-pane\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"                     \u003cLabel styleClass\u003d\"label-header3\" text\u003d\"Remarks\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"               \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"               \u003cStackPane alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"                     \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"                     \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"               \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yanghengtang":86}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-borderless\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"yanghengtang":1,"-":8}},{"path":"src/test/java/seedu/address/commons/util/CheckedFunctionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.commons.util.lambdautil.CheckedFunctionUtil.unchecked;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.util.lambdautil.CheckedFunction;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public class CheckedFunctionUtilTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    public static final CheckedFunction\u003cInteger, Integer\u003e FAILURE \u003d i -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"        throw new CommandException(\"Test\");","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    };","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final CheckedFunction\u003cInteger, Integer\u003e SUCCESS \u003d i -\u003e i;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    public static final Function\u003cInteger, Integer\u003e SUCCESS_EQUIVALENT \u003d i -\u003e i;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    public void uncheck_test() {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(RuntimeException.class, () -\u003e unchecked(FAILURE).apply(10));","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(unchecked(SUCCESS).apply(10), SUCCESS_EQUIVALENT.apply(10));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"derekjxtan":26}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDoctor.AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.ListDoctorCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"import seedu.address.storage.JsonDatabaseStorage;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"        JsonDatabaseStorage databaseStorage \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"                new JsonDatabaseStorage(temporaryFolder.resolve(\"database.json\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        StorageManager storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(model.getDatabase(), logic.getDatabase());","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(model.getDatabaseFilePath(), logic.getDatabaseFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(model.getGuiSettings(), logic.getGuiSettings());","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"        String deleteDoctorCommand \u003d \"delete_d 9999\";","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        assertCommandException(deleteDoctorCommand, MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"    public void execute_validDoctorCommand_success() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"        String listDoctorCommand \u003d ListDoctorCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"        assertNewCommandSuccess(listDoctorCommand, ListDoctorCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"    public void getFilteredAppointmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredAppointmentList().remove(0));","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"    public void getFilteredDoctorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredDoctorList().remove(0));","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPatientList().remove(0));","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"    public void getSelectedAppointment_getDoctorNric_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e logic.getSelectedAppointment().getDoctorNric());","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"yanghengtang"},"content":"    public void getSelectedDoctor_getNric_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e logic.getSelectedDoctor().getNric());","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":"    public void getSelectedPatient_getNric_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e logic.getSelectedPatient().getNric());","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"yanghengtang"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e logic.setGuiSettings(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"yanghengtang"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"yanghengtang"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"yanghengtang"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(guiSettings, logic.getGuiSettings());","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"    private void assertNewCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"yanghengtang"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"yanghengtang"},"content":"     * @see #assertNewCommandSuccess(String, String, Model)","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"        JsonDatabaseStorage databaseStorage \u003d new JsonDatabaseStorage(prefPath) {","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"            public void saveDatabase(ReadOnlyDatabase database, Path filePath)","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"yanghengtang"},"content":"        StorageManager storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-10-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"kimshitong"},"content":"        // Triggers the saveDatabase method by executing an add command","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"kimshitong"},"content":"        String addCommand \u003d AddDoctorCommand.COMMAND_WORD + NAME_DESC_AMY + NRIC_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"kimshitong"},"content":"        Doctor expectedDoctor \u003d new DoctorBuilder(AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-21"},{"lineNumber":215,"author":{"gitId":"kimshitong"},"content":"        expectedModel.addDoctor(expectedDoctor);","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":49,"-":142,"kimshitong":27}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ELLE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.HOON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":" * Contains integration tests (interaction with the Model) for the AddAppointmentCommand class.","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"public class AddAppointmentCommandIntegrationTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    private Model model;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    public void execute_newAppointment_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().withPatientNric(ALICE_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(ELLE_NRIC)","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-12 07:45\")","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-12 08:45\")","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"            expectedModel.addAppointment(validAppointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(new AddAppointmentCommand(validAppointment), model,","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"                String.format(AddAppointmentCommand.MESSAGE_SUCCESS, Messages.format(validAppointment)),","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"                expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"    public void execute_duplicateAppointment_throwsCommandException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        Appointment appointmentInList \u003d model.getDatabase().getAppointmentList().get(0);","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(new AddAppointmentCommand(appointmentInList), model,","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"                AddAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidPatient_throwsCommandException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentWithInvalidPatient \u003d new AppointmentBuilder().withPatientNric(HOON_NRIC).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(new AddAppointmentCommand(appointmentWithInvalidPatient), model,","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"                AddAppointmentCommand.MESSAGE_INVALID_PATIENT);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidDoctor_throwsCommandException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentWithInvalidDoctor \u003d new AppointmentBuilder().withDoctorNric(HOON_NRIC).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(new AddAppointmentCommand(appointmentWithInvalidDoctor), model,","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"                AddAppointmentCommand.MESSAGE_INVALID_DOCTOR);","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"    public void execute_overlappingPatientAppointments_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentWithInvalidStartAndEndDate \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(ALICE_NRIC)","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(ELLE_NRIC)","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 07:30\")","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 08:00\")","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(new AddAppointmentCommand(appointmentWithInvalidStartAndEndDate), model,","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"                Database.MESSAGE_OVERLAPPING_PATIENT_APPOINTMENTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"    public void execute_overlappingDoctorAppointments_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentWithInvalidStartAndEndDate \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(ALICE_NRIC)","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(ELLE_NRIC)","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 17:45\")","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 18:00\")","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(new AddAppointmentCommand(appointmentWithInvalidStartAndEndDate), model,","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"                Database.MESSAGE_OVERLAPPING_DOCTOR_APPOINTMENTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"yanghengtang":14,"mounilsankar":81,"derekjxtan":4}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_1;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.UniqueItemList;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"public class AddAppointmentCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    public void constructor_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    public void execute_appointmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        CommandResult commandResult \u003d new AddAppointmentCommand(validAppointment).execute(modelStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(String.format(AddAppointmentCommand.MESSAGE_SUCCESS, Messages.format(validAppointment)),","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(Arrays.asList(validAppointment), modelStub.appointmentsAdded);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointment1 \u003d new AppointmentBuilder().withPatientNric(\"T1234567N\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointment2 \u003d new AppointmentBuilder().withPatientNric(\"T2468123N\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        AddAppointmentCommand addAppointment1Command \u003d new AddAppointmentCommand(appointment1);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"        AddAppointmentCommand addAppointment2Command \u003d new AddAppointmentCommand(appointment2);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(addAppointment1Command.equals(addAppointment1Command));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        AddAppointmentCommand addAppointment1CommandCopy \u003d new AddAppointmentCommand(appointment1);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(addAppointment1Command.equals(addAppointment1CommandCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(addAppointment1Command.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(addAppointment1Command.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(addAppointment1Command.equals(addAppointment2Command));","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"        AddAppointmentCommand command \u003d new AddAppointmentCommand(APPOINTMENT_1);","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"        AddAppointmentCommand anotherCommand \u003d new AddAppointmentCommand(APPOINTMENT_1);","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(command.hashCode(), Objects.hash(APPOINTMENT_1));","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"        // command with same appointment object -\u003e return same hashcode","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(command.hashCode(), anotherCommand.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(APPOINTMENT_1);","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"        String expected \u003d AddAppointmentCommand.class.getCanonicalName() + \"{toAdd\u003d\" + APPOINTMENT_1 + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expected, addAppointmentCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"        public Path getDatabaseFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"        public void setDatabaseFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"        public void setDatabase(ReadOnlyDatabase newDatabase) {","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasDoctorWithNric(Nric nric) {","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasPatientWithNric(Nric nric) {","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"mounilsankar"},"content":"        public void deleteDoctor(Doctor target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"mounilsankar"},"content":"        public void deletePatient(Patient target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"mounilsankar"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"mounilsankar"},"content":"        public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"mounilsankar"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"mounilsankar"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"mounilsankar"},"content":"        public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":203,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":204,"author":{"gitId":"mounilsankar"},"content":"        public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":205,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"mounilsankar"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"mounilsankar"},"content":"        public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"mounilsankar"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":221,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"mounilsankar"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":225,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":226,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":229,"author":{"gitId":"mounilsankar"},"content":"        public void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":230,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"mounilsankar"},"content":"        public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":236,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":239,"author":{"gitId":"yanghengtang"},"content":"        public Appointment getSelectedAppointment() {","lastModifiedDate":"2023-10-22"},{"lineNumber":240,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":241,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":242,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":243,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":244,"author":{"gitId":"yanghengtang"},"content":"        public Doctor getSelectedDoctor() {","lastModifiedDate":"2023-10-22"},{"lineNumber":245,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":246,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":247,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":248,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":249,"author":{"gitId":"yanghengtang"},"content":"        public Patient getSelectedPatient() {","lastModifiedDate":"2023-10-22"},{"lineNumber":250,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"yanghengtang"},"content":"        public void updateSelectedAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":255,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":256,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":257,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":258,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":259,"author":{"gitId":"yanghengtang"},"content":"        public void updateSelectedDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":260,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":261,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":262,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":263,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":264,"author":{"gitId":"yanghengtang"},"content":"        public void updateSelectedPatient(Patient patient) {","lastModifiedDate":"2023-10-22"},{"lineNumber":265,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":266,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":267,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":268,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":270,"author":{"gitId":"mounilsankar"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-13"},{"lineNumber":271,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":272,"author":{"gitId":"mounilsankar"},"content":"    private class ModelStubWithAppointment extends ModelStub {","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"mounilsankar"},"content":"        private final Appointment appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":274,"author":{"gitId":"mounilsankar"},"content":"        private final Patient patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":275,"author":{"gitId":"mounilsankar"},"content":"        private final Doctor doctor;","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":277,"author":{"gitId":"mounilsankar"},"content":"        ModelStubWithAppointment(Appointment appointment, Patient patient, Doctor doctor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":278,"author":{"gitId":"mounilsankar"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2023-10-13"},{"lineNumber":279,"author":{"gitId":"mounilsankar"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":280,"author":{"gitId":"mounilsankar"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":281,"author":{"gitId":"mounilsankar"},"content":"            this.doctor \u003d doctor;","lastModifiedDate":"2023-10-16"},{"lineNumber":282,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":283,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":284,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":285,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":286,"author":{"gitId":"mounilsankar"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2023-10-13"},{"lineNumber":287,"author":{"gitId":"mounilsankar"},"content":"            return this.appointment.isSame(appointment);","lastModifiedDate":"2023-10-13"},{"lineNumber":288,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":289,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":290,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":291,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasDoctorWithNric(Nric nric) {","lastModifiedDate":"2023-10-16"},{"lineNumber":292,"author":{"gitId":"mounilsankar"},"content":"            return this.doctor.getNric().equals(nric);","lastModifiedDate":"2023-10-16"},{"lineNumber":293,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":294,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":295,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":296,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasPatientWithNric(Nric nric) {","lastModifiedDate":"2023-10-16"},{"lineNumber":297,"author":{"gitId":"mounilsankar"},"content":"            return this.patient.getNric().equals(nric);","lastModifiedDate":"2023-10-16"},{"lineNumber":298,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":299,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":300,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":301,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":302,"author":{"gitId":"mounilsankar"},"content":"     * A Model stub that always accept the appointment being added.","lastModifiedDate":"2023-10-16"},{"lineNumber":303,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":304,"author":{"gitId":"mounilsankar"},"content":"    private class ModelStubAcceptingAppointmentAdded extends ModelStub {","lastModifiedDate":"2023-10-13"},{"lineNumber":305,"author":{"gitId":"mounilsankar"},"content":"        final ArrayList\u003cAppointment\u003e appointmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":306,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":307,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":308,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":309,"author":{"gitId":"mounilsankar"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2023-10-13"},{"lineNumber":310,"author":{"gitId":"mounilsankar"},"content":"            return appointmentsAdded.stream().anyMatch(appointment::isSame);","lastModifiedDate":"2023-10-13"},{"lineNumber":311,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":312,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":313,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":314,"author":{"gitId":"mounilsankar"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":315,"author":{"gitId":"mounilsankar"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2023-10-13"},{"lineNumber":316,"author":{"gitId":"mounilsankar"},"content":"            appointmentsAdded.add(appointment);","lastModifiedDate":"2023-10-13"},{"lineNumber":317,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":318,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":319,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":320,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasDoctorWithNric(Nric nric) {","lastModifiedDate":"2023-10-16"},{"lineNumber":321,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":322,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":323,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":324,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":325,"author":{"gitId":"mounilsankar"},"content":"        public boolean hasPatientWithNric(Nric nric) {","lastModifiedDate":"2023-10-16"},{"lineNumber":326,"author":{"gitId":"mounilsankar"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":327,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":328,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":329,"author":{"gitId":"mounilsankar"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":330,"author":{"gitId":"mounilsankar"},"content":"            return new FilteredList\u003c\u003e(new UniqueItemList\u003cAppointment\u003e().asUnmodifiableObservableList());","lastModifiedDate":"2023-10-16"},{"lineNumber":331,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":332,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":333,"author":{"gitId":"mounilsankar"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":334,"author":{"gitId":"mounilsankar"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2023-10-13"},{"lineNumber":335,"author":{"gitId":"mounilsankar"},"content":"            return new Database();","lastModifiedDate":"2023-10-13"},{"lineNumber":336,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":337,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":338,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":45,"mounilsankar":292,"derekjxtan":1}},{"path":"src/test/java/seedu/address/logic/commands/AddDoctorCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.HOON_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.HOON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":" * Contains integration tests (interaction with the Model) for the AddDoctorCommand class.","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"public class AddDoctorCommandIntegrationTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    private Model model;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    public void execute_newDoctor_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().withNric(HOON_NRIC)","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"                .withName(HOON_NAME).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        expectedModel.addDoctor(validDoctor);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(new AddDoctorCommand(validDoctor), model,","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"                String.format(AddDoctorCommand.MESSAGE_SUCCESS, Messages.format(validDoctor)),","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"                expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    public void execute_duplicateDoctor_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        Doctor doctorInList \u003d model.getDatabase().getDoctorList().get(0);","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(new AddDoctorCommand(doctorInList), model,","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"                AddDoctorCommand.MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":10,"derekjxtan":38}},{"path":"src/test/java/seedu/address/logic/commands/AddDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDoctor.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"public class AddDoctorCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    public void constructor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDoctorCommand(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    public void execute_doctorAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        ModelStubAcceptingDoctorAdded newModelStub \u003d new ModelStubAcceptingDoctorAdded();","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        CommandResult commandResult \u003d new AddDoctorCommand(validDoctor).execute(newModelStub);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        assertEquals(String.format(AddDoctorCommand.MESSAGE_SUCCESS, Messages.format(validDoctor)),","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        assertEquals(Arrays.asList(validDoctor), newModelStub.doctorsAdded);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    public void execute_duplicateDoctor_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        AddDoctorCommand addDoctorCommand \u003d new AddDoctorCommand(validDoctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        ModelStub newModelStub \u003d new ModelStubWithDoctor(validDoctor);","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(AssertionError.class,","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"                ModelStub.MESSAGE, () -\u003e addDoctorCommand.execute(newModelStub));","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        Doctor alice \u003d new DoctorBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"        Doctor bob \u003d new DoctorBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        AddDoctorCommand addAliceCommand \u003d new AddDoctorCommand(alice);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        AddDoctorCommand addBobCommand \u003d new AddDoctorCommand(bob);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        AddDoctorCommand addAliceCommandCopy \u003d new AddDoctorCommand(alice);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        // different doctor -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"        AddDoctorCommand addDoctorCommand \u003d new AddDoctorCommand(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"        String expected \u003d AddDoctorCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        assertEquals(expected, addDoctorCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"        AddDoctorCommand command \u003d new AddDoctorCommand(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"        assertEquals(command.hashCode(), Objects.hash(ALICE));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        //objects are equal should have same hashcode","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"        AddDoctorCommand anotherCommand \u003d new AddDoctorCommand(ALICE);","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(command.hashCode(), anotherCommand.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"        static final String MESSAGE \u003d \"This method should not be called.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"        public Path getDatabaseFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"        public void setDatabaseFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"        public void setDatabase(ReadOnlyDatabase database) {","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"        public boolean hasDoctorWithNric(Nric nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"        public boolean hasPatientWithNric(Nric nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"        public void deleteDoctor(Doctor target) {","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"        public void deletePatient(Patient target) {","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"kimshitong"},"content":"        public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":204,"author":{"gitId":"kimshitong"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":209,"author":{"gitId":"kimshitong"},"content":"        public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":214,"author":{"gitId":"kimshitong"},"content":"        public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":216,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":218,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":219,"author":{"gitId":"kimshitong"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":224,"author":{"gitId":"kimshitong"},"content":"        public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":226,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":227,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":229,"author":{"gitId":"kimshitong"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":231,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":233,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"kimshitong"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":236,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":237,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":238,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":239,"author":{"gitId":"kimshitong"},"content":"        public void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":240,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":241,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":242,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":243,"author":{"gitId":"kimshitong"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":244,"author":{"gitId":"kimshitong"},"content":"        public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":245,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":246,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":247,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":248,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":249,"author":{"gitId":"yanghengtang"},"content":"        public Appointment getSelectedAppointment() {","lastModifiedDate":"2023-10-22"},{"lineNumber":250,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"yanghengtang"},"content":"        public Doctor getSelectedDoctor() {","lastModifiedDate":"2023-10-22"},{"lineNumber":255,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":256,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":257,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":258,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":259,"author":{"gitId":"yanghengtang"},"content":"        public Patient getSelectedPatient() {","lastModifiedDate":"2023-10-22"},{"lineNumber":260,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":261,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":262,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":263,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":264,"author":{"gitId":"yanghengtang"},"content":"        public void updateSelectedAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":265,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":266,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":267,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":268,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":269,"author":{"gitId":"yanghengtang"},"content":"        public void updateSelectedDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":270,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":271,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":272,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":273,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":274,"author":{"gitId":"yanghengtang"},"content":"        public void updateSelectedPatient(Patient patient) {","lastModifiedDate":"2023-10-22"},{"lineNumber":275,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":276,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":277,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":278,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":279,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":280,"author":{"gitId":"kimshitong"},"content":"     * A Model stub that contains a single doctor.","lastModifiedDate":"2023-10-12"},{"lineNumber":281,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":282,"author":{"gitId":"yanghengtang"},"content":"    private class ModelStubWithDoctor extends ModelStub {","lastModifiedDate":"2023-10-21"},{"lineNumber":283,"author":{"gitId":"kimshitong"},"content":"        private final Doctor doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":284,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":285,"author":{"gitId":"yanghengtang"},"content":"        ModelStubWithDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-21"},{"lineNumber":286,"author":{"gitId":"kimshitong"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":287,"author":{"gitId":"kimshitong"},"content":"            this.doctor \u003d doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":288,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":289,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":290,"author":{"gitId":"kimshitong"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":291,"author":{"gitId":"kimshitong"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":292,"author":{"gitId":"kimshitong"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":293,"author":{"gitId":"kimshitong"},"content":"            return this.doctor.isSame(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":294,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":295,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":296,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":297,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":298,"author":{"gitId":"kimshitong"},"content":"     * A Model stub that always accept the doctor being added.","lastModifiedDate":"2023-10-12"},{"lineNumber":299,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":300,"author":{"gitId":"yanghengtang"},"content":"    private class ModelStubAcceptingDoctorAdded extends ModelStub {","lastModifiedDate":"2023-10-21"},{"lineNumber":301,"author":{"gitId":"kimshitong"},"content":"        final ArrayList\u003cDoctor\u003e doctorsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":302,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":303,"author":{"gitId":"kimshitong"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":304,"author":{"gitId":"kimshitong"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":305,"author":{"gitId":"kimshitong"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":306,"author":{"gitId":"kimshitong"},"content":"            return doctorsAdded.stream().anyMatch(doctor::isSame);","lastModifiedDate":"2023-10-12"},{"lineNumber":307,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":308,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":309,"author":{"gitId":"kimshitong"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":310,"author":{"gitId":"kimshitong"},"content":"        public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":311,"author":{"gitId":"kimshitong"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":312,"author":{"gitId":"kimshitong"},"content":"            doctorsAdded.add(doctor);","lastModifiedDate":"2023-10-12"},{"lineNumber":313,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":314,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":315,"author":{"gitId":"kimshitong"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":316,"author":{"gitId":"kimshitong"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2023-10-12"},{"lineNumber":317,"author":{"gitId":"kimshitong"},"content":"            return new Database();","lastModifiedDate":"2023-10-12"},{"lineNumber":318,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":319,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":320,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":321,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":64,"derekjxtan":2,"kimshitong":255}},{"path":"src/test/java/seedu/address/logic/commands/AddMedicalConditionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TAG_1;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TAG_2;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.model.DataTest.DEPRESSION_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddMedicalConditionCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"public class AddMedicalConditionCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    private static final Tag CONDITION_STUB \u003d new Tag(\"example\");","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    public void execute_addConditionUnfilteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        Patient firstPatient \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"                model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"                new PatientBuilder(firstPatient)","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"                        .withTags(CONDITION_STUB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand addPatientTagCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"                new AddMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"                        CONDITION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"                String.format(AddMedicalConditionCommand.MESSAGE_ADD_CONDITION_SUCCESS, CONDITION_STUB.tagName);","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"            expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(addPatientTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d new PatientBuilder(model.getFilteredPatientList()","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"                .withTags(CONDITION_STUB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand addPatientTagCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"                new AddMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"                        CONDITION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(AddMedicalConditionCommand.MESSAGE_ADD_CONDITION_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"                CONDITION_STUB.tagName);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"            expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(addPatientTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand tagCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"                new AddMedicalConditionCommand(outOfBoundIndex, CONDITION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(tagCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidPatientIndexFilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getPatientList().size());","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand tagCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"                new AddMedicalConditionCommand(outOfBoundIndex, CONDITION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(tagCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"    public void execute_duplicateTag_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"        Patient firstPatient \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"                model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"        Patient editedAppointment \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"                new PatientBuilder(firstPatient)","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"                        .withTags(CONDITION_STUB).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand command \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"                new AddMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"cheeggered"},"content":"                        CONDITION_STUB);","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"cheeggered"},"content":"            command.execute(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand duplicateCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"cheeggered"},"content":"                new AddMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"cheeggered"},"content":"                        CONDITION_STUB);","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"cheeggered"},"content":"                String.format(AddMedicalConditionCommand.MESSAGE_ADD_CONDITION_FAILURE, CONDITION_STUB.tagName);","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(duplicateCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"cheeggered"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand firstCommand \u003d new AddMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"cheeggered"},"content":"                new Tag(VALID_PATIENT_TAG_1));","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"cheeggered"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand commandWithSameValues \u003d new AddMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"                new Tag(VALID_PATIENT_TAG_1));","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"        assertTrue(firstCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"cheeggered"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(new ListAppointmentCommand()));","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"cheeggered"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(new AddMedicalConditionCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"cheeggered"},"content":"                new Tag(VALID_PATIENT_TAG_1))));","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"cheeggered"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(new AddMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"cheeggered"},"content":"                new Tag(VALID_PATIENT_TAG_2))));","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"cheeggered"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"cheeggered"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"cheeggered"},"content":"                new AddMedicalConditionCommand(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"cheeggered"},"content":"                        DEPRESSION_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"cheeggered"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"cheeggered"},"content":"        assertEquals(command.hashCode(), Objects.hash(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"cheeggered"},"content":"                DEPRESSION_TAG));","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"cheeggered":175}},{"path":"src/test/java/seedu/address/logic/commands/AddPatientCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.HOON_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.HOON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.HOON_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":" * Contains integration tests (interaction with the Model) for the AddPatientCommand class","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"public class AddPatientCommandIntegrationTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    private Model model;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public void execute_newPatient_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        Patient validPatient \u003d new PatientBuilder().withNric(HOON_NRIC)","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"                .withName(HOON_NAME).withPhone(HOON_PHONE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"        expectedModel.addPatient(validPatient);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(new AddPatientCommand(validPatient), model,","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"                String.format(AddPatientCommand.MESSAGE_SUCCESS, Messages.format(validPatient)),","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"                expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        Patient patientInList \u003d model.getDatabase().getPatientList().get(0);","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(new AddPatientCommand(patientInList), model,","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"                AddPatientCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":10,"derekjxtan":39}},{"path":"src/test/java/seedu/address/logic/commands/AddPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"public class AddPatientCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        AddPatientCommand command \u003d new AddPatientCommand(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"        assertEquals(command.hashCode(), Objects.hash(ALICE));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPatientCommand(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        ModelStubAcceptingPatientAdded modelStub \u003d new ModelStubAcceptingPatientAdded();","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        CommandResult commandResult \u003d new AddPatientCommand(validPatient).execute(modelStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        assertEquals(String.format(AddPatientCommand.MESSAGE_SUCCESS, Messages.format(validPatient)),","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.patientsAdded);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"        AddPatientCommand addPatientCommand \u003d new AddPatientCommand(validPatient);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        ModelStub modelStub \u003d new ModelStubWithPatient(validPatient);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(AssertionError.class,","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"                ModelStub.MESSAGE, () -\u003e addPatientCommand.execute(modelStub));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        AddPatientCommand addAliceCommand \u003d new AddPatientCommand(alice);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        AddPatientCommand addBobCommand \u003d new AddPatientCommand(bob);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"        AddPatientCommand addAliceCommandCopy \u003d new AddPatientCommand(alice);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"        AddPatientCommand addPatientCommand \u003d new AddPatientCommand(ALICE);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"        String expected \u003d AddPatientCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"        assertEquals(expected, addPatientCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"        static final String MESSAGE \u003d \"This method should not be called.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"        public void deleteDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"        public boolean hasDoctorWithNric(Nric nric) {","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"        public boolean hasPatientWithNric(Nric nric) {","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"cheeggered"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"cheeggered"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"cheeggered"},"content":"        public Path getDatabaseFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"        public void setDatabaseFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"cheeggered"},"content":"        public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"cheeggered"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"cheeggered"},"content":"        public void setDatabase(ReadOnlyDatabase database) {","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"cheeggered"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"cheeggered"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"cheeggered"},"content":"        public void deletePatient(Patient target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"cheeggered"},"content":"        public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"cheeggered"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"cheeggered"},"content":"        public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":203,"author":{"gitId":"cheeggered"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":204,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":205,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"cheeggered"},"content":"        public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"cheeggered"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"cheeggered"},"content":"        public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":221,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"cheeggered"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":225,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":226,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"cheeggered"},"content":"        public void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":229,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":230,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":231,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":232,"author":{"gitId":"yanghengtang"},"content":"        public Appointment getSelectedAppointment() {","lastModifiedDate":"2023-10-22"},{"lineNumber":233,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":237,"author":{"gitId":"yanghengtang"},"content":"        public Doctor getSelectedDoctor() {","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":239,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":240,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":241,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":242,"author":{"gitId":"yanghengtang"},"content":"        public Patient getSelectedPatient() {","lastModifiedDate":"2023-10-22"},{"lineNumber":243,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":244,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":245,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":246,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":247,"author":{"gitId":"yanghengtang"},"content":"        public void updateSelectedAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":248,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":249,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":250,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"yanghengtang"},"content":"        public void updateSelectedDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":255,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":256,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":257,"author":{"gitId":"yanghengtang"},"content":"        public void updateSelectedPatient(Patient patient) {","lastModifiedDate":"2023-10-22"},{"lineNumber":258,"author":{"gitId":"yanghengtang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":259,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":260,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":261,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":262,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":263,"author":{"gitId":"cheeggered"},"content":"     * A Model stub that contains a single patient.","lastModifiedDate":"2023-10-13"},{"lineNumber":264,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":265,"author":{"gitId":"cheeggered"},"content":"    private class ModelStubWithPatient extends ModelStub {","lastModifiedDate":"2023-10-13"},{"lineNumber":266,"author":{"gitId":"cheeggered"},"content":"        private final Patient patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":267,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":268,"author":{"gitId":"cheeggered"},"content":"        ModelStubWithPatient(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"cheeggered"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":270,"author":{"gitId":"cheeggered"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":271,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":272,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":274,"author":{"gitId":"cheeggered"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":275,"author":{"gitId":"cheeggered"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":276,"author":{"gitId":"cheeggered"},"content":"            return this.patient.isSame(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":277,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":278,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":279,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":280,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":281,"author":{"gitId":"cheeggered"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2023-10-13"},{"lineNumber":282,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":283,"author":{"gitId":"cheeggered"},"content":"    private class ModelStubAcceptingPatientAdded extends ModelStub {","lastModifiedDate":"2023-10-13"},{"lineNumber":284,"author":{"gitId":"cheeggered"},"content":"        final ArrayList\u003cPatient\u003e patientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":285,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":286,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":287,"author":{"gitId":"cheeggered"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":288,"author":{"gitId":"cheeggered"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":289,"author":{"gitId":"cheeggered"},"content":"            return patientsAdded.stream().anyMatch(patient::isSame);","lastModifiedDate":"2023-10-13"},{"lineNumber":290,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":291,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":292,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":293,"author":{"gitId":"cheeggered"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":294,"author":{"gitId":"cheeggered"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":295,"author":{"gitId":"cheeggered"},"content":"            patientsAdded.add(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":296,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":297,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":298,"author":{"gitId":"cheeggered"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":299,"author":{"gitId":"cheeggered"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2023-10-13"},{"lineNumber":300,"author":{"gitId":"cheeggered"},"content":"            return new Database();","lastModifiedDate":"2023-10-13"},{"lineNumber":301,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":302,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":303,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":304,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":32,"derekjxtan":3,"cheeggered":269}},{"path":"src/test/java/seedu/address/logic/commands/AddPrescriptionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRESCRIPTION_1;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRESCRIPTION_2;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddPrescriptionCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"public class AddPrescriptionCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    private static final Tag PRESCRIPTION_STUB \u003d new Tag(\"SomePrescription\");","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    public void execute_addPrescriptionUnfilteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        Appointment firstAppointment \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"                model.getFilteredAppointmentList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentBuilder(firstAppointment)","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"                        .withTags(PRESCRIPTION_STUB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        AddPrescriptionCommand addPrescriptionCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"                new AddPrescriptionCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"                        PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"                String.format(AddPrescriptionCommand.MESSAGE_ADD_PRESCRIPTION_SUCCESS, editedAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"            expectedModel.setAppointment(firstAppointment, editedAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(addPrescriptionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        Appointment firstAppointment \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"                .withTags(PRESCRIPTION_STUB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        AddPrescriptionCommand addPrescriptionCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"                new AddPrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"                        PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(AddPrescriptionCommand.MESSAGE_ADD_PRESCRIPTION_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"                editedAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"            expectedModel.setAppointment(firstAppointment, editedAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(addPrescriptionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"        AddPrescriptionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"                new AddPrescriptionCommand(outOfBoundIndex, PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidIndexFilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getAppointmentList().size());","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"        AddPrescriptionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"                new AddPrescriptionCommand(outOfBoundIndex, PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"    public void execute_duplicateTag_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"        Appointment firstAppointment \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"                model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentBuilder(firstAppointment)","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"                        .withTags(PRESCRIPTION_STUB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"        AddPrescriptionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"                new AddPrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"                        PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"            command.execute(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"        AddPrescriptionCommand duplicateCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"                new AddPrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"                        PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"                String.format(AddPrescriptionCommand.MESSAGE_ADD_PRESCRIPTION_FAILURE, PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(duplicateCommand, model, expectedMessage);","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"        final AddPrescriptionCommand firstCommand \u003d new AddPrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"                new Tag(VALID_PRESCRIPTION_1));","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"        AddPrescriptionCommand commandWithSameValues \u003d new AddPrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"                new Tag(VALID_PRESCRIPTION_1));","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(new ListAppointmentCommand()));","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(new AddPrescriptionCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"                new Tag(VALID_PRESCRIPTION_1))));","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"        // different prescription -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(new AddPrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"mounilsankar"},"content":"                new Tag(VALID_PRESCRIPTION_2))));","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"mounilsankar"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"mounilsankar"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"mounilsankar"},"content":"        AddPrescriptionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"mounilsankar"},"content":"                new AddPrescriptionCommand(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"mounilsankar"},"content":"                        PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"mounilsankar"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(command.hashCode(), Objects.hash(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"mounilsankar"},"content":"                PRESCRIPTION_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"mounilsankar":180}},{"path":"src/test/java/seedu/address/logic/commands/AddSpecialisationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALISATION_1;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALISATION_2;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddSpecialisationCommand.","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"public class AddSpecialisationCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    private static final Tag SPECIALISATION_STUB \u003d new Tag(\"SomeSpecialisation\");","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    public void execute_addSpecialisationUnfilteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        Doctor firstDoctor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"                model.getFilteredDoctorList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"                new DoctorBuilder(firstDoctor)","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"                        .withTags(SPECIALISATION_STUB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand addSpecialisationCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"                new AddSpecialisationCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"                        SPECIALISATION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"                String.format(AddSpecialisationCommand.MESSAGE_ADD_SPECIALISATION_SUCCESS, editedDoctor);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"            expectedModel.setDoctor(firstDoctor, editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        System.out.println(expectedMessage);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        assertCommandSuccess(addSpecialisationCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        Doctor firstDoctor \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d new DoctorBuilder(model.getFilteredDoctorList()","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"                .withTags(SPECIALISATION_STUB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand addSpecialisationCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"                new AddSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"                        SPECIALISATION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(AddSpecialisationCommand.MESSAGE_ADD_SPECIALISATION_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"                editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"            expectedModel.setDoctor(firstDoctor, editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"        assertCommandSuccess(addSpecialisationCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDoctorList().size() + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"                new AddSpecialisationCommand(outOfBoundIndex, SPECIALISATION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidIndexFilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getDoctorList().size());","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"                new AddSpecialisationCommand(outOfBoundIndex, SPECIALISATION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"    public void execute_duplicateTag_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"        Doctor firstDoctor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"                model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"                new DoctorBuilder(firstDoctor)","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"                        .withTags(SPECIALISATION_STUB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"                new AddSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"                        SPECIALISATION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"            command.execute(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand duplicateCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"                new AddSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"                        SPECIALISATION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"                String.format(AddSpecialisationCommand.MESSAGE_ADD_SPECIALISATION_FAILURE, SPECIALISATION_STUB);","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(duplicateCommand, model, expectedMessage);","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"        final AddSpecialisationCommand firstCommand \u003d new AddSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"                new Tag(VALID_SPECIALISATION_1));","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand commandWithSameValues \u003d new AddSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"                new Tag(VALID_SPECIALISATION_1));","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"        assertTrue(firstCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(new ListDoctorCommand()));","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(new AddSpecialisationCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"                new Tag(VALID_SPECIALISATION_1))));","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(new AddSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"                new Tag(VALID_SPECIALISATION_2))));","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"                new AddSpecialisationCommand(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"                        SPECIALISATION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"        assertEquals(command.hashCode(), Objects.hash(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"                SPECIALISATION_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand addSpecialisationCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"kimshitong"},"content":"                new AddSpecialisationCommand(INDEX_FIRST_PERSON, SPECIALISATION_STUB);","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"kimshitong"},"content":"        String expected \u003d AddSpecialisationCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"kimshitong"},"content":"                + \"{index\u003d\" + INDEX_FIRST_PERSON","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"                + \", specialisation\u003d\" + SPECIALISATION_STUB + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"        assertEquals(expected, addSpecialisationCommand.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kimshitong":193}},{"path":"src/test/java/seedu/address/logic/commands/AppointmentRemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_1;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_2;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AppointmentRemarkCommand.","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentRemarkCommandTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        Appointment firstAppointment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"                model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentBuilder(firstAppointment)","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        AppointmentRemarkCommand appointmentRemarkCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"                        new Remark(editedAppointment.getRemark().remark));","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"                String.format(AppointmentRemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"                        INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"            expectedModel.setAppointment(firstAppointment, editedAppointment);","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(appointmentRemarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(REMARK_STUB,","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"                model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased())","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"                        .getRemark()","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"                        .remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        Appointment firstAppointment \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(firstAppointment).withRemark(\"\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        AppointmentRemarkCommand remarkCommand \u003d new AppointmentRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"                new Remark(editedAppointment.getRemark().toString()));","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(AppointmentRemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS,","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"                INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"            expectedModel.setAppointment(firstAppointment, editedAppointment);","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(\"\",","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"                model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased())","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"                        .getRemark()","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"                        .remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"        Appointment firstAppointment \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"        AppointmentRemarkCommand appointmentRemarkCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"                        new Remark(editedAppointment.getRemark().remark));","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(AppointmentRemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"                INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"            expectedModel.setAppointment(firstAppointment, editedAppointment);","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(appointmentRemarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(REMARK_STUB,","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"                model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased())","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"                        .getRemark()","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"                        .remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"        AppointmentRemarkCommand remarkCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentRemarkCommand(outOfBoundIndex, new Remark(REMARK_STUB));","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-29"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getAppointmentList().size());","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"        AppointmentRemarkCommand remarkCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentRemarkCommand(outOfBoundIndex, new Remark(REMARK_STUB));","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"        final AppointmentRemarkCommand firstCommand \u003d new AppointmentRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"                new Remark(VALID_REMARK_1));","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"        AppointmentRemarkCommand commandWithSameValues \u003d new AppointmentRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"                new Remark(VALID_REMARK_1));","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(new ListAppointmentCommand()));","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"mounilsankar"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(new AppointmentRemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"mounilsankar"},"content":"                new Remark(VALID_REMARK_1))));","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"mounilsankar"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(new AppointmentRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"mounilsankar"},"content":"                new Remark(VALID_REMARK_2))));","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"mounilsankar"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"mounilsankar"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"mounilsankar"},"content":"        AppointmentRemarkCommand command \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentRemarkCommand(targetIndex,","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"mounilsankar"},"content":"                        new Remark(\"\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"mounilsankar"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(command.hashCode(), Objects.hash(targetIndex,","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"mounilsankar"},"content":"                new Remark(\"\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"mounilsankar":185}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"                false, false, false, false)));","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"        // different showAppointment value -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"                true, false, false)));","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        // different showDoctor value -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"                false, true, false)));","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        // different showPatient value -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"                false, false, true)));","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"        // different showAppointment value -\u003e returns different hashcode","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"                true, false, false).hashCode());","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"        // different showAppointment value -\u003e returns different hashcode","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"                false, true, false).hashCode());","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"        // different showAppointment value -\u003e returns different hashcode","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"                false, false, true).hashCode());","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"                + commandResult.getFeedbackToUser()","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"                + \", showAppointment\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"                + \", showDoctor\u003d\" + commandResult.isShowAppointment()","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"                + \", showPatient\u003d\" + commandResult.isShowDoctor()","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"                + \", showHelp\u003d\" + commandResult.isShowPatient()","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"yanghengtang":38,"-":62}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.AppointmentEqualDoctorNricPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.NameContainsKeywordsDoctorPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.NameContainsKeywordsPatientPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.EditDoctorDescriptorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    public static final String VALID_NRIC_AMY \u003d \"T0123456A\";","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"    public static final String VALID_NRIC_BOB \u003d \"S9987654Z\";","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    public static final String VALID_PHONE_AMY \u003d \"81732200\";","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    public static final String VALID_PHONE_BOB \u003d \"91234567\";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    public static final String VALID_PATIENT_NRIC \u003d \"S9348573F\";","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"    public static final String VALID_DOCTOR_NRIC \u003d \"T0123456J\";","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    public static final String VALID_APPOINTMENT_START_TIME \u003d \"2023-12-01 07:30\";","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    public static final String VALID_APPOINTMENT_END_TIME \u003d \"2023-12-01 08:00\";","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    public static final String APPOINTMENT_START_TIME_DESC \u003d \" \"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"            + PREFIX_APPOINTMENT_START_TIME","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"            + VALID_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"    public static final String APPOINTMENT_END_TIME_DESC \u003d \" \"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"            + PREFIX_APPOINTMENT_END_TIME","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"            + VALID_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"    public static final String VALID_REMARK_1 \u003d \"Patient to follow up in 1 month\";","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"    public static final String VALID_REMARK_2 \u003d \"Patient recommended to undergo surgery\";","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"    public static final String VALID_SPECIALISATION_1 \u003d \"Orthopaedic\";","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"    public static final String VALID_SPECIALISATION_2 \u003d \"Dermatology\";","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"    public static final String VALID_REMARK_3 \u003d \"Doctor to be back by 30/12/2023\";","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"    public static final String VALID_REMARK_4 \u003d \"Doctor is not available from Thursday - Sunday\";","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"    public static final String VALID_PRESCRIPTION_1 \u003d \"CoughSyrup\";","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"    public static final String VALID_PRESCRIPTION_2 \u003d \"Panadol\";","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    public static final String VALID_PATIENT_TAG_1 \u003d \"diabetes\";","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"    public static final String VALID_PATIENT_TAG_2 \u003d \"cancer\";","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"    public static final String PATIENT_NRIC_DESC \u003d \" \" + PREFIX_PATIENT_NRIC + VALID_PATIENT_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"    public static final String DOCTOR_NRIC_DESC \u003d \" \" + PREFIX_DOCTOR_NRIC + VALID_DOCTOR_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC + \"T012#456A\"; // \u0027#\u0027 not allowed in nric","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"    public static final String INVALID_NRIC \u003d \"S9348573FF\"; // invalid number of digits","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"    public static final String INVALID_APPOINTMENT_START_TIME_DESC \u003d \" \"","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"            + PREFIX_APPOINTMENT_START_TIME","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"            + \"11-09-2023 07:30\"; // invalid format for date","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"    public static final String INVALID_APPOINTMENT_END_TIME_DESC \u003d \" \"","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"            + PREFIX_APPOINTMENT_END_TIME","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"            + \"11-09-2023 07:30\"; // invalid format for date","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"    public static final String INVALID_PATIENT_NRIC_DESC \u003d \" \" + PREFIX_PATIENT_NRIC + INVALID_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"    public static final String INVALID_DOCTOR_NRIC_DESC \u003d \" \" + PREFIX_DOCTOR_NRIC + INVALID_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"    public static final EditDoctorCommand.EditDoctorDescriptor DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"    public static final EditDoctorCommand.EditDoctorDescriptor DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"    public static final EditPatientCommand.EditPatientDescriptor PATIENT_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"    public static final EditPatientCommand.EditPatientDescriptor PATIENT_DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"    public static final EditAppointmentCommand.EditAppointmentDescriptor DESC_APPOINTMENT_1;","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"    public static final EditAppointmentCommand.EditAppointmentDescriptor DESC_APPOINTMENT_2;","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"        DESC_AMY \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"                .withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        DESC_BOB \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"                .withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"        PATIENT_DESC_AMY \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"                .withPhone(VALID_PHONE_AMY).withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"        PATIENT_DESC_BOB \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"                .withPhone(VALID_PHONE_BOB).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"        DESC_APPOINTMENT_1 \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(VALID_NRIC_AMY)","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(VALID_NRIC_BOB)","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME)","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(VALID_APPOINTMENT_END_TIME)","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"        DESC_APPOINTMENT_2 \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(VALID_NRIC_BOB)","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(VALID_NRIC_AMY)","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME)","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(VALID_APPOINTMENT_END_TIME)","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"     * - the returned {@link CommandResult} matches","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"     *  {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"yanghengtang"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel,","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"yanghengtang"},"content":"                                            CommandResult expectedCommandResult, Model expectedModel) {","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"yanghengtang"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"                                            boolean showAppointment,","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"                                            boolean showDoctor,","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"                                            boolean showPatient,","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"                new CommandResult(expectedMessage, showAppointment, showDoctor, showPatient);","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"yanghengtang"},"content":"     * - the address book, filtered doctor list and selected doctor in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"yanghengtang"},"content":"        Database expectedDatabase \u003d new Database(actualModel.getDatabase());","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"        List\u003cDoctor\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredDoctorList());","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(expectedDatabase, actualModel.getDatabase());","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredDoctorList());","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"yanghengtang"},"content":"     * Updates {@code model}\u0027s filtered list to show only the Appointment at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"yanghengtang"},"content":"     * {@code model}\u0027s database.","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"yanghengtang"},"content":"    public static void showAppointmentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"yanghengtang"},"content":"        Appointment appointment \u003d model.getFilteredAppointmentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"yanghengtang"},"content":"        final Nric doctorNric \u003d appointment.getDoctorNric();","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"        model.updateFilteredAppointmentList(new AppointmentEqualDoctorNricPredicate(doctorNric));","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(1, model.getFilteredAppointmentList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"     * Updates {@code model}\u0027s filtered list to show only the doctor at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"yanghengtang"},"content":"    public static void showDoctorAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredDoctorList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"        Doctor doctor \u003d model.getFilteredDoctorList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"kimshitong"},"content":"        final String[] splitName \u003d doctor.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"kimshitong"},"content":"        model.updateFilteredDoctorList(new NameContainsKeywordsDoctorPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"kimshitong"},"content":"        assertEquals(1, model.getFilteredDoctorList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":207,"author":{"gitId":"yanghengtang"},"content":"     * Updates {@code model}\u0027s filtered list to show only the Patient at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"yanghengtang"},"content":"     * {@code model}\u0027s database.","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"yanghengtang"},"content":"    public static void showPatientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-21"},{"lineNumber":211,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"yanghengtang"},"content":"        Patient patient \u003d model.getFilteredPatientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"yanghengtang"},"content":"        final String[] splitName \u003d patient.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"yanghengtang"},"content":"        model.updateFilteredPatientList(new NameContainsKeywordsPatientPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(1, model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":70,"mounilsankar":29,"-":80,"kimshitong":36,"cheeggered":4}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":" * {@code DeleteAppointmentCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"public class DeleteAppointmentCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    private Model model;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentToDelete \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"                Messages.format(appointmentToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        expectedModel.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        DeleteAppointmentCommand deletePatientCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(deletePatientCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentToDelete \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"                Messages.format(appointmentToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        expectedModel.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        showNoAppointment(expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getAppointmentList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(deleteAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"        DeleteAppointmentCommand deleteFirstAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"        DeleteAppointmentCommand deleteSecondAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(deleteFirstAppointmentCommand.equals(deleteFirstAppointmentCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"        DeleteAppointmentCommand deleteFirstAppointmentCommandCopy \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(deleteFirstAppointmentCommand.equals(deleteFirstAppointmentCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(deleteFirstAppointmentCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(deleteFirstAppointmentCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(deleteFirstAppointmentCommand.equals(deleteSecondAppointmentCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"yanghengtang"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"yanghengtang"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"        DeleteAppointmentCommand deleteCommand \u003d new DeleteAppointmentCommand(targetIndex);","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"yanghengtang"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(deleteCommand.hashCode(), Objects.hash(targetIndex));","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"        String expected \u003d DeleteAppointmentCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expected, deleteAppointmentCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"yanghengtang"},"content":"    private void showNoAppointment(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"        model.updateFilteredAppointmentList(p -\u003e false);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(model.getFilteredAppointmentList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":24,"mounilsankar":113}},{"path":"src/test/java/seedu/address/logic/commands/DeleteDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.TypicalDatabase;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":" * {@code DeleteDoctorCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"public class DeleteDoctorCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    private Model model;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        model \u003d new ModelManager(TypicalDatabase.getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        Doctor personToDelete \u003d model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand deleteCommand \u003d new DeleteDoctorCommand(INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(DeleteDoctorCommand.MESSAGE_DELETE_DOCTOR_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        ModelManager expectedNewModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"        expectedNewModel.deleteDoctor(personToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedNewModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDoctorList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand deleteCommand \u003d new DeleteDoctorCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        Doctor personToDelete \u003d model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand deleteCommand \u003d new DeleteDoctorCommand(INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(DeleteDoctorCommand.MESSAGE_DELETE_DOCTOR_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"        expectedModel.deleteDoctor(personToDelete);","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"        showNoDoctor(expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getDoctorList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand deleteCommand \u003d new DeleteDoctorCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand deleteFirstCommand \u003d new DeleteDoctorCommand(INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand deleteSecondCommand \u003d new DeleteDoctorCommand(INDEX_SECOND_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand deleteFirstCommandCopy \u003d new DeleteDoctorCommand(INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"yanghengtang"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand deleteCommand \u003d new DeleteDoctorCommand(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"        assertEquals(deleteCommand.hashCode(), Objects.hash(targetIndex));","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand deleteCommand \u003d new DeleteDoctorCommand(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"        String expected \u003d DeleteDoctorCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"yanghengtang"},"content":"    private void showNoDoctor(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"        model.updateFilteredDoctorList(p -\u003e false);","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"        assertTrue(model.getFilteredDoctorList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":13,"mounilsankar":8,"kimshitong":117}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMedicalConditionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TAG_1;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TAG_2;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.model.DataTest.DEPRESSION_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DeleteMedicalConditionCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"public class DeleteMedicalConditionCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    private static final Tag TAG_STUB \u003d new Tag(\"example\");","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    public void execute_deleteTagUnfilteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        Patient firstPatient \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"                model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"                new PatientBuilder(firstPatient)","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"                        .withTags(DEPRESSION_TAG).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        DeleteMedicalConditionCommand deletePatientTagCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"                new DeleteMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"                        DEPRESSION_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"                String.format(DeleteMedicalConditionCommand.MESSAGE_DELETE_CONDITION_SUCCESS, DEPRESSION_TAG.tagName);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"            expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(deletePatientTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d new PatientBuilder(model.getFilteredPatientList()","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"                .withTags(DEPRESSION_TAG).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        DeleteMedicalConditionCommand deletePatientTagCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"                new DeleteMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"                        DEPRESSION_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(DeleteMedicalConditionCommand.MESSAGE_DELETE_CONDITION_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"                DEPRESSION_TAG.tagName);","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"            expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(deletePatientTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"        DeleteMedicalConditionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"                new DeleteMedicalConditionCommand(outOfBoundIndex, DEPRESSION_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidIndexFilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getPatientList().size());","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"        DeleteMedicalConditionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"                new DeleteMedicalConditionCommand(outOfBoundIndex, DEPRESSION_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"     * Edit patient where condition is not already present","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"    public void execute_missingTag_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"        DeleteMedicalConditionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"                new DeleteMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"cheeggered"},"content":"                        TAG_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"cheeggered"},"content":"                String.format(DeleteMedicalConditionCommand.MESSAGE_DELETE_CONDITION_FAILURE, TAG_STUB.tagName);","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"cheeggered"},"content":"        DeleteMedicalConditionCommand firstCommand \u003d new DeleteMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"cheeggered"},"content":"                new Tag(VALID_PATIENT_TAG_1));","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"cheeggered"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"cheeggered"},"content":"        DeleteMedicalConditionCommand commandWithSameValues \u003d new DeleteMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"cheeggered"},"content":"                new Tag(VALID_PATIENT_TAG_1));","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"cheeggered"},"content":"        assertTrue(firstCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"cheeggered"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"cheeggered"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"cheeggered"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"cheeggered"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(new ListAppointmentCommand()));","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(new DeleteMedicalConditionCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"                new Tag(VALID_PATIENT_TAG_1))));","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(new DeleteMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"                new Tag(VALID_PATIENT_TAG_2))));","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"cheeggered"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"cheeggered"},"content":"        DeleteMedicalConditionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"cheeggered"},"content":"                new DeleteMedicalConditionCommand(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"cheeggered"},"content":"                        DEPRESSION_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"cheeggered"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"cheeggered"},"content":"        assertEquals(command.hashCode(), Objects.hash(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"cheeggered"},"content":"                DEPRESSION_TAG));","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"cheeggered":167}},{"path":"src/test/java/seedu/address/logic/commands/DeletePatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":" * {@code DeletePatientCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"public class DeletePatientCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    private Model model;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand command \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        assertEquals(command.hashCode(), Objects.hash(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(DeletePatientCommand.MESSAGE_DELETE_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"                Messages.format(patientToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        expectedModel.deletePatient(patientToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(deletePatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(deletePatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(DeletePatientCommand.MESSAGE_DELETE_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"                Messages.format(patientToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"        expectedModel.deletePatient(patientToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        showNoPatient(expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(deletePatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getPatientList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(deletePatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand deleteFirstPatientCommand \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand deleteSecondPatientCommand \u003d new DeletePatientCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"        assertTrue(deleteFirstPatientCommand.equals(deleteFirstPatientCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand deleteFirstPatientCommandCopy \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"        assertTrue(deleteFirstPatientCommand.equals(deleteFirstPatientCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"        assertFalse(deleteFirstPatientCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"        assertFalse(deleteFirstPatientCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"        assertFalse(deleteFirstPatientCommand.equals(deleteSecondPatientCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"cheeggered"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"        String expected \u003d DeletePatientCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"        assertEquals(expected, deletePatientCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"yanghengtang"},"content":"    private void showNoPatient(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"        model.updateFilteredPatientList(p -\u003e false);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"        assertTrue(model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":13,"mounilsankar":7,"cheeggered":113}},{"path":"src/test/java/seedu/address/logic/commands/DeletePrescriptionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.model.DataTest.PARACETAMOL_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.model.DataTest.PEDIATRICIAN_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DeletePrescriptionCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"public class DeletePrescriptionCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    private static final Tag PRESCRIPTION_STUB \u003d new Tag(\"SomePrescription\");","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    public void execute_addPrescriptionUnfilteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        Appointment firstAppointment \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"                model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentBuilder(firstAppointment)","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"                        .withTags(PEDIATRICIAN_TAG).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        DeletePrescriptionCommand deletePrescriptionCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"                new DeletePrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"                        PARACETAMOL_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"                String.format(DeletePrescriptionCommand.MESSAGE_DELETE_PRESCRIPTION_SUCCESS, editedAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"            expectedModel.setAppointment(firstAppointment, editedAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(deletePrescriptionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        Appointment firstAppointment \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"                .withTags(PEDIATRICIAN_TAG).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        DeletePrescriptionCommand deletePrescriptionCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"                new DeletePrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"                        PARACETAMOL_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(DeletePrescriptionCommand.MESSAGE_DELETE_PRESCRIPTION_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"                editedAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"            expectedModel.setAppointment(firstAppointment, editedAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(deletePrescriptionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"        DeletePrescriptionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"                new DeletePrescriptionCommand(outOfBoundIndex, PARACETAMOL_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidIndexFilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getAppointmentList().size());","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"        DeletePrescriptionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"                new DeletePrescriptionCommand(outOfBoundIndex, PARACETAMOL_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"     * Edit appointment where tag is not already present","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"    public void execute_missingTag_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"        DeletePrescriptionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"                new DeletePrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"                        PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"                String.format(DeletePrescriptionCommand.MESSAGE_DELETE_PRESCRIPTION_FAILURE, PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"        final DeletePrescriptionCommand firstCommand \u003d new DeletePrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"                PARACETAMOL_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"        DeletePrescriptionCommand commandWithSameValues \u003d new DeletePrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"                PARACETAMOL_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(new ListAppointmentCommand()));","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(new DeletePrescriptionCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"               PARACETAMOL_TAG)));","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"        // different prescription -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstCommand.equals(new DeletePrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"                PEDIATRICIAN_TAG)));","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"        DeletePrescriptionCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"                new DeletePrescriptionCommand(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"                        PRESCRIPTION_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(command.hashCode(), Objects.hash(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"                PRESCRIPTION_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"mounilsankar":165}},{"path":"src/test/java/seedu/address/logic/commands/DeleteSpecialisationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.model.DataTest.DERMATOLOGY_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.model.DataTest.DERMATOLOGY_TAG_STRING;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.model.DataTest.ORTHOPAEDIC_TAG_STRING;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DeleteSpecialisationCommand.","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"public class DeleteSpecialisationCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"    private static final Tag TAG_STUB \u003d new Tag(\"example\");","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    public void execute_deleteTagUnfilteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        Doctor firstDoctor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"                model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"                new DoctorBuilder(firstDoctor)","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"                        .withTags(DERMATOLOGY_TAG).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        DeleteSpecialisationCommand deleteSpecialisationCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"                new DeleteSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"                        DERMATOLOGY_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"                String.format(DeleteSpecialisationCommand.MESSAGE_DELETE_SPECIALISATION_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"                        DERMATOLOGY_TAG.tagName);","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"            expectedModel.setDoctor(firstDoctor, editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        assertCommandSuccess(deleteSpecialisationCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"        Doctor firstDoctor \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d new DoctorBuilder(model.getFilteredDoctorList()","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"                .withTags(DERMATOLOGY_TAG).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"        DeleteSpecialisationCommand deleteSpecialisationCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"                new DeleteSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"                        DERMATOLOGY_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(DeleteSpecialisationCommand.MESSAGE_DELETE_SPECIALISATION_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"                DERMATOLOGY_TAG.tagName);","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"            expectedModel.setDoctor(firstDoctor, editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"        assertCommandSuccess(deleteSpecialisationCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDoctorList().size() + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"        DeleteSpecialisationCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"                new DeleteSpecialisationCommand(outOfBoundIndex, DERMATOLOGY_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidIndexFilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getDoctorList().size());","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"        DeleteSpecialisationCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"                new DeleteSpecialisationCommand(outOfBoundIndex, DERMATOLOGY_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"     * Delete a missing specialisation from a doctor","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"    public void execute_missingTag_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"        DeleteSpecialisationCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"                new DeleteSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"                        TAG_STUB);","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"                String.format(DeleteSpecialisationCommand.MESSAGE_DELETE_SPECIALISATION_FAILURE,","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"                        TAG_STUB.tagName);","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"        DeleteSpecialisationCommand firstCommand \u003d new DeleteSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"                new Tag(DERMATOLOGY_TAG_STRING));","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"        DeleteSpecialisationCommand commandWithSameValues \u003d new DeleteSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"                new Tag(DERMATOLOGY_TAG_STRING));","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"        assertTrue(firstCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(new ListAppointmentCommand()));","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(new DeleteSpecialisationCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"                new Tag(DERMATOLOGY_TAG_STRING))));","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(new DeleteSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"                new Tag(ORTHOPAEDIC_TAG_STRING))));","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"        DeleteSpecialisationCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"                new DeleteSpecialisationCommand(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"                        DERMATOLOGY_TAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"        assertEquals(command.hashCode(), Objects.hash(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"                DERMATOLOGY_TAG));","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kimshitong":169}},{"path":"src/test/java/seedu/address/logic/commands/DoctorRemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_3;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_4;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_DOCTOR;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DoctorRemarkCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"public class DoctorRemarkCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        Doctor firstDoctor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"                model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"                new DoctorBuilder(firstDoctor)","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"                        .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        DoctorRemarkCommand doctorRemarkCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"                new DoctorRemarkCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"                        new Remark(editedDoctor.getRemark().remark));","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"                String.format(DoctorRemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"                        INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"            expectedModel.setDoctor(firstDoctor, editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"        assertCommandSuccess(doctorRemarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        assertEquals(REMARK_STUB,","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"                model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased())","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"                        .getRemark()","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"                        .remark);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        Doctor firstDoctor \u003d model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d new DoctorBuilder(firstDoctor).withRemark(\"\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"        DoctorRemarkCommand remarkCommand \u003d new DoctorRemarkCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"                new Remark(editedDoctor.getRemark().toString()));","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(DoctorRemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"                INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"            expectedModel.setDoctor(firstDoctor, editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"        assertEquals(\"\",","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"                model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased())","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"                        .getRemark()","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"                        .remark);","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"        Doctor firstDoctor \u003d model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d new DoctorBuilder(model.getFilteredDoctorList()","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"                .get(INDEX_FIRST_DOCTOR.getZeroBased()))","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"        DoctorRemarkCommand doctorRemarkCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"                new DoctorRemarkCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"                        new Remark(editedDoctor.getRemark().remark));","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(DoctorRemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"                INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"            expectedModel.setDoctor(firstDoctor, editedDoctor);","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"        assertCommandSuccess(doctorRemarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"        assertEquals(REMARK_STUB,","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"                model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased())","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"                        .getRemark()","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"                        .remark);","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidDoctorIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDoctorList().size() + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"        DoctorRemarkCommand remarkCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"                new DoctorRemarkCommand(outOfBoundIndex, new Remark(REMARK_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidDoctorIndexFilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_DOCTOR;","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getDoctorList().size());","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"        DoctorRemarkCommand remarkCommand \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"                new DoctorRemarkCommand(outOfBoundIndex, new Remark(REMARK_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"        final DoctorRemarkCommand firstCommand \u003d new DoctorRemarkCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"                new Remark(VALID_REMARK_3));","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"        DoctorRemarkCommand commandWithSameValues \u003d new DoctorRemarkCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"                new Remark(VALID_REMARK_3));","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"        assertTrue(firstCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(new ListDoctorCommand()));","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(new DoctorRemarkCommand(INDEX_SECOND_DOCTOR,","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"                new Remark(VALID_REMARK_3))));","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstCommand.equals(new DoctorRemarkCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"                new Remark(VALID_REMARK_4))));","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"        DoctorRemarkCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"                new DoctorRemarkCommand(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"                        new Remark(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"        assertEquals(command.hashCode(), Objects.hash(targetIndex,","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"kimshitong"},"content":"                new Remark(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"mounilsankar":4,"kimshitong":181}},{"path":"src/test/java/seedu/address/logic/commands/EditAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPOINTMENT_1;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPOINTMENT_2;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NRIC;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.PersonUtil.CARL_NRIC;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.PersonUtil.FIONA_NRIC;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditAppointmentCommand.","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"public class EditAppointmentCommandTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"    private Model model;","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder(editedAppointment).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"                Messages.format(editedAppointment));","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"            expectedModel.setAppointment(model.getFilteredAppointmentList().get(0), editedAppointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        Index indexLastAppointment \u003d Index.fromOneBased(model.getFilteredAppointmentList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"        Appointment lastAppointment \u003d model.getFilteredAppointmentList().get(indexLastAppointment.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        AppointmentBuilder appointmentInList \u003d new AppointmentBuilder(lastAppointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d appointmentInList","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(VALID_PATIENT_NRIC)","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(VALID_DOCTOR_NRIC)","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME)","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(VALID_APPOINTMENT_END_TIME)","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(VALID_PATIENT_NRIC)","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(VALID_DOCTOR_NRIC)","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME)","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(VALID_APPOINTMENT_END_TIME)","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(indexLastAppointment, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"                Messages.format(editedAppointment));","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"        expectedModel.setAppointment(lastAppointment, editedAppointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"                new EditAppointmentCommand(INDEX_FIRST_PERSON, new EditAppointmentDescriptor());","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"                Messages.format(editedAppointment));","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"    public void execute_filteredList_success() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentInFilteredList \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"                model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(appointmentInFilteredList)","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(VALID_PATIENT_NRIC)","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME)","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(VALID_APPOINTMENT_END_TIME)","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"                new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"                        .withPatientNric(VALID_PATIENT_NRIC)","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"                        .withStartTime(VALID_APPOINTMENT_START_TIME)","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"                        .withEndTime(VALID_APPOINTMENT_END_TIME)","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"                        .build());","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"                Messages.format(editedAppointment));","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"        expectedModel.setAppointment(model.getFilteredAppointmentList().get(0), editedAppointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"    public void execute_duplicateAppointmentUnfilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"        Appointment firstPerson \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(editAppointmentCommand, model, EditAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"    public void execute_duplicateAppointmentFilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"        // edit appointment in filtered list into a duplicate in database","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentInList \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"                model.getDatabase().getAppointmentList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"                new EditAppointmentDescriptorBuilder(appointmentInList).build());","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(editAppointmentCommand, model, EditAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidAppointmentIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(VALID_PATIENT_NRIC)","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(editAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"mounilsankar"},"content":"    public void execute_overlappingAppointmentsUnfilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"mounilsankar"},"content":"        // overlapping patient appointment","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"mounilsankar"},"content":"                new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"mounilsankar"},"content":"                        .withPatientNric(BENSON_NRIC)","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"mounilsankar"},"content":"                        .withDoctorNric(FIONA_NRIC)","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"mounilsankar"},"content":"                        .withStartTime(\"2023-09-12 07:15\")","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"mounilsankar"},"content":"                        .withEndTime(\"2023-09-12 07:45\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"mounilsankar"},"content":"                editAppointmentDescriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(editAppointmentCommand, model, Database.MESSAGE_OVERLAPPING_PATIENT_APPOINTMENTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"mounilsankar"},"content":"        // overlapping doctor appointment","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"mounilsankar"},"content":"        editAppointmentDescriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"mounilsankar"},"content":"                        .withPatientNric(FIONA_NRIC)","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"mounilsankar"},"content":"                        .withDoctorNric(CARL_NRIC)","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"mounilsankar"},"content":"                        .withStartTime(\"2023-09-12 07:15\")","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"mounilsankar"},"content":"                        .withEndTime(\"2023-09-12 07:45\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"mounilsankar"},"content":"        editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"mounilsankar"},"content":"                editAppointmentDescriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(editAppointmentCommand, model, Database.MESSAGE_OVERLAPPING_DOCTOR_APPOINTMENTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"mounilsankar"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"mounilsankar"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidAppointmentIndexFilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":209,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-21"},{"lineNumber":210,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":211,"author":{"gitId":"mounilsankar"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-21"},{"lineNumber":212,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getAppointmentList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":213,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":214,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-21"},{"lineNumber":215,"author":{"gitId":"mounilsankar"},"content":"                new EditAppointmentDescriptorBuilder().withPatientNric(VALID_PATIENT_NRIC).build());","lastModifiedDate":"2023-10-21"},{"lineNumber":216,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":217,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(editAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":218,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":219,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":220,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":221,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":222,"author":{"gitId":"mounilsankar"},"content":"        final EditAppointmentCommand standardCommand \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":223,"author":{"gitId":"mounilsankar"},"content":"                new EditAppointmentCommand(INDEX_FIRST_PERSON, DESC_APPOINTMENT_1);","lastModifiedDate":"2023-10-21"},{"lineNumber":224,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":225,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":226,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor copyDescriptor \u003d new EditAppointmentDescriptor(DESC_APPOINTMENT_1);","lastModifiedDate":"2023-10-21"},{"lineNumber":227,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand commandWithSameValues \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":228,"author":{"gitId":"mounilsankar"},"content":"                new EditAppointmentCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":229,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-21"},{"lineNumber":230,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":231,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":232,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-21"},{"lineNumber":233,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":234,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":235,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":236,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":237,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":238,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(standardCommand.equals(new ListAppointmentCommand()));","lastModifiedDate":"2023-10-21"},{"lineNumber":239,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":240,"author":{"gitId":"mounilsankar"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":241,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(standardCommand.equals(new EditAppointmentCommand(INDEX_SECOND_PERSON, DESC_APPOINTMENT_1)));","lastModifiedDate":"2023-10-21"},{"lineNumber":242,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":243,"author":{"gitId":"mounilsankar"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":244,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(standardCommand.equals(new EditAppointmentCommand(INDEX_FIRST_PERSON, DESC_APPOINTMENT_2)));","lastModifiedDate":"2023-10-21"},{"lineNumber":245,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":246,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":247,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":248,"author":{"gitId":"mounilsankar"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":249,"author":{"gitId":"mounilsankar"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-21"},{"lineNumber":250,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":251,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":252,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(editAppointmentCommand.hashCode(), Objects.hash(index, editAppointmentDescriptor));","lastModifiedDate":"2023-10-21"},{"lineNumber":253,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":254,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":255,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":256,"author":{"gitId":"mounilsankar"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":257,"author":{"gitId":"mounilsankar"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-21"},{"lineNumber":258,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":259,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":260,"author":{"gitId":"mounilsankar"},"content":"        String expected \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":261,"author":{"gitId":"mounilsankar"},"content":"                EditAppointmentCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editAppointmentDescriptor\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":262,"author":{"gitId":"mounilsankar"},"content":"                        + editAppointmentDescriptor + \"}\";","lastModifiedDate":"2023-10-21"},{"lineNumber":263,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expected, editAppointmentCommand.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":264,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":265,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"yanghengtang":15,"mounilsankar":250}},{"path":"src/test/java/seedu/address/logic/commands/EditAppointmentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPOINTMENT_1;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPOINTMENT_2;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"public class EditAppointmentDescriptorTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        Nric patientNric \u003d new Nric(VALID_NRIC_AMY);","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        Nric doctorNric \u003d new Nric(VALID_NRIC_BOB);","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"        AppointmentStartTime startTime \u003d new AppointmentStartTime(VALID_APPOINTMENT_START_TIME);","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEndTime endTime \u003d new AppointmentEndTime(VALID_APPOINTMENT_END_TIME);","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(VALID_NRIC_AMY)","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(VALID_NRIC_BOB)","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME)","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(VALID_APPOINTMENT_END_TIME)","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(descriptor.hashCode(), Objects.hash(patientNric, doctorNric, startTime, endTime));","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor descriptorWithSameValues \u003d new EditAppointmentDescriptor(DESC_APPOINTMENT_1);","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(DESC_APPOINTMENT_1.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(DESC_APPOINTMENT_1.equals(DESC_APPOINTMENT_1));","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(DESC_APPOINTMENT_1.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(DESC_APPOINTMENT_1.equals(5));","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(DESC_APPOINTMENT_1.equals(DESC_APPOINTMENT_2));","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        // different patientNric -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor editedAppointment1 \u003d new EditAppointmentDescriptorBuilder(DESC_APPOINTMENT_1)","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(VALID_PATIENT_NRIC)","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(DESC_APPOINTMENT_1.equals(editedAppointment1));","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        // different doctornric -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        editedAppointment1 \u003d new EditAppointmentDescriptorBuilder(DESC_APPOINTMENT_1)","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(VALID_DOCTOR_NRIC)","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(DESC_APPOINTMENT_1.equals(editedAppointment1));","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"        // different start date","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"        editedAppointment1 \u003d new EditAppointmentDescriptorBuilder(DESC_APPOINTMENT_1)","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-12-11 07:30\")","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(DESC_APPOINTMENT_1.equals(editedAppointment1));","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"        // different end date","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"        editedAppointment1 \u003d new EditAppointmentDescriptorBuilder(DESC_APPOINTMENT_1)","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-12-11 07:30\")","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(DESC_APPOINTMENT_1.equals(editedAppointment1));","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"        String expected \u003d EditAppointmentDescriptor.class.getCanonicalName() + \"{patientNric\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"                + editAppointmentDescriptor.getPatientNric().orElse(null) + \", doctorNric\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"                + editAppointmentDescriptor.getDoctorNric().orElse(null) + \", startTime\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"                + editAppointmentDescriptor.getAppointmentStartTime().orElse(null) + \", endTime\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"                + editAppointmentDescriptor.getAppointmentEndTime().orElse(null) + \"}\";","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expected, editAppointmentDescriptor.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"yanghengtang":8,"mounilsankar":88}},{"path":"src/test/java/seedu/address/logic/commands/EditDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.EditDoctorCommand.MESSAGE_EDIT_DOCTOR_SUCCESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.EditDoctorDescriptorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditDoctorCommand.","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"public class EditDoctorCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    private Model model;","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder(editedDoctor).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(INDEX_FIRST_DOCTOR, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_DOCTOR_SUCCESS, Messages.format(editedDoctor));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        expectedModel.setDoctor(model.getFilteredDoctorList().get(0), editedDoctor);","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        Index indexLastDoctor \u003d Index.fromOneBased(model.getFilteredDoctorList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"        Doctor lastDoctor \u003d model.getFilteredDoctorList().get(indexLastDoctor.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        DoctorBuilder doctorInList \u003d new DoctorBuilder(lastDoctor);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d doctorInList.withName(VALID_NAME_BOB).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"                .withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(indexLastDoctor, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_DOCTOR_SUCCESS, Messages.format(editedDoctor));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"        expectedModel.setDoctor(lastDoctor, editedDoctor);","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(INDEX_FIRST_DOCTOR, new EditDoctorDescriptor());","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_DOCTOR_SUCCESS, Messages.format(editedDoctor));","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"    public void execute_filteredList_success() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"        Doctor doctorInFilteredList \u003d model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        Doctor editedDoctor \u003d new DoctorBuilder(doctorInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"                new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_DOCTOR_SUCCESS, Messages.format(editedDoctor));","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"        expectedModel.setDoctor(model.getFilteredDoctorList().get(0), editedDoctor);","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"    public void execute_duplicateDoctorUnfilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"        Doctor firstDoctor \u003d model.getFilteredDoctorList().get(INDEX_FIRST_DOCTOR.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder(firstDoctor).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(INDEX_SECOND_DOCTOR, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(editCommand, model, EditDoctorCommand.MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"    public void execute_duplicateDoctorFilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"        // edit doctor in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"        Doctor doctorInList \u003d model.getDatabase().getDoctorList().get(INDEX_SECOND_DOCTOR.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"                new EditDoctorDescriptorBuilder(doctorInList).build());","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(editCommand, model, EditDoctorCommand.MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidDoctorIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDoctorList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidDoctorIndexFilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getDoctorList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"                new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"        final EditDoctorCommand standardCommand \u003d new EditDoctorCommand(INDEX_FIRST_DOCTOR, DESC_AMY);","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor copyDescriptor \u003d new EditDoctorDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand commandWithSameValues \u003d new EditDoctorCommand(INDEX_FIRST_DOCTOR, copyDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(standardCommand.equals(new ListDoctorCommand()));","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"        assertFalse(standardCommand.equals(new EditDoctorCommand(INDEX_SECOND_DOCTOR, DESC_AMY)));","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"        assertFalse(standardCommand.equals(new EditDoctorCommand(INDEX_FIRST_DOCTOR, DESC_BOB)));","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"yanghengtang"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"yanghengtang"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"yanghengtang"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"yanghengtang"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"yanghengtang"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(editCommand.hashCode(), Objects.hash(targetIndex, descriptor));","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor editDoctorDescriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(index, editDoctorDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"kimshitong"},"content":"        String expected \u003d EditDoctorCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editDoctorDescriptor\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"                + editDoctorDescriptor + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"kimshitong"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":34,"mounilsankar":7,"derekjxtan":4,"kimshitong":156}},{"path":"src/test/java/seedu/address/logic/commands/EditDoctorDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.EditDoctorDescriptorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"public class EditDoctorDescriptorTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor descriptorWithSameValues \u003d new EditDoctorDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor editedAmy \u003d new EditDoctorDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        editedAmy \u003d new EditDoctorDescriptorBuilder(DESC_AMY).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        Name name \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        Nric nric \u003d new Nric(VALID_NRIC_BOB);","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"                .withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(descriptor.hashCode(), Objects.hash(name, nric));","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor editDoctorDescriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"        String expected \u003d EditDoctorDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"                + editDoctorDescriptor.getName().orElse(null) + \", nric\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"                + editDoctorDescriptor.getNric().orElse(null) + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        assertEquals(expected, editDoctorDescriptor.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":20,"kimshitong":48}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PATIENT_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PATIENT_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPatientCommand.","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"public class EditPatientCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"    private Model model;","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"                Messages.format(editedPatient));","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        Index indexLastPatient \u003d Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"        Patient lastPatient \u003d model.getFilteredPatientList().get(indexLastPatient.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"        PatientBuilder patientInList \u003d new PatientBuilder(lastPatient);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d patientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"                .withNric(VALID_PATIENT_NRIC).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"                .withPhone(VALID_PHONE_BOB).withNric(VALID_PATIENT_NRIC).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(indexLastPatient, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"                Messages.format(editedPatient));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"        expectedModel.setPatient(lastPatient, editedPatient);","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON, new EditPatientDescriptor());","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"                Messages.format(editedPatient));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"    public void execute_filteredList_success() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d new PatientBuilder(patientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"                Messages.format(editedPatient));","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"    public void execute_duplicatePatientUnfilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"        Patient firstPerson \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(editPatientCommand, model, EditPatientCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"    public void execute_duplicatePatientFilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"        // edit patient in filtered list into a duplicate in database","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"        Patient patientInList \u003d model.getDatabase().getPatientList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"cheeggered"},"content":"                new EditPatientDescriptorBuilder(patientInList).build());","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(editPatientCommand, model, EditPatientCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(editPatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"cheeggered"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"cheeggered"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidPatientIndexFilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getPatientList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"cheeggered"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"yanghengtang"},"content":"        assertCommandFailure(editPatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"cheeggered"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"cheeggered"},"content":"        final EditPatientCommand standardCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON, PATIENT_DESC_AMY);","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"cheeggered"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor copyDescriptor \u003d new EditPatientDescriptor(PATIENT_DESC_AMY);","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand commandWithSameValues \u003d new EditPatientCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"cheeggered"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"cheeggered"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"cheeggered"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"cheeggered"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"cheeggered"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"cheeggered"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(standardCommand.equals(new ListPatientsCommand()));","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"cheeggered"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"cheeggered"},"content":"        assertFalse(standardCommand.equals(new EditPatientCommand(INDEX_SECOND_PERSON, PATIENT_DESC_AMY)));","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"cheeggered"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"cheeggered"},"content":"        assertFalse(standardCommand.equals(new EditPatientCommand(INDEX_FIRST_PERSON, PATIENT_DESC_BOB)));","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"cheeggered"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"cheeggered"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(index, editPatientDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"cheeggered"},"content":"        String expected \u003d EditPatientCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPatientDescriptor\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"cheeggered"},"content":"                + editPatientDescriptor + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"cheeggered"},"content":"        assertEquals(expected, editPatientCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":23,"mounilsankar":6,"derekjxtan":4,"cheeggered":161}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PATIENT_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PATIENT_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor descriptorWithSameValues \u003d new EditPatientDescriptor(PATIENT_DESC_AMY);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        assertTrue(PATIENT_DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        assertTrue(PATIENT_DESC_AMY.equals(PATIENT_DESC_AMY));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        assertFalse(PATIENT_DESC_AMY.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        assertFalse(PATIENT_DESC_AMY.equals(5));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"        assertFalse(PATIENT_DESC_AMY.equals(PATIENT_DESC_BOB));","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor editedAmy \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"                new EditPatientDescriptorBuilder(PATIENT_DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        assertFalse(PATIENT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(PATIENT_DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        assertFalse(PATIENT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(PATIENT_DESC_AMY).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        assertFalse(PATIENT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        String expected \u003d EditPatientDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"                + editPatientDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"                + editPatientDescriptor.getPhone().orElse(null) + \", nric\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"                + editPatientDescriptor.getNric().orElse(null) + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        assertEquals(expected, editPatientDescriptor.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":5,"cheeggered":55}},{"path":"src/test/java/seedu/address/logic/commands/FindDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_DOCTORS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDoctor.CARL;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDoctor.ELLE;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDoctor.FIONA;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.NameContainsKeywordsDoctorPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":" * Contains integration tests (interaction with the Model) for {@code FindDoctorCommand}.","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"public class FindDoctorCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    private Model model;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        expectedModel \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"                new NameContainsKeywordsDoctorPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"                new NameContainsKeywordsDoctorPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand findFirstCommand \u003d new FindDoctorCommand(firstPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand findSecondCommand \u003d new FindDoctorCommand(secondPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand findFirstCommandCopy \u003d new FindDoctorCommand(firstPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"        // different doctor -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"                new NameContainsKeywordsDoctorPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand findFirstCommand \u003d new FindDoctorCommand(firstPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"        assertEquals(findFirstCommand.hashCode(), Objects.hash(firstPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"        //objects are equal should have same hashcode","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand findSecondCommand \u003d new FindDoctorCommand(firstPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"        assertEquals(findFirstCommand.hashCode(), findSecondCommand.hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"    public void execute_zeroKeywords_noDoctorFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DOCTORS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand command \u003d new FindDoctorCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"        expectedModel.updateFilteredDoctorList(predicate);","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredDoctorList());","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"    public void execute_multipleKeywords_multipleDoctorsFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DOCTORS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand command \u003d new FindDoctorCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"        expectedModel.updateFilteredDoctorList(predicate);","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredDoctorList());","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"                new NameContainsKeywordsDoctorPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand findCommand \u003d new FindDoctorCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        String expected \u003d FindDoctorCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsDoctorPredicate}.","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"    private NameContainsKeywordsDoctorPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"        return new NameContainsKeywordsDoctorPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":8,"mounilsankar":9,"kimshitong":99}},{"path":"src/test/java/seedu/address/logic/commands/FindPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalPatient.CARL;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalPatient.ELLE;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalPatient.FIONA;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.NameContainsKeywordsPatientPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPatientCommand}.","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"public class FindPatientCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    private Model model;","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        expectedModel \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"                new NameContainsKeywordsPatientPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"                new NameContainsKeywordsPatientPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand findFirstPatientCommand \u003d new FindPatientCommand(firstPredicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand findSecondPatientCommand \u003d new FindPatientCommand(secondPredicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        assertTrue(findFirstPatientCommand.equals(findFirstPatientCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand findFirstPatientCommandCopy \u003d new FindPatientCommand(firstPredicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        assertTrue(findFirstPatientCommand.equals(findFirstPatientCommandCopy));","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"        assertFalse(findFirstPatientCommand.equals(1));","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        assertFalse(findFirstPatientCommand.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        // different patients -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"        assertFalse(findFirstPatientCommand.equals(findSecondPatientCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"    public void execute_zeroKeywords_noPatientFound() {","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand command \u003d new FindPatientCommand(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPatientList());","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"    public void execute_multipleKeywords_multiplePatientsFound() {","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand command \u003d new FindPatientCommand(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPatientList());","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate predicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"                new NameContainsKeywordsPatientPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand findPatientCommand \u003d new FindPatientCommand(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"        String expected \u003d FindPatientCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"        assertEquals(expected, findPatientCommand.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"                new NameContainsKeywordsPatientPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand findFirstCommand \u003d new FindPatientCommand(firstPredicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"        assertEquals(findFirstCommand.hashCode(), Objects.hash(firstPredicate));","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"        //objects are equal should have same hashcode","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand findSecondCommand \u003d new FindPatientCommand(firstPredicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"        assertEquals(findFirstCommand.hashCode(), findSecondCommand.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPatientPredicate}.","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"    private NameContainsKeywordsPatientPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"        return new NameContainsKeywordsPatientPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yanghengtang":4,"mounilsankar":9,"cheeggered":102}},{"path":"src/test/java/seedu/address/logic/commands/ListAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEqualDoctorNricPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEqualPatientNricPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentFilterByNricPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"public class ListAppointmentCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    private Model model;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(new ListAppointmentCommand(), model,","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"                ListAppointmentCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(new ListAppointmentCommand(),","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"                model,","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"                ListAppointmentCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"                expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"    public void execute_listIsFiltered_showsAppointmentsWithPatientNric() {","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"        Nric aliceNric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(aliceNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e doctorPredicate \u003d PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"        ListAppointmentCommand command \u003d new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(command,","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"                model,","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"                ListAppointmentCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"                expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    public void execute_listIsFiltered_showsAppointmentsWithDoctorNric() {","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"        Nric aliceNric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate doctorPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(aliceNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e patientPredicate \u003d PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"        ListAppointmentCommand command \u003d new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(command,","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"                model,","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"                ListAppointmentCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"                expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"    public void execute_listIsFiltered_showsAppointmentsWithDoctorAndPatientNric() {","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"        Nric aliceNric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"        Nric bensonNric \u003d new Nric(BENSON_NRIC);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(aliceNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate doctorPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(bensonNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"        ListAppointmentCommand command \u003d new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(command,","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"                model,","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"                ListAppointmentCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"                expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"        Nric aliceNric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"        Nric bensonNric \u003d new Nric(BENSON_NRIC);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(aliceNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate doctorPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(bensonNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"        ListAppointmentCommand command1 \u003d new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"        ListAppointmentCommand command2 \u003d new ListAppointmentCommand();","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(command1.equals(command1));","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"        ListAppointmentCommand command1Copy \u003d new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(command1.equals(command1Copy));","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(command1.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(command1.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(command1.equals(command2));","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"        Nric aliceNric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"        Nric bensonNric \u003d new Nric(BENSON_NRIC);","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(aliceNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate doctorPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(bensonNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"        ListAppointmentCommand command1 \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"                new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"        String expected \u003d ListAppointmentCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"                + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expected, command1.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"yanghengtang"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"yanghengtang"},"content":"        Nric aliceNric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"yanghengtang"},"content":"        Nric bensonNric \u003d new Nric(BENSON_NRIC);","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"yanghengtang"},"content":"        AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"yanghengtang"},"content":"                new AppointmentEqualPatientNricPredicate(aliceNric);","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"yanghengtang"},"content":"        AppointmentEqualDoctorNricPredicate doctorPredicate \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"yanghengtang"},"content":"                new AppointmentEqualDoctorNricPredicate(bensonNric);","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"yanghengtang"},"content":"        AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"yanghengtang"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"yanghengtang"},"content":"        ListAppointmentCommand command1 \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"yanghengtang"},"content":"                new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"        ListAppointmentCommand command2 \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"                new ListAppointmentCommand(predicate);","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"        // same value -\u003e returns both equal","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(command1.hashCode(), Objects.hash(predicate));","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"yanghengtang"},"content":"        // same predicate -\u003e returns both equal","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(command1.hashCode(), command2.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yanghengtang":37,"mounilsankar":137,"derekjxtan":2}},{"path":"src/test/java/seedu/address/logic/commands/ListDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListDoctorCommand.","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"public class ListDoctorCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    private Model model;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"        expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(new ListDoctorCommand(), model, ListDoctorCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_DOCTOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(new ListDoctorCommand(), model, ListDoctorCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":11,"kimshitong":27}},{"path":"src/test/java/seedu/address/logic/commands/ListPatientsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListPatientsCommand.","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"public class ListPatientsCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"        expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(new ListPatientsCommand(), model, ListPatientsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        assertCommandSuccess(new ListPatientsCommand(), model, ListPatientsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":6,"-":29,"cheeggered":3}},{"path":"src/test/java/seedu/address/logic/commands/PatientRemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_1;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_2;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":" * Contains integration tests (interaction with the Model) and unit tests for PatientRemarkCommand.","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"public class PatientRemarkCommandTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        Patient firstPatient \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"                model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"                new PatientBuilder(firstPatient)","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"                        .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        PatientRemarkCommand patientRemarkCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"                new PatientRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"                        new Remark(editedPatient.getRemark().remark));","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"                String.format(PatientRemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"                        INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"            expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(patientRemarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        assertEquals(REMARK_STUB,","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"                model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased())","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"                        .getRemark()","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"                        .remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d new PatientBuilder(firstPatient).withRemark(\"\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"        PatientRemarkCommand patientRemarkCommand \u003d new PatientRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"                new Remark(editedPatient.getRemark().toString()));","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(PatientRemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS,","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"                INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"            expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(patientRemarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"        assertEquals(\"\",","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"                model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased())","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"                        .getRemark()","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"                        .remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"        Patient editedPatient \u003d new PatientBuilder(model.getFilteredPatientList()","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"        PatientRemarkCommand appointmentRemarkCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"                new PatientRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"                        new Remark(editedPatient.getRemark().remark));","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(PatientRemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"                INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"            expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"cheeggered"},"content":"            throw new AssertionError(e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(appointmentRemarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"        assertEquals(REMARK_STUB,","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"                model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased())","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"                        .getRemark()","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"                        .remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"        PatientRemarkCommand remarkCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"                new PatientRemarkCommand(outOfBoundIndex, new Remark(REMARK_STUB));","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"cheeggered"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"cheeggered"},"content":"     * but smaller than size of database","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidPatientIndexFilteredList_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"cheeggered"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"cheeggered"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getPatientList().size());","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"        PatientRemarkCommand remarkCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"                new PatientRemarkCommand(outOfBoundIndex, new Remark(REMARK_STUB));","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"cheeggered"},"content":"    public void equals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"cheeggered"},"content":"        final PatientRemarkCommand firstCommand \u003d new PatientRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"cheeggered"},"content":"                new Remark(VALID_REMARK_1));","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"cheeggered"},"content":"        PatientRemarkCommand commandWithSameValues \u003d new PatientRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"cheeggered"},"content":"                new Remark(VALID_REMARK_1));","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"cheeggered"},"content":"        assertTrue(firstCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"cheeggered"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"cheeggered"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"cheeggered"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"cheeggered"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(new ListAppointmentCommand()));","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"cheeggered"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(new PatientRemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"cheeggered"},"content":"                new Remark(VALID_REMARK_1))));","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"cheeggered"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstCommand.equals(new PatientRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"cheeggered"},"content":"                new Remark(VALID_REMARK_2))));","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"cheeggered"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"cheeggered"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"cheeggered"},"content":"        PatientRemarkCommand command \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"cheeggered"},"content":"                new PatientRemarkCommand(targetIndex,","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"cheeggered"},"content":"                        new Remark(\"\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"cheeggered"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"cheeggered"},"content":"        assertEquals(command.hashCode(), Objects.hash(targetIndex,","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"cheeggered"},"content":"                new Remark(\"\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"mounilsankar":4,"cheeggered":182}},{"path":"src/test/java/seedu/address/logic/commands/ViewAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":" * {@code ViewAppointmentCommand}.","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"public class ViewAppointmentCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    private Model model;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentToView \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        ViewAppointmentCommand viewAppointmentCommand \u003d new ViewAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(ViewAppointmentCommand.MESSAGE_VIEW_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"                Messages.format(appointmentToView));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        expectedModel.updateSelectedAppointment(appointmentToView);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(viewAppointmentCommand, model, expectedMessage,","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"                true,","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"                false,","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"                false,","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"                expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        ViewAppointmentCommand viewAppointmentCommand \u003d new ViewAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(viewAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentToView \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"        ViewAppointmentCommand viewAppointmentCommand \u003d new ViewAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(ViewAppointmentCommand.MESSAGE_VIEW_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"                Messages.format(appointmentToView));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"        expectedModel.updateSelectedAppointment(appointmentToView);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"        assertCommandSuccess(viewAppointmentCommand, model, expectedMessage,","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"                true,","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"                false,","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"                false,","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"                expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getAppointmentList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"        ViewAppointmentCommand viewAppointmentCommand \u003d new ViewAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"        assertCommandFailure(viewAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"        ViewAppointmentCommand viewFirstAppointmentCommand \u003d new ViewAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"        ViewAppointmentCommand viewSecondAppointmentCommand \u003d new ViewAppointmentCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(viewFirstAppointmentCommand.equals(viewFirstAppointmentCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"        ViewAppointmentCommand viewFirstAppointmentCommandCopy \u003d new ViewAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(viewFirstAppointmentCommand.equals(viewFirstAppointmentCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(viewFirstAppointmentCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(viewFirstAppointmentCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(viewFirstAppointmentCommand.equals(viewSecondAppointmentCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"        ViewAppointmentCommand viewCommand \u003d new ViewAppointmentCommand(targetIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(viewCommand.hashCode(), Objects.hash(targetIndex));","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"        ViewAppointmentCommand viewAppointmentCommand \u003d new ViewAppointmentCommand(targetIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"        String expected \u003d ViewAppointmentCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expected, viewAppointmentCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"mounilsankar":132,"cheeggered":3}},{"path":"src/test/java/seedu/address/logic/commands/ViewDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":" * {@code ViewDoctorCommand}.","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"public class ViewDoctorCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    private Model model;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        Doctor doctorToView \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand viewDoctorCommand \u003d new ViewDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(ViewDoctorCommand.MESSAGE_VIEW_DOCTOR_SUCCESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"                Messages.format(doctorToView));","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        expectedModel.updateSelectedDoctor(doctorToView);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        assertCommandSuccess(viewDoctorCommand, model, expectedMessage,","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"                false,","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"                true,","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"                false,","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"                expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDoctorList().size() + 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand viewDoctorCommand \u003d new ViewDoctorCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(viewDoctorCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        Doctor doctorToView \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand viewDoctorCommand \u003d new ViewDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(ViewDoctorCommand.MESSAGE_VIEW_DOCTOR_SUCCESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"                Messages.format(doctorToView));","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"        expectedModel.updateSelectedDoctor(doctorToView);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"        assertCommandSuccess(viewDoctorCommand, model, expectedMessage,","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"                false,","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"                true,","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"                false,","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"                expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getDoctorList().size());","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand viewDoctorCommand \u003d new ViewDoctorCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        assertCommandFailure(viewDoctorCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand viewFirstDoctorCommand \u003d new ViewDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand viewSecondDoctorCommand \u003d new ViewDoctorCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"        assertTrue(viewFirstDoctorCommand.equals(viewFirstDoctorCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand viewFirstDoctorCommandCopy \u003d new ViewDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"        assertTrue(viewFirstDoctorCommand.equals(viewFirstDoctorCommandCopy));","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"        assertFalse(viewFirstDoctorCommand.equals(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"        assertFalse(viewFirstDoctorCommand.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"        assertFalse(viewFirstDoctorCommand.equals(viewSecondDoctorCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand viewCommand \u003d new ViewDoctorCommand(targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"        assertEquals(viewCommand.hashCode(), Objects.hash(targetIndex));","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand viewDoctorCommand \u003d new ViewDoctorCommand(targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"        String expected \u003d ViewDoctorCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"        assertEquals(expected, viewDoctorCommand.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"kimshitong":135}},{"path":"src/test/java/seedu/address/logic/commands/ViewPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":" * {@code ViewPatientCommandTest}.","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"public class ViewPatientCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    private Model model;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        Patient patientToView \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand viewPatientCommand \u003d new ViewPatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(ViewPatientCommand.MESSAGE_VIEW_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"                Messages.format(patientToView));","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        expectedModel.updateSelectedPatient(patientToView);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(viewPatientCommand, model, expectedMessage,","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"                false,","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"                false,","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"                true,","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"                expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand viewPatientCommand \u003d new ViewPatientCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(viewPatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"        Patient patientToView \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand viewPatientCommand \u003d new ViewPatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(ViewPatientCommand.MESSAGE_VIEW_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"                Messages.format(patientToView));","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"        expectedModel.updateSelectedPatient(patientToView);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        assertCommandSuccess(viewPatientCommand, model, expectedMessage,","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"                false,","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"                false,","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"                true,","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"                expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getPatientList().size());","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand viewPatientCommand \u003d new ViewPatientCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"        assertCommandFailure(viewPatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand viewFirstPatientCommand \u003d new ViewPatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand viewSecondPatientCommand \u003d new ViewPatientCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"        assertTrue(viewFirstPatientCommand.equals(viewFirstPatientCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand viewFirstPatientCommandCopy \u003d new ViewPatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"        assertTrue(viewFirstPatientCommand.equals(viewFirstPatientCommandCopy));","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        assertFalse(viewFirstPatientCommand.equals(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"        assertFalse(viewFirstPatientCommand.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"        assertFalse(viewFirstPatientCommand.equals(viewSecondPatientCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand viewPatientCommand \u003d new ViewPatientCommand(targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"        assertEquals(viewPatientCommand.hashCode(), Objects.hash(targetIndex));","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"cheeggered"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand viewPatientCommand \u003d new ViewPatientCommand(targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"        String expected \u003d ViewPatientCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"        assertEquals(expected, viewPatientCommand.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"cheeggered":135}},{"path":"src/test/java/seedu/address/logic/parser/AddAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPOINTMENT_END_TIME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPOINTMENT_START_TIME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOCTOR_NRIC_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_END_TIME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_START_TIME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOCTOR_NRIC_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PATIENT_NRIC_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PATIENT_NRIC_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_7;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"public class AddAppointmentCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    private AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        Appointment expectedAppointment \u003d new AppointmentBuilder(APPOINTMENT_7).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"                + PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"                + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"                + APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"                + APPOINTMENT_END_TIME_DESC , new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        String validExpectedAppointmentString \u003d PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"                + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"                + APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"                + APPOINTMENT_END_TIME_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        // multiple patient nric","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, PATIENT_NRIC_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PATIENT_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        // multiple doctor nric","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, DOCTOR_NRIC_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOCTOR_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        // multiple apointment start dates","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, APPOINTMENT_START_TIME_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_START_TIME));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        // multiple appointment end dates","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, APPOINTMENT_END_TIME_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_END_TIME));","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"                validExpectedAppointmentString + PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"                        + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_END_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"                        + validExpectedAppointmentString,","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PATIENT_NRIC, PREFIX_DOCTOR_NRIC,","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"                        PREFIX_APPOINTMENT_START_TIME, PREFIX_APPOINTMENT_END_TIME));","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"        // invalid patient Nric","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, INVALID_PATIENT_NRIC_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PATIENT_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"        // invalid email","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, INVALID_DOCTOR_NRIC_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOCTOR_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"        // invalid phone","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, INVALID_APPOINTMENT_START_TIME_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_START_TIME));","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"        // invalid address","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, INVALID_APPOINTMENT_END_TIME_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_END_TIME));","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"        // invalid patient Nric","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, validExpectedAppointmentString + INVALID_PATIENT_NRIC_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PATIENT_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"        // invalid doctor Nric","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, validExpectedAppointmentString + INVALID_DOCTOR_NRIC_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOCTOR_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"        // invalid Appointment start date","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, validExpectedAppointmentString + INVALID_APPOINTMENT_START_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_START_TIME));","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"        // invalid Appointment end date","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, validExpectedAppointmentString + INVALID_APPOINTMENT_END_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_END_TIME));","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"        // missing patient nric prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, VALID_PATIENT_NRIC","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"                        + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_END_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"        // missing doctor nric prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"                        + VALID_DOCTOR_NRIC","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_END_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"        // missing appointment start time prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"                        + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"                        + VALID_APPOINTMENT_START_TIME","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_END_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"        // missing appointment end time prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"                        + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"                        + VALID_APPOINTMENT_END_TIME,","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, VALID_PATIENT_NRIC","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"                        + VALID_DOCTOR_NRIC","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"                        + VALID_APPOINTMENT_START_TIME","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"                        + VALID_APPOINTMENT_END_TIME,","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"        // invalid patient nric","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, INVALID_PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"                        + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_END_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"mounilsankar"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"mounilsankar"},"content":"        // invalid doctor nric","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"mounilsankar"},"content":"                        + INVALID_DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_END_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"mounilsankar"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"mounilsankar"},"content":"        // invalid appointment start time","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"mounilsankar"},"content":"                        + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"mounilsankar"},"content":"                        + INVALID_APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_END_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"mounilsankar"},"content":"                AppointmentStartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"mounilsankar"},"content":"        // invalid appoinrment end time","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"mounilsankar"},"content":"                        + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"mounilsankar"},"content":"                        + INVALID_APPOINTMENT_END_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"mounilsankar"},"content":"                AppointmentEndTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"mounilsankar"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, INVALID_PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"mounilsankar"},"content":"                        + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"mounilsankar"},"content":"                        + INVALID_APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_END_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"mounilsankar"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"mounilsankar"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"mounilsankar"},"content":"                        + PATIENT_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"mounilsankar"},"content":"                        + DOCTOR_NRIC_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_START_TIME_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"mounilsankar"},"content":"                        + APPOINTMENT_END_TIME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"mounilsankar"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":16,"mounilsankar":185}},{"path":"src/test/java/seedu/address/logic/parser/AddDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDoctor.AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalDoctor.BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"public class AddDoctorCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"    private AddDoctorCommandParser parser \u003d new AddDoctorCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        Doctor expectedDoctor \u003d new DoctorBuilder(BOB).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"                + NAME_DESC_BOB + NRIC_DESC_BOB, new AddDoctorCommand(expectedDoctor));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        Doctor expectedDoctorMultipleTags \u003d new DoctorBuilder(BOB).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"                NAME_DESC_BOB + NRIC_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"                new AddDoctorCommand(expectedDoctorMultipleTags));","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + NRIC_DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        // multiple names","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        // multiple emails","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"                validExpectedPersonString + NRIC_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"        // invalid name","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"        // invalid nric","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"        // invalid name","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        // invalid nric","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NRIC_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"        // zero tags","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"        Doctor expectedDoctor \u003d new DoctorBuilder(AMY).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NRIC_DESC_AMY,","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"                new AddDoctorCommand(expectedDoctor));","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + NRIC_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"        // missing nric prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_NRIC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_NRIC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"        // invalid name","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + NRIC_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"        // invalid nric","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_NRIC_DESC, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_NRIC_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + NRIC_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":12,"mounilsankar":5,"kimshitong":113}},{"path":"src/test/java/seedu/address/logic/parser/AddMedicalConditionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TAG_1;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddMedicalConditionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"public class AddMedicalConditionCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    private AddMedicalConditionCommandParser parser \u003d new AddMedicalConditionCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    public void parse_validArgs_returnsPatientRemarkCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, \"1 t\\\\diabetes\",","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"                new AddMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"                        new Tag(VALID_PATIENT_TAG_1)));","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    public void parse_noRemark_returnsPatientRemarkCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"                        AddMedicalConditionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"a t\\\\diabetes\",","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"                        AddMedicalConditionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"cheeggered":36}},{"path":"src/test/java/seedu/address/logic/parser/AddPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalPatient.AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalPatient.BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"public class AddPatientCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    private AddPatientCommandParser parser \u003d new AddPatientCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        AddPatientCommand command \u003d new AddPatientCommand(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        assertEquals(command.hashCode(), Objects.hash(ALICE));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + NRIC_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"                new AddPatientCommand(expectedPatient));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        Patient expectedPatientMultipleTags \u003d new PatientBuilder(BOB).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + NRIC_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"                new AddPatientCommand(expectedPatientMultipleTags));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        String validExpectedPatientString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + NRIC_DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"        // multiple names","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        // multiple phones","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"        // multiple nric","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"                validExpectedPatientString + PHONE_DESC_AMY + NAME_DESC_AMY + NRIC_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"                        + validExpectedPatientString,","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_NRIC, PREFIX_PHONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        // invalid name","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPatientString,","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"        // invalid nric","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedPatientString,","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"        // invalid phone","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPatientString,","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"        // invalid name","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, validExpectedPatientString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"        // invalid nric","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, validExpectedPatientString + INVALID_NRIC_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        // invalid phone","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, validExpectedPatientString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"        // zero tags","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"cheeggered"},"content":"        Patient expectedPerson \u003d new PatientBuilder(AMY).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + NRIC_DESC_AMY,","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"                new AddPatientCommand(expectedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + NRIC_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"        // missing phone prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + NRIC_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"        // missing email prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_NRIC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"cheeggered"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"cheeggered"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_NRIC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"cheeggered"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"cheeggered"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"cheeggered"},"content":"        // invalid name","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + NRIC_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"        // invalid phone","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + NRIC_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"        // invalid nric","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_NRIC_DESC, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"cheeggered"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_PHONE_DESC + NRIC_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"cheeggered"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"cheeggered"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + NRIC_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"cheeggered"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":16,"cheeggered":148}},{"path":"src/test/java/seedu/address/logic/parser/AddPrescriptionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRESCRIPTION_1;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"public class AddPrescriptionCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    private AddPrescriptionCommandParser parser \u003d new AddPrescriptionCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    public void parse_validArgs_returnsAddPrescriptionCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, \"1 t\\\\CoughSyrup\",","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"                new AddPrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"                        new Tag(VALID_PRESCRIPTION_1)));","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    public void parse_noPrescription_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"                        AddPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"a t\\\\CoughSyrup\",","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"                        AddPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"mounilsankar":36}},{"path":"src/test/java/seedu/address/logic/parser/AddSpecialisationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALISATION_1;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.AddSpecialisationCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"public class AddSpecialisationCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    private AddSpecialisationCommandParser parser \u003d new AddSpecialisationCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    public void parse_validArgs_returnsAddDoctorSpecialisationCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, \"1 t\\\\\" + VALID_SPECIALISATION_1,","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"                new AddSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"                        new Tag(VALID_SPECIALISATION_1)));","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    public void parse_noPrescription_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"                        AddSpecialisationCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"a t\\\\\" + VALID_SPECIALISATION_1,","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"                        AddSpecialisationCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kimshitong":36}},{"path":"src/test/java/seedu/address/logic/parser/AppointmentRemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_1;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.AppointmentRemarkCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentRemarkCommandParserTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    private AppointmentRemarkCommandParser parser \u003d new AppointmentRemarkCommandParser();","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    public void parse_validArgs_returnsAppointmentRemarkCommand() {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, \"1 r\\\\Patient to follow up in 1 month\",","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"                        new Remark(VALID_REMARK_1)));","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    public void parse_noRemark_returnsAppointmentRemarkCommand() {","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, \"1\",","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"                        new Remark(\"\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"a r\\\\Patient to follow up in 1 month\",","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"                        AppointmentRemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"mounilsankar":36}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"        } catch (ParseException | CommandException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", e);","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser,","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"                                          String userInput, String expectedMessage) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        } catch (ParseException | CommandException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"            assertEquals(expectedMessage, e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":1,"mounilsankar":7,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":" * outside of the DeleteAppointmentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":" * same path through the DeleteAppointmentCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"public class DeleteAppointmentCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    private DeleteAppointmentCommandParser parser \u003d new DeleteAppointmentCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, \"1\", new DeleteAppointmentCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":2,"mounilsankar":31}},{"path":"src/test/java/seedu/address/logic/parser/DeleteDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"public class DeleteDoctorCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    private DeleteDoctorCommandParser parser \u003d new DeleteDoctorCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, \"1\", new DeleteDoctorCommand(INDEX_FIRST_DOCTOR));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"                DeleteDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"-":26,"kimshitong":7}},{"path":"src/test/java/seedu/address/logic/parser/DeleteMedicalConditionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TAG_1;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.DeleteMedicalConditionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"public class DeleteMedicalConditionCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    private DeleteMedicalConditionCommandParser parser \u003d new DeleteMedicalConditionCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, \"1 t\\\\diabetes\",","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"                new DeleteMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"                        new Tag(VALID_PATIENT_TAG_1)));","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public void parse_noPrescription_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"                        DeleteMedicalConditionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"a t\\\\diabetes\",","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"                        DeleteMedicalConditionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"cheeggered":37}},{"path":"src/test/java/seedu/address/logic/parser/DeletePatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":" * outside of the DeletePatientCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":" * same path through the DeletePatientCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"public class DeletePatientCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    private DeletePatientCommandParser parser \u003d new DeletePatientCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand command \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        // same value -\u003e returns same hashcode","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        assertEquals(command.hashCode(), Objects.hash(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, \"1\", new DeletePatientCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"                DeletePatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":2,"cheeggered":40}},{"path":"src/test/java/seedu/address/logic/parser/DeletePrescriptionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRESCRIPTION_1;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.DeletePrescriptionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"public class DeletePrescriptionCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    private DeletePrescriptionCommandParser parser \u003d new DeletePrescriptionCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    public void parse_validArgs_returnsAddPrescriptionCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, \"1 t\\\\CoughSyrup\",","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"                new DeletePrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"                        new Tag(VALID_PRESCRIPTION_1)));","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    public void parse_noPrescription_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"                        DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"a t\\\\CoughSyrup\",","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"                        DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"mounilsankar":36}},{"path":"src/test/java/seedu/address/logic/parser/DeleteSpecialisationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.model.DataTest.DERMATOLOGY_TAG_STRING;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DeleteSpecialisationCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"public class DeleteSpecialisationCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    private DeleteSpecialisationCommandParser parser \u003d new DeleteSpecialisationCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, \"1 t\\\\Dermatology\",","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"                new DeleteSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"                        new Tag(DERMATOLOGY_TAG_STRING)));","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    public void parse_noPrescription_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"                        DeleteSpecialisationCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"a t\\\\Dermatology\",","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"                        DeleteSpecialisationCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kimshitong":37}},{"path":"src/test/java/seedu/address/logic/parser/DoctorRemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_3;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DoctorRemarkCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"public class DoctorRemarkCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    private DoctorRemarkCommandParser parser \u003d new DoctorRemarkCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    public void parse_validArgs_returnsDoctorRemarkCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, \"1 r\\\\Doctor to be back by 30/12/2023\",","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"                new DoctorRemarkCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"                        new Remark(VALID_REMARK_3)));","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    public void parse_noRemark_returnsDoctorRemarkCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, \"1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"                new DoctorRemarkCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"                        new Remark(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"a r\\\\Doctor to be back by 30/12/2023\",","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"                        DoctorRemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kimshitong":36}},{"path":"src/test/java/seedu/address/logic/parser/EditAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"public class EditAppointmentCommandParserTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    private EditAppointmentCommandParser parser \u003d new EditAppointmentCommandParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        // no index specified","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"pic\\\\ T0123456J\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        // no field specified","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"1\", EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"        // negative index","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"-5\" + \"pic\\\\ T0123456J\" , MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        // zero index","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"0\" + \"pic\\\\ T0123456J\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"1\" + \" pic\\\\T012#456J\", Nric.MESSAGE_CONSTRAINTS); // invalid patient nric","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"1\" + \" dic\\\\T012#456J\", Nric.MESSAGE_CONSTRAINTS); // invalid doctor nric","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"1\" + \" from\\\\14-01-2022 07:30\",","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"                AppointmentStartTime.MESSAGE_CONSTRAINTS); // invalid start date","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"                \"1\" + \" to\\\\14-01-2022 07:30\", AppointmentEndTime.MESSAGE_CONSTRAINTS); // invalid end date","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"        // invalid doctor nric followed by valid start time","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"1\" + \" dic\\\\T012#456J\" + \"from\\\\2023-09-11 07:30\", Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"1\" + \" dic\\\\T012#456J\" + \"from\\\\14-01-2022 07:30\",","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" pic\\\\T0232356N dic\\\\T0123456J \"","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"                + \"from\\\\2023-09-11 07:30 to\\\\2023-09-11 08:30\";","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(\"T0232356N\")","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(\"T0123456J\")","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 07:30\")","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 08:30\")","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"                + \" from\\\\2023-09-11 07:30 to\\\\2023-09-11 08:30\";","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 07:30\")","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 08:30\")","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"        // patient nric","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" pic\\\\T0232356N\";","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(\"T0232356N\").build();","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"        // doctor nric","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"        targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"        userInput \u003d targetIndex.getOneBased() + \" dic\\\\T0232356N\";","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"        descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(\"T0232356N\").build();","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"        expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"        // start time","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"        targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"        userInput \u003d targetIndex.getOneBased() + \" from\\\\2023-09-11 07:30\";","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"        descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 07:30\").build();","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"        expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"        // end time","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"        targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"        userInput \u003d targetIndex.getOneBased() + \" to\\\\2023-09-11 08:30\";","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"        descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 08:30\").build();","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"        expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" pic\\\\T0232356N\" + \" pic\\\\T023#356N\";","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PATIENT_NRIC));","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"        userInput \u003d targetIndex.getOneBased() + \" pic\\\\T023#356N\" + \" pic\\\\T0232356N\";","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PATIENT_NRIC));","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"        userInput \u003d targetIndex.getOneBased() + \" pic\\\\T0232356N\" + \" pic\\\\T0242356N\"","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"                + \" dic\\\\T0232356N\" + \" dic\\\\T0242356N\";","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PATIENT_NRIC, PREFIX_DOCTOR_NRIC));","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"        userInput \u003d targetIndex.getOneBased() + \" pic\\\\T0#32356N\" + \" pic\\\\T02#2356N\"","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"                + \" dic\\\\T0232#56N\" + \" dic\\\\T024#356N\";","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PATIENT_NRIC, PREFIX_DOCTOR_NRIC));","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"yanghengtang":2,"mounilsankar":165}},{"path":"src/test/java/seedu/address/logic/parser/EditDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.EditDoctorCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.EditDoctorDescriptorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"public class EditDoctorCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditDoctorCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    private EditDoctorCommandParser parser \u003d new EditDoctorCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        // no index specified","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        // no field specified","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"1\", EditDoctorCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        // negative index","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        // zero index","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NRIC_DESC, Nric.MESSAGE_CONSTRAINTS); // invalid nric","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        // invalid nric followed by valid index","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NRIC_DESC , Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_NRIC_DESC , Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d INDEX_SECOND_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"        String userInput \u003d targetIndex.getOneBased() + NRIC_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        String userInput \u003d targetIndex.getOneBased() + NRIC_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        // name","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d INDEX_THIRD_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"        // phone","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        userInput \u003d targetIndex.getOneBased() + NRIC_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"        descriptor \u003d new EditDoctorDescriptorBuilder().withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"        expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"        Index targetIndex \u003d INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_NRIC_DESC + NRIC_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"        userInput \u003d targetIndex.getOneBased() + NRIC_DESC_BOB + INVALID_NRIC_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"        userInput \u003d targetIndex.getOneBased() + NRIC_DESC_AMY + NRIC_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_NRIC_DESC + INVALID_NRIC_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yanghengtang":9,"mounilsankar":8,"kimshitong":125}},{"path":"src/test/java/seedu/address/logic/parser/EditPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"public class EditPatientCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPatientCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    private EditPatientCommandParser parser \u003d new EditPatientCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        // no index specified","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        // no field specified","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"1\", EditPatientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        // negative index","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        // zero index","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NRIC_DESC, Nric.MESSAGE_CONSTRAINTS); // invalid nric","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        // invalid phone followed by valid nric","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + NRIC_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + VALID_PHONE_AMY + INVALID_NRIC_DESC,","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"                + NRIC_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"                .withPhone(VALID_PHONE_BOB).withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + NRIC_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"                .withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        // name","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"        // phone","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"cheeggered"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"        // nric","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"        userInput \u003d targetIndex.getOneBased() + NRIC_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"cheeggered"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"cheeggered"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"cheeggered"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"cheeggered"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"cheeggered"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"cheeggered"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"                + PHONE_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"                + PHONE_DESC_BOB + NAME_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_NAME));","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"cheeggered"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"cheeggered"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_NRIC_DESC","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"cheeggered"},"content":"                + INVALID_PHONE_DESC + INVALID_NRIC_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"cheeggered"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":14,"cheeggered":147}},{"path":"src/test/java/seedu/address/logic/parser/FindDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.FindDoctorCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.NameContainsKeywordsDoctorPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"public class FindDoctorCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    private FindDoctorCommandParser parser \u003d new FindDoctorCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    public void parse_validArgs_returnsFindDoctorCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand expectedFindDoctorCommand \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"                new FindDoctorCommand(new NameContainsKeywordsDoctorPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindDoctorCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindDoctorCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":2,"kimshitong":33}},{"path":"src/test/java/seedu/address/logic/parser/FindPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.FindPatientCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.NameContainsKeywordsPatientPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"public class FindPatientCommandParserTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    private FindPatientCommandParser parser \u003d new FindPatientCommandParser();","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"                FindPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public void parse_validArgs_returnsFindPatientCommand() {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand expectedFindPatientCommand \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"                new FindPatientCommand(new NameContainsKeywordsPatientPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindPatientCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindPatientCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yanghengtang":2,"cheeggered":33}},{"path":"src/test/java/seedu/address/logic/parser/ListAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.ListAppointmentCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEqualDoctorNricPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEqualPatientNricPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentFilterByNricPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"public class ListAppointmentCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    private ListAppointmentCommandParser parser \u003d new ListAppointmentCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate doctorPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(new Nric(BENSON_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate expectedNricPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, \"\\t  \\r  \\n \"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"                + \"pic\\\\T0123456J \"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"                + \"dic\\\\S2936283D\", new ListAppointmentCommand(expectedNricPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    public void parse_doctorNricFieldMissing_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e doctorPredicate \u003d PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate expectedNricPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, \"\\t  \\r  \\n \"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"                + \"pic\\\\T0123456J \", new ListAppointmentCommand(expectedNricPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"    public void parse_patientNricFieldMissing_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e patientPredicate \u003d PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e doctorPredicate \u003d new AppointmentEqualDoctorNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate expectedNricPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, \"\\t  \\r  \\n \"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"                + \"dic\\\\T0123456J \", new ListAppointmentCommand(expectedNricPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"    public void parse_allFieldsMissing_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, \"\\t  \\r  \\n \", new ListAppointmentCommand());","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        // invalid patient nric","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"\\t  \\r  \\n \"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"                + \"pic\\\\T0123456JJ \"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"                + \"dic\\\\S2936283D\", Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        // invalid doctor nric","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"\\t  \\r  \\n \"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"                + \"pic\\\\T0123456J \"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"                + \"dic\\\\S2936283DD\", Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"                + \"pic\\\\T0123456J \"","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"                + \"dic\\\\S2936283D\",","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yanghengtang":4,"mounilsankar":80,"derekjxtan":2}},{"path":"src/test/java/seedu/address/logic/parser/MediConnectParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddMedicalConditionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.AddSpecialisationCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.AppointmentRemarkCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.DeleteMedicalConditionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.DeletePrescriptionCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DeleteSpecialisationCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.DoctorRemarkCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.EditDoctorCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.FindDoctorCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.FindPatientCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.ListAppointmentCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.ListDoctorCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.ListPatientsCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.PatientRemarkCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.ViewAppointmentCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.ViewDoctorCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.ViewPatientCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.NameContainsKeywordsDoctorPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.NameContainsKeywordsPatientPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.AppointmentUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.DoctorUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.EditDoctorDescriptorBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.PatientUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"public class MediConnectParserTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"    private final MediConnectParser parser \u003d new MediConnectParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_addAppointment() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"        AddAppointmentCommand command \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"                (AddAppointmentCommand) parser.parseCommand(AppointmentUtil.getAddAppointmentCommand(appointment));","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(new AddAppointmentCommand(appointment), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"    public void parseCommand_addDoctor() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"        Doctor doctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"        AddDoctorCommand command \u003d (AddDoctorCommand) parser.parseCommand(DoctorUtil.getAddDoctorCommand(doctor));","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(new AddDoctorCommand(doctor), command);","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_addPatient() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"        AddPatientCommand command \u003d (AddPatientCommand) parser.parseCommand(PatientUtil.getAddPatientCommand(patient));","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(new AddPatientCommand(patient), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_deleteAppointment() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"        DeleteAppointmentCommand command \u003d (DeleteAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"                DeleteAppointmentCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(new DeleteAppointmentCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"    public void parseCommand_deletePatient() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"        DeletePatientCommand command \u003d (DeletePatientCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"                DeletePatientCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"        assertEquals(new DeletePatientCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"    public void parseCommand_deleteDoctor() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"        DeleteDoctorCommand command \u003d (DeleteDoctorCommand) parser.parseCommand(","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"                DeleteDoctorCommand.COMMAND_WORD + \" \" + INDEX_FIRST_DOCTOR.getOneBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        assertEquals(new DeleteDoctorCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"    public void parseCommand_editDoctor() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"        Doctor doctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        EditDoctorDescriptor descriptor \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"                new EditDoctorDescriptorBuilder(doctor).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"        EditDoctorCommand command \u003d (EditDoctorCommand) parser.parseCommand(EditDoctorCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + DoctorUtil.getEditDoctorDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"        assertEquals(new EditDoctorCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_editPatient() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"        EditPatientDescriptor descriptor \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"                new EditPatientDescriptorBuilder(patient).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"        EditPatientCommand command \u003d (EditPatientCommand) parser.parseCommand(\"edit_p 1 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"                + PatientUtil.getEditPatientDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(new EditPatientCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_editAppointment() throws Exception {","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentCommand command \u003d (EditAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"                \"edit_a 1 pic\\\\T0123456N dic\\\\T0234872G from\\\\2023-09-11 11:00 to\\\\2023-09-11 11:15\");","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(\"T0123456N\")","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(\"T0234872G\")","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 11:00\")","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 11:15\")","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(new EditAppointmentCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"cheeggered"},"content":"    public void parseCommand_findPatient() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"cheeggered"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"        FindPatientCommand command \u003d (FindPatientCommand) parser.parseCommand(","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"                FindPatientCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"        assertEquals(new FindPatientCommand(new NameContainsKeywordsPatientPredicate(keywords)), command);","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"cheeggered"},"content":"    public void parseCommand_listPatients() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"cheeggered"},"content":"        assertTrue(parser.parseCommand(ListPatientsCommand.COMMAND_WORD) instanceof ListPatientsCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"cheeggered"},"content":"        assertTrue(parser.parseCommand(ListPatientsCommand.COMMAND_WORD + \" 3\") instanceof ListPatientsCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"    public void parseCommand_listDoctor() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"        assertTrue(parser.parseCommand(ListDoctorCommand.COMMAND_WORD) instanceof ListDoctorCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"        assertTrue(parser.parseCommand(ListDoctorCommand.COMMAND_WORD + \" 3\") instanceof ListDoctorCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"    public void parseCommand_findDoctor() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"        FindDoctorCommand command \u003d (FindDoctorCommand) parser.parseCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"                FindDoctorCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"        assertEquals(new FindDoctorCommand(new NameContainsKeywordsDoctorPredicate(keywords)), command);","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_listAppointments() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(parser.parseCommand(ListAppointmentCommand.COMMAND_WORD) instanceof ListAppointmentCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(parser.parseCommand(ListAppointmentCommand.COMMAND_WORD","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"mounilsankar"},"content":"                + \" pic\\\\ T0123456J dic\\\\ S2936283D\") instanceof ListAppointmentCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_viewAppointment() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"mounilsankar"},"content":"        ViewAppointmentCommand command \u003d (ViewAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"mounilsankar"},"content":"                \"view_a 1\");","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(new ViewAppointmentCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"    public void parseCommand_viewDoctor() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"        ViewDoctorCommand command \u003d (ViewDoctorCommand) parser.parseCommand(","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"                \"view_d 1\");","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"        assertEquals(new ViewDoctorCommand(INDEX_FIRST_DOCTOR), command);","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"cheeggered"},"content":"    public void parseCommand_viewPatient() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"cheeggered"},"content":"        ViewPatientCommand command \u003d (ViewPatientCommand) parser.parseCommand(","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"cheeggered"},"content":"                \"view_p 1\");","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"cheeggered"},"content":"        assertEquals(new ViewPatientCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_appointmentRemark() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"mounilsankar"},"content":"        AppointmentRemarkCommand command \u003d (AppointmentRemarkCommand) parser.parseCommand(","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"mounilsankar"},"content":"                \"remark_a 1 r\\\\Patient to follow up in 1 month\");","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(new AppointmentRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"mounilsankar"},"content":"                new Remark(\"Patient to follow up in 1 month\")), command);","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"kimshitong"},"content":"    public void parseCommand_doctorRemark() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"kimshitong"},"content":"        DoctorRemarkCommand command \u003d (DoctorRemarkCommand) parser.parseCommand(","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"kimshitong"},"content":"                \"remark_d 1 r\\\\Doctor to be back by 30/12/2023\");","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"kimshitong"},"content":"        assertEquals(new DoctorRemarkCommand(INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"kimshitong"},"content":"                new Remark(\"Doctor to be back by 30/12/2023\")), command);","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"cheeggered"},"content":"    public void parseCommand_patientRemark() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":220,"author":{"gitId":"cheeggered"},"content":"        PatientRemarkCommand command \u003d (PatientRemarkCommand) parser.parseCommand(","lastModifiedDate":"2023-10-28"},{"lineNumber":221,"author":{"gitId":"cheeggered"},"content":"                \"remark_p 1 r\\\\Patient to follow up in 1 month\");","lastModifiedDate":"2023-10-28"},{"lineNumber":222,"author":{"gitId":"cheeggered"},"content":"        assertEquals(new PatientRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":223,"author":{"gitId":"cheeggered"},"content":"                new Remark(\"Patient to follow up in 1 month\")), command);","lastModifiedDate":"2023-10-28"},{"lineNumber":224,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":225,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"cheeggered"},"content":"    public void parseCommand_addMedicalCondition() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"cheeggered"},"content":"        AddMedicalConditionCommand command \u003d (AddMedicalConditionCommand) parser.parseCommand(","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"cheeggered"},"content":"                \"add_tag_p 1 t\\\\diabetes\");","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"cheeggered"},"content":"        assertEquals(new AddMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"cheeggered"},"content":"                new Tag(\"diabetes\")), command);","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"cheeggered"},"content":"    public void parseCommand_deleteMedicalCondition() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"cheeggered"},"content":"        DeleteMedicalConditionCommand command \u003d (DeleteMedicalConditionCommand) parser.parseCommand(","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"cheeggered"},"content":"                \"delete_tag_p 1 t\\\\diabetes\");","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"cheeggered"},"content":"        assertEquals(new DeleteMedicalConditionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"cheeggered"},"content":"                new Tag(\"diabetes\")), command);","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_addPresription() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"mounilsankar"},"content":"        AddPrescriptionCommand command \u003d (AddPrescriptionCommand ) parser.parseCommand(","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"mounilsankar"},"content":"                \"add_tag_a 1 t\\\\Panadol\");","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(new AddPrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"mounilsankar"},"content":"                new Tag(\"Panadol\")), command);","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"kimshitong"},"content":"    public void parseCommand_deleteSpecialisation() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"kimshitong"},"content":"        DeleteSpecialisationCommand command \u003d (DeleteSpecialisationCommand) parser.parseCommand(","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"kimshitong"},"content":"                \"delete_tag_d 1 t\\\\Dermatology\");","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"kimshitong"},"content":"        assertEquals(new DeleteSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"kimshitong"},"content":"                new Tag(\"Dermatology\")), command);","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_deletePresription() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"mounilsankar"},"content":"        DeletePrescriptionCommand command \u003d (DeletePrescriptionCommand) parser.parseCommand(","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"mounilsankar"},"content":"                \"delete_tag_a 1 t\\\\Panadol\");","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(new DeletePrescriptionCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"mounilsankar"},"content":"                new Tag(\"Panadol\")), command);","lastModifiedDate":"2023-10-31"},{"lineNumber":265,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":267,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":268,"author":{"gitId":"kimshitong"},"content":"    public void parseCommand_addSpecialisation() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"kimshitong"},"content":"        AddSpecialisationCommand command \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"kimshitong"},"content":"                (AddSpecialisationCommand) parser.parseCommand(","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"kimshitong"},"content":"                \"add_tag_d 1 t\\\\Orthopaedic\");","lastModifiedDate":"2023-11-01"},{"lineNumber":272,"author":{"gitId":"kimshitong"},"content":"        assertEquals(new AddSpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"kimshitong"},"content":"                new Tag(\"Orthopaedic\")), command);","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":276,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":277,"author":{"gitId":"mounilsankar"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-13"},{"lineNumber":278,"author":{"gitId":"mounilsankar"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":279,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":280,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":281,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":282,"author":{"gitId":"mounilsankar"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":283,"author":{"gitId":"mounilsankar"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":284,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":285,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":286,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":17,"mounilsankar":123,"cheeggered":67,"kimshitong":79}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    private static final String INVALID_NRIC \u003d \"A1234567N\";","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    private static final String VALID_NRIC \u003d \"T1234567G\";","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"    public void parseNric_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNric((String) null));","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"    public void parseNric_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNric(INVALID_NRIC));","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"    public void parseNric_validValueWithoutWhitespace_returnsNric() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(VALID_NRIC));","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"mounilsankar"},"content":"    public void parseNric_validValueWithWhitespace_returnsTrimmedNric() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"mounilsankar"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NRIC + WHITESPACE;","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"mounilsankar"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(nameWithWhitespace));","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"mounilsankar"},"content":"    public void parseNric_validValueWithLowerCase_returnsTrimmedNric() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"mounilsankar"},"content":"        String lowercaseNric \u003d VALID_NRIC.toLowerCase();","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"mounilsankar"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(lowercaseNric));","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"mounilsankar":34,"-":148}},{"path":"src/test/java/seedu/address/logic/parser/PatientRemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_1;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.PatientRemarkCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"public class PatientRemarkCommandParserTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    private PatientRemarkCommandParser parser \u003d new PatientRemarkCommandParser();","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    public void parse_validArgs_returnsPatientRemarkCommand() {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, \"1 r\\\\Patient to follow up in 1 month\",","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"                new PatientRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"                        new Remark(VALID_REMARK_1)));","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    public void parse_noRemark_returnsPatientRemarkCommand() {","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, \"1\",","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"                new PatientRemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"                        new Remark(\"\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"a r\\\\Patient to follow up in 1 month\",","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"                        PatientRemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"cheeggered":36}},{"path":"src/test/java/seedu/address/logic/parser/ViewAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.ViewAppointmentCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":" * outside of the ViewAppointmentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":" * same path through the ViewAppointmentCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"public class ViewAppointmentCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    private ViewAppointmentCommandParser parser \u003d new ViewAppointmentCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        assertParseSuccess(parser, \"1\", new ViewAppointmentCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                ViewAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"mounilsankar":33}},{"path":"src/test/java/seedu/address/logic/parser/ViewDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.ViewDoctorCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":" * outside of the ViewDoctorCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":" * same path through the ViewDoctorCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"public class ViewDoctorCommandParserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    private ViewDoctorCommandParser parser \u003d new ViewDoctorCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"        assertParseSuccess(parser, \"1\", new ViewDoctorCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"                ViewDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"kimshitong":33}},{"path":"src/test/java/seedu/address/logic/parser/ViewPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.ViewPatientCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":" * outside of the ViewPatientCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":" * same path through the ViewPatientCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"public class ViewPatientCommandParserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    private ViewPatientCommandParser parser \u003d new ViewPatientCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"        assertParseSuccess(parser, \"1\", new ViewPatientCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"                ViewPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"cheeggered":33}},{"path":"src/test/java/seedu/address/model/DataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public class DataTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    public static final String VALID_REMARK_STRING \u003d \"Allergic to sunlight\";","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    public static final Remark VALID_REMARK \u003d new Remark(VALID_REMARK_STRING);","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final String DEPRESSION_TAG_STRING \u003d \"Depression\";","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    public static final String PARACETAMOL_TAG_STRING \u003d \"Paracetamol\";","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    public static final String PEDIATRICIAN_TAG_STRING \u003d \"Pediatrician\";","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    public static final String ORTHOPAEDIC_TAG_STRING \u003d \"Orthopaedic\";","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public static final String DERMATOLOGY_TAG_STRING \u003d \"Dermatology\";","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    public static final Tag DEPRESSION_TAG \u003d new Tag(DEPRESSION_TAG_STRING);","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public static final Tag PARACETAMOL_TAG \u003d new Tag(PARACETAMOL_TAG_STRING);","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    public static final Tag PEDIATRICIAN_TAG \u003d new Tag(PEDIATRICIAN_TAG_STRING);","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    public static final Tag ORTHOPAEDIC_TAG \u003d new Tag(ORTHOPAEDIC_TAG_STRING);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    public static final Tag DERMATOLOGY_TAG \u003d new Tag(DERMATOLOGY_TAG_STRING);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    public static final HashSet\u003cTag\u003e TAGS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    public static final HashSet\u003cTag\u003e TAGS_WITH_TAG \u003d new HashSet\u003c\u003e(Arrays.asList(PEDIATRICIAN_TAG, PARACETAMOL_TAG));","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    public static final Data DATA_1 \u003d new DataStub();","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    public static final Data DATA_2 \u003d new DataStub(VALID_REMARK, TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    public void getRemark() {","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"        // no remark set -\u003e return remark with empty string","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(DATA_1.getRemark(), EMPTY_REMARK);","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        // remark set -\u003e returns the correct remark","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(DATA_2.getRemark(), VALID_REMARK);","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    public void getTags() {","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        // Empty set of tags initialized","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(DATA_1.getTags(), TAGS);","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        // Same set of tags returned","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(DATA_2.getTags(), TAGS);","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        // changing the set of tags does not cause changes in Data","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        TAGS.add(DEPRESSION_TAG);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        assertNotEquals(DATA_2.getTags(), TAGS);","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        // creating a new Data object with the modified set of tags returns the modified set","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        Data data3 \u003d new DataStub(VALID_REMARK, TAGS);","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(data3.getTags(), TAGS);","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"        // modifying tags retrived from Data does not modify the set of tags in Data","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        HashSet\u003cTag\u003e retrivedTags \u003d data3.getTags();","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        retrivedTags.add(PARACETAMOL_TAG);","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        assertNotEquals(data3.getTags(), retrivedTags);","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":" * A Data stub that has isSame Failing.","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"class DataStub extends Data {","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"    public DataStub() {","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        super();","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"    public DataStub(Remark remark, HashSet\u003c? extends Tag\u003e tags) {","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"        super(remark, tags);","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"    public boolean isSame(Listable otherListable) {","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"derekjxtan":76,"kimshitong":4}},{"path":"src/test/java/seedu/address/model/DatabaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NRIC;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.CARL_NRIC;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.FIONA_NRIC;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_1;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_6;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_6_DIFFERENT_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.getTypicalAppointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDoctor.ALICE;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDoctor.BENSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDoctor.CARL;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDoctor.getTypicalDoctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalPatient;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.TypicalPatient;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"public class DatabaseTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    private final Database database \u003d new Database();","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"    public void emptyConstructor() {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(Collections.emptyList(), database.getAppointmentList());","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(Collections.emptyList(), database.getDoctorList());","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(Collections.emptyList(), database.getPatientList());","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"    public void copyConstructor() {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        List\u003cAppointment\u003e appointmentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        List\u003cDoctor\u003e doctorList \u003d getTypicalDoctor();","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        List\u003cPatient\u003e patientList \u003d getTypicalPatient();","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"        DatabaseStub newData \u003d new DatabaseStub(appointmentList, doctorList, patientList);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"        Database newDatabase \u003d new Database(newData);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(appointmentList, newDatabase.getAppointmentList());","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(doctorList, newDatabase.getDoctorList());","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(patientList, newDatabase.getPatientList());","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"    public void hasAppointment_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.hasAppointment(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"    public void hasDoctor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.hasDoctor(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"    public void hasPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.hasPatient(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"    public void hasAppointment_appointmentNotInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(database.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"    public void hasDoctor_doctorNotInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(database.hasDoctor(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"    public void hasPatient_patientNotInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasPatient(TypicalPatient.CARL));","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"    public void hasAppointment_appointmentInDatabase_returnsTrue() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"        database.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(database.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"    public void hasDoctor_doctorInDatabase_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"        database.addDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(database.hasDoctor(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"yanghengtang"},"content":"    public void hasPatient_patientInDatabase_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"derekjxtan"},"content":"        database.addPatient(TypicalPatient.CARL);","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasPatient(TypicalPatient.CARL));","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"derekjxtan"},"content":"    public void hasDoctor_doctorWithSameNricInDatabase_returnsTrue() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":"        database.addDoctor(BENSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"yanghengtang"},"content":"        Doctor editedBenson \u003d new DoctorBuilder(BENSON).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"yanghengtang"},"content":"        database.setDoctor(BENSON, editedBenson);","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(database.hasDoctor(editedBenson));","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"derekjxtan"},"content":"    public void hasPatient_patientWithSameNricInDatabase_returnsTrue() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"derekjxtan"},"content":"        database.addPatient(TypicalPatient.DANIEL);","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"derekjxtan"},"content":"        Patient editedDaniel \u003d new PatientBuilder(TypicalPatient.DANIEL).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"derekjxtan"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"derekjxtan"},"content":"        database.setPatient(TypicalPatient.DANIEL, editedDaniel);","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(database.hasPatient(editedDaniel));","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"    public void hasAppointment_appointmentRemovedFromDatabase_returnsFalse() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"yanghengtang"},"content":"        database.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"yanghengtang"},"content":"        database.removeAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(database.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"    public void hasAppointment_appointmentModified_returnsFalse() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"derekjxtan"},"content":"        database.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"derekjxtan"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(APPOINTMENT_1)","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 07:45\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"derekjxtan"},"content":"        database.setAppointment(APPOINTMENT_1, editedAppointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasAppointment(editedAppointment));","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"    public void hasAppointment_doctorRemovedFromDatabase_returnsFalse() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"derekjxtan"},"content":"        database.addDoctor(BENSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"derekjxtan"},"content":"        database.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"derekjxtan"},"content":"        database.removeDoctor(BENSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"    public void hasAppointment_patientRemovedFromDatabase_returnsFalse() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"derekjxtan"},"content":"        database.addPatient(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"derekjxtan"},"content":"        database.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"derekjxtan"},"content":"        database.removePatient(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"yanghengtang"},"content":"    public void hasDoctor_doctorRemovedFromDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"        database.addDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"        database.removeDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(database.hasDoctor(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"yanghengtang"},"content":"    public void hasPatient_patientRemovedFromDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"derekjxtan"},"content":"        database.addPatient(TypicalPatient.CARL);","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"derekjxtan"},"content":"        database.removePatient(TypicalPatient.CARL);","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasPatient(TypicalPatient.CARL));","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"derekjxtan"},"content":"    public void setPatient() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"derekjxtan"},"content":"        database.addDoctor(ALICE);","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"derekjxtan"},"content":"        database.addPatient(TypicalPatient.FIONA);","lastModifiedDate":"2023-10-23"},{"lineNumber":183,"author":{"gitId":"derekjxtan"},"content":"        database.addAppointment(APPOINTMENT_6);","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"derekjxtan"},"content":"        database.addAppointment(APPOINTMENT_6_DIFFERENT_TIME);","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"derekjxtan"},"content":"        database.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"derekjxtan"},"content":"        database.setPatient(TypicalPatient.FIONA, TypicalPatient.CARL);","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"derekjxtan"},"content":"        // previous patient no longer exists","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasPatient(TypicalPatient.ALICE));","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"derekjxtan"},"content":"        // new patient exists","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasPatient(TypicalPatient.CARL));","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"derekjxtan"},"content":"        // appointment patient nric updated","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasAppointment(new Appointment(","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"derekjxtan"},"content":"                new Nric(ALICE_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"derekjxtan"},"content":"                new Nric(CARL_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentStartTime(\"2023-09-11 13:30\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentEndTime(\"2023-09-11 14:00\")","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"derekjxtan"},"content":"        )));","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasAppointment(new Appointment(","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"derekjxtan"},"content":"                new Nric(ALICE_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"derekjxtan"},"content":"                new Nric(CARL_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentStartTime(\"2023-09-11 14:00\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentEndTime(\"2023-09-11 14:30\")","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"derekjxtan"},"content":"        )));","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"derekjxtan"},"content":"        // previous appointments no longer exist","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasAppointment(new Appointment(","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"derekjxtan"},"content":"                new Nric(ALICE_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"derekjxtan"},"content":"                new Nric(FIONA_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentStartTime(\"2023-09-11 13:30\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentEndTime(\"2023-09-11 14:00\")","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"derekjxtan"},"content":"        )));","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasAppointment(new Appointment(","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"derekjxtan"},"content":"                new Nric(ALICE_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"derekjxtan"},"content":"                new Nric(FIONA_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentStartTime(\"2023-09-11 14:00\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentEndTime(\"2023-09-11 14:30\")","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"derekjxtan"},"content":"        )));","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"derekjxtan"},"content":"        // other appointments are unaffected","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasAppointment(new Appointment(","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"derekjxtan"},"content":"                new Nric(BENSON_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":220,"author":{"gitId":"derekjxtan"},"content":"                new Nric(ALICE_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentStartTime(\"2023-09-11 07:30\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentEndTime(\"2023-09-11 08:00\")","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"derekjxtan"},"content":"        )));","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"derekjxtan"},"content":"    public void setDoctor() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"derekjxtan"},"content":"        database.addDoctor(ALICE);","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"derekjxtan"},"content":"        database.addPatient(TypicalPatient.FIONA);","lastModifiedDate":"2023-10-23"},{"lineNumber":230,"author":{"gitId":"derekjxtan"},"content":"        database.addAppointment(APPOINTMENT_6);","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"derekjxtan"},"content":"        database.addAppointment(APPOINTMENT_6_DIFFERENT_TIME);","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"derekjxtan"},"content":"        database.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"derekjxtan"},"content":"        database.setDoctor(ALICE, CARL);","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"derekjxtan"},"content":"        // previous patient no longer exists","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasDoctor(ALICE));","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"derekjxtan"},"content":"        // new patient exists","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasDoctor(CARL));","lastModifiedDate":"2023-10-23"},{"lineNumber":238,"author":{"gitId":"derekjxtan"},"content":"        // appointment patient nric updated","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasAppointment(new Appointment(","lastModifiedDate":"2023-10-23"},{"lineNumber":240,"author":{"gitId":"derekjxtan"},"content":"                new Nric(CARL_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"derekjxtan"},"content":"                new Nric(FIONA_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":242,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentStartTime(\"2023-09-11 13:30\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentEndTime(\"2023-09-11 14:00\")","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"derekjxtan"},"content":"        )));","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasAppointment(new Appointment(","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"derekjxtan"},"content":"                new Nric(CARL_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":247,"author":{"gitId":"derekjxtan"},"content":"                new Nric(FIONA_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentStartTime(\"2023-09-11 14:00\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":249,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentEndTime(\"2023-09-11 14:30\")","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"derekjxtan"},"content":"        )));","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"derekjxtan"},"content":"        // previous appointments no longer exist","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasAppointment(new Appointment(","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"derekjxtan"},"content":"                new Nric(ALICE_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"derekjxtan"},"content":"                new Nric(FIONA_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentStartTime(\"2023-09-11 13:30\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentEndTime(\"2023-09-11 14:00\")","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"derekjxtan"},"content":"        )));","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasAppointment(new Appointment(","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"derekjxtan"},"content":"                new Nric(ALICE_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"derekjxtan"},"content":"                new Nric(FIONA_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentStartTime(\"2023-09-11 14:00\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentEndTime(\"2023-09-11 14:30\")","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"derekjxtan"},"content":"        )));","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"derekjxtan"},"content":"        // other appointments are unaffected","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasAppointment(new Appointment(","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"derekjxtan"},"content":"                new Nric(BENSON_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"derekjxtan"},"content":"                new Nric(ALICE_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentStartTime(\"2023-09-11 07:30\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":269,"author":{"gitId":"derekjxtan"},"content":"                new AppointmentEndTime(\"2023-09-11 08:00\")","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"derekjxtan"},"content":"        )));","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":272,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":273,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":274,"author":{"gitId":"yanghengtang"},"content":"    public void getAppointmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":275,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e database.getAppointmentList().remove(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":276,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":277,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":278,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":279,"author":{"gitId":"yanghengtang"},"content":"    public void getDoctorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":280,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e database.getDoctorList().remove(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":281,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":282,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":283,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":284,"author":{"gitId":"yanghengtang"},"content":"    public void getPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":285,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e database.getPatientList().remove(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":286,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":287,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":288,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":289,"author":{"gitId":"derekjxtan"},"content":"    public void hasDoctorWithNric_nullNric_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":290,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.hasDoctorWithNric(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":291,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":292,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":293,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":294,"author":{"gitId":"derekjxtan"},"content":"    public void hasDoctorWithNric_doctorNotInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":295,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasDoctorWithNric(new Nric(ALICE_NRIC)));","lastModifiedDate":"2023-10-23"},{"lineNumber":296,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":297,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":298,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":299,"author":{"gitId":"derekjxtan"},"content":"    public void hasDoctorWithNric_doctorInDatabase_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":300,"author":{"gitId":"derekjxtan"},"content":"        database.addDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":301,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasDoctorWithNric(new Nric(ALICE_NRIC)));","lastModifiedDate":"2023-10-23"},{"lineNumber":302,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":303,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":304,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":305,"author":{"gitId":"derekjxtan"},"content":"    public void hasDoctorWithNric_doctorWithSameNricInDatabase_returnsTrue() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"derekjxtan"},"content":"        database.addDoctor(BENSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":307,"author":{"gitId":"derekjxtan"},"content":"        Doctor editedBenson \u003d new DoctorBuilder(BENSON).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":308,"author":{"gitId":"derekjxtan"},"content":"        database.setDoctor(BENSON, editedBenson);","lastModifiedDate":"2023-10-12"},{"lineNumber":309,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasDoctorWithNric(new Nric(BENSON_NRIC)));","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":311,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":312,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":313,"author":{"gitId":"derekjxtan"},"content":"    public void hasDoctorWithNric_doctorRemovedFromDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":314,"author":{"gitId":"derekjxtan"},"content":"        database.addDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":315,"author":{"gitId":"derekjxtan"},"content":"        database.removeDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":316,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasDoctorWithNric(new Nric(ALICE_NRIC)));","lastModifiedDate":"2023-10-23"},{"lineNumber":317,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":318,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":319,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":320,"author":{"gitId":"derekjxtan"},"content":"    public void hasPatientWithNric_nullNric_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":321,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.hasPatientWithNric(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":322,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":323,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":324,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":325,"author":{"gitId":"derekjxtan"},"content":"    public void hasPatientWithNric_patientNotInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":326,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasPatientWithNric(new Nric(ALICE_NRIC)));","lastModifiedDate":"2023-10-23"},{"lineNumber":327,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":328,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":329,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":330,"author":{"gitId":"derekjxtan"},"content":"    public void hasPatientWithNric_patientInDatabase_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":331,"author":{"gitId":"derekjxtan"},"content":"        database.addPatient(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":332,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasPatientWithNric(new Nric(ALICE_NRIC)));","lastModifiedDate":"2023-10-23"},{"lineNumber":333,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":334,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":335,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":336,"author":{"gitId":"derekjxtan"},"content":"    public void hasPatientWithNric_patientWithSameNricInDatabase_returnsTrue() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"derekjxtan"},"content":"        database.addPatient(TypicalPatient.BENSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":338,"author":{"gitId":"derekjxtan"},"content":"        Patient editedBenson \u003d new PatientBuilder(TypicalPatient.BENSON).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":339,"author":{"gitId":"derekjxtan"},"content":"        database.setPatient(TypicalPatient.BENSON, editedBenson);","lastModifiedDate":"2023-10-12"},{"lineNumber":340,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(database.hasPatientWithNric(new Nric(BENSON_NRIC)));","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":342,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":343,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":344,"author":{"gitId":"derekjxtan"},"content":"    public void hasPatientWithNric_patientRemovedFromDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":345,"author":{"gitId":"derekjxtan"},"content":"        database.addPatient(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":346,"author":{"gitId":"derekjxtan"},"content":"        database.removePatient(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":347,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.hasPatientWithNric(new Nric(ALICE_NRIC)));","lastModifiedDate":"2023-10-23"},{"lineNumber":348,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":349,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":350,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":351,"author":{"gitId":"yanghengtang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":352,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":353,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(database.equals(database));","lastModifiedDate":"2023-10-12"},{"lineNumber":354,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":355,"author":{"gitId":"yanghengtang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":356,"author":{"gitId":"yanghengtang"},"content":"        Database newDatabase \u003d new Database(database);","lastModifiedDate":"2023-10-12"},{"lineNumber":357,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(database.equals(newDatabase));","lastModifiedDate":"2023-10-12"},{"lineNumber":358,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":359,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":360,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(database.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":361,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":362,"author":{"gitId":"yanghengtang"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":363,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(database.equals(5.0));","lastModifiedDate":"2023-10-12"},{"lineNumber":364,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":365,"author":{"gitId":"yanghengtang"},"content":"        // different doctorList -\u003e return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":366,"author":{"gitId":"yanghengtang"},"content":"        List\u003cDoctor\u003e doctorList \u003d getTypicalDoctor();","lastModifiedDate":"2023-10-12"},{"lineNumber":367,"author":{"gitId":"yanghengtang"},"content":"        newDatabase \u003d new Database();","lastModifiedDate":"2023-10-12"},{"lineNumber":368,"author":{"gitId":"yanghengtang"},"content":"        newDatabase.setDoctors(doctorList);","lastModifiedDate":"2023-10-12"},{"lineNumber":369,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(database.equals(newDatabase));","lastModifiedDate":"2023-10-12"},{"lineNumber":370,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":371,"author":{"gitId":"yanghengtang"},"content":"        // different patientList -\u003e return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":372,"author":{"gitId":"yanghengtang"},"content":"        List\u003cPatient\u003e patientList \u003d getTypicalPatient();","lastModifiedDate":"2023-10-12"},{"lineNumber":373,"author":{"gitId":"yanghengtang"},"content":"        newDatabase \u003d new Database();","lastModifiedDate":"2023-10-12"},{"lineNumber":374,"author":{"gitId":"yanghengtang"},"content":"        newDatabase.setPatients(patientList);","lastModifiedDate":"2023-10-12"},{"lineNumber":375,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(database.equals(newDatabase));","lastModifiedDate":"2023-10-12"},{"lineNumber":376,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":377,"author":{"gitId":"derekjxtan"},"content":"        // different appointmentList -\u003e return false","lastModifiedDate":"2023-10-19"},{"lineNumber":378,"author":{"gitId":"derekjxtan"},"content":"        List\u003cAppointment\u003e appointmentList \u003d getTypicalAppointment();","lastModifiedDate":"2023-10-19"},{"lineNumber":379,"author":{"gitId":"derekjxtan"},"content":"        newDatabase \u003d new Database();","lastModifiedDate":"2023-10-19"},{"lineNumber":380,"author":{"gitId":"derekjxtan"},"content":"        newDatabase.setAppointments(appointmentList);","lastModifiedDate":"2023-10-19"},{"lineNumber":381,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(database.equals(newDatabase));","lastModifiedDate":"2023-10-19"},{"lineNumber":382,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":383,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":384,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":385,"author":{"gitId":"yanghengtang"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":386,"author":{"gitId":"yanghengtang"},"content":"        String expected \u003d Database.class.getCanonicalName() + \"{appointments\u003d\" + database.getAppointmentList()","lastModifiedDate":"2023-10-12"},{"lineNumber":387,"author":{"gitId":"yanghengtang"},"content":"                + \", doctors\u003d\" + database.getDoctorList()","lastModifiedDate":"2023-10-12"},{"lineNumber":388,"author":{"gitId":"yanghengtang"},"content":"                + \", patients\u003d\" + database.getPatientList() + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":389,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(expected, database.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":390,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":391,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":392,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":393,"author":{"gitId":"yanghengtang"},"content":"     * A stub ReadOnlyDatabase whose persons list can violate interface constraints.","lastModifiedDate":"2023-10-12"},{"lineNumber":394,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":395,"author":{"gitId":"yanghengtang"},"content":"    private static class DatabaseStub implements ReadOnlyDatabase {","lastModifiedDate":"2023-10-12"},{"lineNumber":396,"author":{"gitId":"yanghengtang"},"content":"        private final ObservableList\u003cAppointment\u003e appointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":397,"author":{"gitId":"yanghengtang"},"content":"        private final ObservableList\u003cDoctor\u003e doctors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":398,"author":{"gitId":"yanghengtang"},"content":"        private final ObservableList\u003cPatient\u003e patients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":399,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":400,"author":{"gitId":"yanghengtang"},"content":"        DatabaseStub(Collection\u003cAppointment\u003e appointments, Collection\u003cDoctor\u003e doctors, Collection\u003cPatient\u003e patients) {","lastModifiedDate":"2023-10-12"},{"lineNumber":401,"author":{"gitId":"yanghengtang"},"content":"            this.appointments.setAll(appointments);","lastModifiedDate":"2023-10-12"},{"lineNumber":402,"author":{"gitId":"yanghengtang"},"content":"            this.doctors.setAll(doctors);","lastModifiedDate":"2023-10-12"},{"lineNumber":403,"author":{"gitId":"yanghengtang"},"content":"            this.patients.setAll(patients);","lastModifiedDate":"2023-10-12"},{"lineNumber":404,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":405,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":406,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":407,"author":{"gitId":"yanghengtang"},"content":"        public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":408,"author":{"gitId":"yanghengtang"},"content":"            return appointments;","lastModifiedDate":"2023-10-12"},{"lineNumber":409,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":410,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":411,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":412,"author":{"gitId":"yanghengtang"},"content":"        public ObservableList\u003cDoctor\u003e getDoctorList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":413,"author":{"gitId":"yanghengtang"},"content":"            return doctors;","lastModifiedDate":"2023-10-12"},{"lineNumber":414,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":415,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":416,"author":{"gitId":"yanghengtang"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":417,"author":{"gitId":"yanghengtang"},"content":"        public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":418,"author":{"gitId":"yanghengtang"},"content":"            return patients;","lastModifiedDate":"2023-10-12"},{"lineNumber":419,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":420,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":421,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":201,"derekjxtan":213,"mounilsankar":7}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.CARL_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_1;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.testutil.TypicalDoctor.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.testutil.TypicalPatient.CARL;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.TypicalDatabase;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(new Database(), new Database(modelManager.getDatabase()));","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"database/file/path\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"new/database/file/path\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"    public void setDatabaseFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDatabaseFilePath(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"    public void setDatabaseFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"        modelManager.setDatabaseFilePath(path);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(path, modelManager.getDatabaseFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"    @Test void setDatabase_validDatabase_returnsTrue() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"        ReadOnlyDatabase database \u003d TypicalDatabase.getTypicalDatabase();","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"        modelManager.setDatabase(database);","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(database.equals(modelManager.getDatabase()));","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    public void hasAppointment_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasAppointment(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"    public void hasDoctor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasDoctor(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"    public void hasPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPatient(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"    public void hasAppointment_appointmentNotInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(modelManager.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"yanghengtang"},"content":"    public void hasDoctor_doctorNotInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(modelManager.hasDoctor(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"yanghengtang"},"content":"    public void hasPatient_patientNotInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(modelManager.hasPatient(CARL));","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"yanghengtang"},"content":"    public void hasDoctorWithNric_doctorNricNotInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"yanghengtang"},"content":"        Nric doctorNric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(modelManager.hasDoctorWithNric(doctorNric));","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"yanghengtang"},"content":"    public void hasPatientWithNric_patientNricNotInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"yanghengtang"},"content":"        Nric patientNric \u003d new Nric(CARL_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(modelManager.hasPatientWithNric(patientNric));","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"yanghengtang"},"content":"    public void hasDoctorWithNric_doctorNricInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"yanghengtang"},"content":"        Nric doctorNric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(modelManager.hasDoctorWithNric(doctorNric));","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"yanghengtang"},"content":"    public void hasPatientWithNric_patientNricInDatabase_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"yanghengtang"},"content":"        Nric patientNric \u003d new Nric(CARL_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addPatient(CARL);","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(modelManager.hasPatientWithNric(patientNric));","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"    public void hasAppointment_appointmentInDatabase_returnsTrue() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(modelManager.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"yanghengtang"},"content":"    public void hasDoctor_doctorInDatabase_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(modelManager.hasDoctor(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"yanghengtang"},"content":"    public void hasPatient_patientInDatabase_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addPatient(CARL);","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(modelManager.hasPatient(CARL));","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"    public void hasAppointment_appointmentRemovedFromDatabase_returnsTrue() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"        modelManager.deleteAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(modelManager.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"    public void hasDoctor_doctorRemovedFromDatabase_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"yanghengtang"},"content":"        modelManager.deleteDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(modelManager.hasDoctor(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"yanghengtang"},"content":"    public void hasPatient_patientRemovedFromDatabase_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addPatient(CARL);","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"yanghengtang"},"content":"        modelManager.deletePatient(CARL);","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(modelManager.hasPatient(CARL));","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"mounilsankar"},"content":"    public void hasAppointment_appointmentWithDifferentEndTime_returnsFalse() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"yanghengtang"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(APPOINTMENT_1).withEndTime(\"2023-09-11 08:30\").build();","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"yanghengtang"},"content":"        modelManager.setAppointment(APPOINTMENT_1, editedAppointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(modelManager.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"derekjxtan"},"content":"    public void hasDoctor_doctorWithDifferentName_returnsTrue() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"yanghengtang"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"yanghengtang"},"content":"        modelManager.setDoctor(ALICE, editedAlice);","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(modelManager.hasDoctor(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"derekjxtan"},"content":"    public void hasPatient_patientWithDifferentName_returnsTrue() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"yanghengtang"},"content":"        Patient editedCarl \u003d new PatientBuilder(CARL).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addPatient(CARL);","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"yanghengtang"},"content":"        modelManager.setPatient(CARL, editedCarl);","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(modelManager.hasPatient(CARL));","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"yanghengtang"},"content":"    public void deleteAppointment_appointmentNotInDatabase_throwsItemNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e modelManager.deleteAppointment(APPOINTMENT_1));","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":214,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"yanghengtang"},"content":"    public void deleteDoctor_doctorNotInDatabase_throwsItemNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":216,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e modelManager.deleteDoctor(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":218,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":219,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"yanghengtang"},"content":"    public void deletePatient_patientNotInDatabase_throwsItemNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e modelManager.deletePatient(CARL));","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":224,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"mounilsankar"},"content":"    public void setAppointment_nullAppointment_throwsNullPointerException() throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-12"},{"lineNumber":227,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAppointment(APPOINTMENT_1, null));","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":229,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":231,"author":{"gitId":"yanghengtang"},"content":"    public void setDoctor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":233,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDoctor(ALICE, null));","lastModifiedDate":"2023-10-12"},{"lineNumber":234,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":236,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":237,"author":{"gitId":"yanghengtang"},"content":"    public void setPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":238,"author":{"gitId":"yanghengtang"},"content":"        modelManager.addPatient(CARL);","lastModifiedDate":"2023-10-12"},{"lineNumber":239,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPatient(CARL, null));","lastModifiedDate":"2023-10-12"},{"lineNumber":240,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":241,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":242,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":243,"author":{"gitId":"yanghengtang"},"content":"    public void getFilteredAppointmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":244,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredAppointmentList()","lastModifiedDate":"2023-10-12"},{"lineNumber":245,"author":{"gitId":"yanghengtang"},"content":"                .remove(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":246,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":247,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":248,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":249,"author":{"gitId":"yanghengtang"},"content":"    public void getFilteredDoctorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":250,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredDoctorList()","lastModifiedDate":"2023-10-12"},{"lineNumber":251,"author":{"gitId":"yanghengtang"},"content":"                .remove(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":252,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":253,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":254,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":255,"author":{"gitId":"yanghengtang"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":256,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPatientList()","lastModifiedDate":"2023-10-12"},{"lineNumber":257,"author":{"gitId":"yanghengtang"},"content":"                .remove(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":258,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":259,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":260,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":261,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedAppointment_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":262,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateSelectedAppointment(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":263,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":264,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":265,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":266,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedDoctor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":267,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateSelectedDoctor(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":268,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":269,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":270,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":271,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":272,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateSelectedPatient(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":273,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":274,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":275,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":276,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedAppointment_validAppointment_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":277,"author":{"gitId":"yanghengtang"},"content":"        modelManager.updateSelectedAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-22"},{"lineNumber":278,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(modelManager.getSelectedAppointment().equals(APPOINTMENT_1));","lastModifiedDate":"2023-10-22"},{"lineNumber":279,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":280,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":281,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":282,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedDoctor_validDoctor_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":283,"author":{"gitId":"yanghengtang"},"content":"        modelManager.updateSelectedDoctor(ALICE);","lastModifiedDate":"2023-10-22"},{"lineNumber":284,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(modelManager.getSelectedDoctor().equals(ALICE));","lastModifiedDate":"2023-10-22"},{"lineNumber":285,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":286,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":287,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":288,"author":{"gitId":"yanghengtang"},"content":"    public void updateSelectedPatient_validPatient_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":289,"author":{"gitId":"yanghengtang"},"content":"        modelManager.updateSelectedPatient(CARL);","lastModifiedDate":"2023-10-22"},{"lineNumber":290,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(modelManager.getSelectedPatient().equals(CARL));","lastModifiedDate":"2023-10-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":295,"author":{"gitId":"yanghengtang"},"content":"        Database database \u003d new Database();","lastModifiedDate":"2023-10-12"},{"lineNumber":296,"author":{"gitId":"yanghengtang"},"content":"        Database differentDatabase \u003d new Database();","lastModifiedDate":"2023-10-12"},{"lineNumber":297,"author":{"gitId":"yanghengtang"},"content":"        differentDatabase.addDoctor(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":298,"author":{"gitId":"yanghengtang"},"content":"        differentDatabase.addPatient(CARL);","lastModifiedDate":"2023-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":302,"author":{"gitId":"yanghengtang"},"content":"        modelManager \u003d new ModelManager(database, userPrefs);","lastModifiedDate":"2023-10-21"},{"lineNumber":303,"author":{"gitId":"yanghengtang"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(database, userPrefs);","lastModifiedDate":"2023-10-21"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-10-12"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-10-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2023-10-12"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":316,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentDatabase, userPrefs)));","lastModifiedDate":"2023-10-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"yanghengtang":218,"derekjxtan":4,"mounilsankar":6,"-":90}},{"path":"src/test/java/seedu/address/model/UniqueItemListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.commons.util.lambdautil.CheckedFunctionUtil.unchecked;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NRIC;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.CARL_NRIC;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.FIONA_NRIC;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_1;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_6;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_6_DIFFERENT_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.BENSON;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.BENSON_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.exceptions.DuplicateItemException;","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.TypicalDoctor;","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.TypicalPatient;","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"public class UniqueItemListTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    private final UniqueItemList\u003cPatient\u003e uniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    private final UniqueItemList\u003cPatient\u003e uniquePatientList2 \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    private final UniqueItemList\u003cDoctor\u003e uniqueDoctorList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    private final UniqueItemList\u003cAppointment\u003e uniqueAppointmentList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    public void contains_nullItem_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.contains((Patient) null));","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.contains((Function\u003cPatient, Boolean\u003e) null));","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"    public void contains_itemNotInList_returnsFalse() {","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.contains(ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.contains(patient -\u003e patient.getNric().equals(new Nric(ALICE_NRIC))));","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.contains(patient -\u003e patient.getName().equals(new Name(ALICE_NAME))));","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.contains(patient -\u003e patient.getPhone().equals(new Phone(ALICE_PHONE))));","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.contains(BENSON));","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.contains(patient -\u003e patient.getNric().equals(new Nric(BENSON_NRIC))));","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.contains(patient -\u003e patient.getName().equals(new Name(BENSON_NAME))));","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.contains(patient -\u003e patient.getPhone().equals(new Phone(BENSON_PHONE))));","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.contains(patient -\u003e patient.getName().equals(new Nric(ALICE_NRIC))));","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"    public void contains_itemInList_returnsTrue() {","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniquePatientList.contains(TypicalPatient.ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniquePatientList.contains(patient -\u003e patient.getNric().equals(new Nric(ALICE_NRIC))));","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniquePatientList.contains(patient -\u003e patient.getName().equals(new Name(ALICE_NAME))));","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniquePatientList.contains(patient -\u003e patient.getPhone().equals(new Phone(ALICE_PHONE))));","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"    public void contains_itemWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"        Patient editedAlice \u003d new PatientBuilder(TypicalPatient.ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"                .build();","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniquePatientList.contains(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"    public void add_nullItem_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.add(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"    public void add_duplicateItem_throwsDuplicateItemException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniquePatientList.add(TypicalPatient.ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_nullTargetItem_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setItem(null, TypicalPatient.ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_nullEditedItem_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setItem(TypicalPatient.ALICE, null));","lastModifiedDate":"2023-10-08"},{"lineNumber":110,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":111,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":112,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":113,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_targetItemNotInList_throwsItemNotFoundException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":114,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniquePatientList.setItem(","lastModifiedDate":"2023-10-08"},{"lineNumber":115,"author":{"gitId":"derekjxtan"},"content":"                TypicalPatient.ALICE, TypicalPatient.ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":116,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":117,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":118,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":119,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_editedItemIsSameItem_success() {","lastModifiedDate":"2023-10-08"},{"lineNumber":120,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":121,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.setItem(TypicalPatient.ALICE, TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":122,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniqueItemList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":123,"author":{"gitId":"derekjxtan"},"content":"        expectedUniqueItemList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":124,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniqueItemList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":125,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":126,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":128,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_editedItemHasSameIdentity_success() {","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"derekjxtan"},"content":"        Patient editedAlice \u003d new PatientBuilder(TypicalPatient.ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"derekjxtan"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"derekjxtan"},"content":"                .build();","lastModifiedDate":"2023-10-08"},{"lineNumber":133,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.setItem(TypicalPatient.ALICE, editedAlice);","lastModifiedDate":"2023-10-08"},{"lineNumber":134,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":135,"author":{"gitId":"derekjxtan"},"content":"        expectedUniquePatientList.add(editedAlice);","lastModifiedDate":"2023-10-08"},{"lineNumber":136,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":137,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":138,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":139,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":140,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_editedItemHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-08"},{"lineNumber":141,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":142,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.setItem(TypicalPatient.ALICE, BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":143,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":144,"author":{"gitId":"derekjxtan"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":145,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":146,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":147,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":148,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":149,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_editedItemHasNonUniqueIdentity_throwsDuplicateItemException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":150,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":151,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":152,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniquePatientList.setItem(TypicalPatient.ALICE, BOB));","lastModifiedDate":"2023-10-08"},{"lineNumber":153,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":154,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":155,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"derekjxtan"},"content":"    public void setMultipleItems_nullArgument_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setMultipleItems(null, null));","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"derekjxtan"},"content":"                uniquePatientList.setMultipleItems(null, patient -\u003e patient));","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"derekjxtan"},"content":"                uniquePatientList.setMultipleItems(patient -\u003e true, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"derekjxtan"},"content":"    public void setMultipleItems_editedItemsHasDifferentIdentity_success() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"derekjxtan"},"content":"        uniqueAppointmentList.add(APPOINTMENT_6);","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"derekjxtan"},"content":"        uniqueAppointmentList.add(APPOINTMENT_6_DIFFERENT_TIME);","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"derekjxtan"},"content":"        uniqueAppointmentList.add(APPOINTMENT_1);","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"derekjxtan"},"content":"        uniqueAppointmentList.setMultipleItems(","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"derekjxtan"},"content":"                appointment -\u003e appointment.getDoctorNric().equals(new Nric(ALICE_NRIC)),","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"derekjxtan"},"content":"                unchecked(appointment -\u003e new Appointment(","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"derekjxtan"},"content":"                        new Nric(CARL_NRIC),","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"derekjxtan"},"content":"                        appointment.getPatientNric(),","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"derekjxtan"},"content":"                        appointment.getStartTime(),","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"derekjxtan"},"content":"                        appointment.getEndTime(),","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"derekjxtan"},"content":"                        appointment.getRemark(),","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"derekjxtan"},"content":"                        appointment.getTags()","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"derekjxtan"},"content":"                ))","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"derekjxtan"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"derekjxtan"},"content":"        // appointment list no longer has appointments with alice as doctor nric","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniqueAppointmentList.contains(","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"derekjxtan"},"content":"                appointment -\u003e appointment.getDoctorNric().equals(new Nric(ALICE_NRIC))));","lastModifiedDate":"2023-10-23"},{"lineNumber":183,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"derekjxtan"},"content":"        // appointments have been changed to the correct doctor nric","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniqueAppointmentList.contains(","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"derekjxtan"},"content":"                appointment -\u003e appointment.getDoctorNric().equals(new Nric(CARL_NRIC))","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"derekjxtan"},"content":"        ));","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"derekjxtan"},"content":"        // other appointments are not edited","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniqueAppointmentList.contains(","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"derekjxtan"},"content":"                appointment -\u003e appointment.getDoctorNric().equals(new Nric(BENSON_NRIC))","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"derekjxtan"},"content":"        ));","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"derekjxtan"},"content":"        // appointment with patient nric as the changed doctor nric are unchanged","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniqueAppointmentList.contains(","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"derekjxtan"},"content":"                appointment -\u003e appointment.getPatientNric().equals(new Nric(ALICE_NRIC))));","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"derekjxtan"},"content":"    public void setMultipleItems_transformationThrowsCommandException() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"derekjxtan"},"content":"        uniqueAppointmentList.add(APPOINTMENT_6);","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"derekjxtan"},"content":"        uniqueAppointmentList.add(APPOINTMENT_6_DIFFERENT_TIME);","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(CommandException.class, () -\u003e uniqueAppointmentList.setMultipleItems(","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"derekjxtan"},"content":"                appointment -\u003e appointment.getDoctorNric().equals(new Nric(ALICE_NRIC)),","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"derekjxtan"},"content":"                unchecked(appointment -\u003e new Appointment(","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"derekjxtan"},"content":"                        new Nric(FIONA_NRIC),","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"derekjxtan"},"content":"                        appointment.getPatientNric(),","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"derekjxtan"},"content":"                        appointment.getStartTime(),","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"derekjxtan"},"content":"                        appointment.getEndTime(),","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"derekjxtan"},"content":"                        appointment.getRemark(),","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"derekjxtan"},"content":"                        appointment.getTags()","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"derekjxtan"},"content":"                ))","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"derekjxtan"},"content":"        ));","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":217,"author":{"gitId":"derekjxtan"},"content":"    public void remove_nullItem_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":218,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.remove((Patient) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.remove((Predicate\u003cPatient\u003e) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":221,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":222,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":223,"author":{"gitId":"derekjxtan"},"content":"    public void remove_itemDoesNotExist_throwsItemNotFoundException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":224,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniquePatientList.remove(TypicalPatient.ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":225,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":226,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":227,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":228,"author":{"gitId":"derekjxtan"},"content":"    public void remove_existingItem_removesItem() {","lastModifiedDate":"2023-10-08"},{"lineNumber":229,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":230,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.remove(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":231,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":232,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":233,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":234,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":235,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":236,"author":{"gitId":"derekjxtan"},"content":"    public void setItems_nullUniqueItemList_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":237,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setItems((UniqueItemList\u003cPatient\u003e) null));","lastModifiedDate":"2023-10-08"},{"lineNumber":238,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":239,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":240,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":241,"author":{"gitId":"derekjxtan"},"content":"    public void setItems_uniqueItemList_replacesOwnListWithProvidedUniqueItemList() {","lastModifiedDate":"2023-10-08"},{"lineNumber":242,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":243,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":244,"author":{"gitId":"derekjxtan"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":245,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.setItems(expectedUniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":246,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":247,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":248,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":249,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":250,"author":{"gitId":"derekjxtan"},"content":"    public void setItems_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":251,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setItems((List\u003cPatient\u003e) null));","lastModifiedDate":"2023-10-08"},{"lineNumber":252,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":253,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":254,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":255,"author":{"gitId":"derekjxtan"},"content":"    public void setItems_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-08"},{"lineNumber":256,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":257,"author":{"gitId":"derekjxtan"},"content":"        List\u003cPatient\u003e patientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":258,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.setItems(patientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":259,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":260,"author":{"gitId":"derekjxtan"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":261,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":262,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":263,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":264,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":265,"author":{"gitId":"derekjxtan"},"content":"    public void setItems_listWithDuplicateItems_throwsDuplicateItemException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":266,"author":{"gitId":"derekjxtan"},"content":"        List\u003cPatient\u003e listWithDuplicatePatients \u003d Arrays.asList(TypicalPatient.ALICE, TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":267,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniquePatientList.setItems(listWithDuplicatePatients));","lastModifiedDate":"2023-10-08"},{"lineNumber":268,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":269,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":270,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":271,"author":{"gitId":"derekjxtan"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":272,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-08"},{"lineNumber":273,"author":{"gitId":"derekjxtan"},"content":"                -\u003e uniquePatientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-08"},{"lineNumber":274,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":275,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":276,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":277,"author":{"gitId":"derekjxtan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-08"},{"lineNumber":278,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(uniquePatientList.asUnmodifiableObservableList().toString(), uniquePatientList.toString());","lastModifiedDate":"2023-10-08"},{"lineNumber":279,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":280,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":281,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":282,"author":{"gitId":"derekjxtan"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":283,"author":{"gitId":"derekjxtan"},"content":"        // same object -\u003e return True","lastModifiedDate":"2023-10-19"},{"lineNumber":284,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniquePatientList.equals(uniquePatientList));","lastModifiedDate":"2023-10-19"},{"lineNumber":285,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":286,"author":{"gitId":"derekjxtan"},"content":"        // different type -\u003e return False","lastModifiedDate":"2023-10-19"},{"lineNumber":287,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.equals(5));","lastModifiedDate":"2023-10-19"},{"lineNumber":288,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":289,"author":{"gitId":"derekjxtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":290,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":291,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":292,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":293,"author":{"gitId":"derekjxtan"},"content":"        // different number of patients -\u003e return False","lastModifiedDate":"2023-10-19"},{"lineNumber":294,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.equals(uniquePatientList2));","lastModifiedDate":"2023-10-19"},{"lineNumber":295,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":296,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList2.add(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":297,"author":{"gitId":"derekjxtan"},"content":"        // same patients -\u003e return True","lastModifiedDate":"2023-10-19"},{"lineNumber":298,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniquePatientList.equals(uniquePatientList2));","lastModifiedDate":"2023-10-19"},{"lineNumber":299,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":300,"author":{"gitId":"derekjxtan"},"content":"        // different contents -\u003e return False","lastModifiedDate":"2023-10-19"},{"lineNumber":301,"author":{"gitId":"derekjxtan"},"content":"        uniqueDoctorList.add(TypicalDoctor.ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":302,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.equals(uniqueDoctorList));","lastModifiedDate":"2023-10-19"},{"lineNumber":303,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":304,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yanghengtang":2,"derekjxtan":302}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    private UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    public void setDatabaseFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setDatabaseFilePath(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"        UserPrefs sameUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        differentUserPrefs.setDatabaseFilePath(Paths.get(\"data\", \"addressBook.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(userPrefs.equals(sameUserPrefs));","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(userPrefs.equals(userPrefs));","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(userPrefs.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(userPrefs.equals(5.0f));","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        // different database file path -\u003e return false","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(userPrefs.equals(differentUserPrefs));","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        Path databaseFilePath \u003d Paths.get(\"data\" , \"database.json\");","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        // same value -\u003e return equals","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(userPrefs.hashCode(), Objects.hash(guiSettings, databaseFilePath));","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"yanghengtang":40,"-":22}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentEndTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentEndTimeTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppointmentEndTime(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    public void constructor_invalidAppointmentTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AppointmentEndTime(invalidTime));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEndTime appointmentEndTime \u003d new AppointmentEndTime(\"2023-09-11 16:00\");","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(appointmentEndTime.equals(new AppointmentEndTime(\"2023-09-11 16:00\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(appointmentEndTime.equals(appointmentEndTime));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(appointmentEndTime.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(appointmentEndTime.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(appointmentEndTime.equals(new AppointmentEndTime(\"2023-09-11 04:00\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        AppointmentStartTime appointmentStartTime \u003d new AppointmentStartTime(\"2023-09-11 16:00\");","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(appointmentEndTime.equals(appointmentStartTime));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"mounilsankar":40,"derekjxtan":5}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentEqualDoctorNricPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentEqualDoctorNricPredicateTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"        Nric firstDoctorNric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"        Nric secondDoctorNric \u003d new Nric(BENSON_NRIC);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(firstDoctorNric);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(secondDoctorNric);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(firstDoctorNric);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        // different doctor nric -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"    public void test_appointmentEqualDoctorNric_returnsTrue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        // Matching DoctorNric","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(ALICE_NRIC)","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        // Mixed case Nric","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        predicate \u003d new AppointmentEqualDoctorNricPredicate(new Nric(\"t0123456g\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(\"T0123456G\")","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"    public void test_appointmentDoesNotHaveEqualDoctorNric_returnsFalse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        // Non matching nric","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(BENSON_NRIC)","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"        // nric match patient nric, but does not doctor nric","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        predicate \u003d new AppointmentEqualDoctorNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(BENSON_NRIC)","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(ALICE_NRIC)","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"        Nric nric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate predicate \u003d new AppointmentEqualDoctorNricPredicate(nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"        String expected \u003d AppointmentEqualDoctorNricPredicate.class.getCanonicalName() + \"{nric\u003d\" + nric + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"mounilsankar":82,"derekjxtan":2,"cheeggered":1}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentEqualPatientNricPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentEqualPatientNricPredicateTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"        Nric firstPatientNric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"        Nric secondPatientNric \u003d new Nric(BENSON_NRIC);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(firstPatientNric);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(secondPatientNric);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(firstPatientNric);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        // different patient nric -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"    public void test_appointmentEqualPatientNric_returnsTrue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        // Matching Patient Nric","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(new Nric(BENSON_NRIC));","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(BENSON_NRIC)","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"        // Mixed case Nric","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        predicate \u003d new AppointmentEqualPatientNricPredicate(new Nric(\"t0123456g\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(\"T0123456G\")","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"    public void test_appointmentDoesNotHaveEqualPatientNric_returnsFalse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        // Non matching nric","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(BENSON_NRIC)","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"        // nric match doctor nric, but does not matching patient nric","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"        predicate \u003d new AppointmentEqualPatientNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(BENSON_NRIC)","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(ALICE_NRIC)","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"        Nric nric \u003d new Nric(ALICE_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate predicate \u003d new AppointmentEqualPatientNricPredicate(nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"        String expected \u003d AppointmentEqualPatientNricPredicate.class.getCanonicalName() + \"{nric\u003d\" + nric + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"mounilsankar":82,"derekjxtan":2,"cheeggered":1}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentFilterByNricPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.CARL_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.DANIEL_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentFilterByNricPredicateTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e firstPatientNric \u003d new AppointmentEqualPatientNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e firstDoctorNric \u003d new AppointmentEqualDoctorNricPredicate(new Nric(BENSON_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e secondPatientNric \u003d new AppointmentEqualPatientNricPredicate(new Nric(CARL_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e secondDoctorNric \u003d new AppointmentEqualDoctorNricPredicate(new Nric(DANIEL_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(firstPatientNric, firstDoctorNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(secondPatientNric, secondDoctorNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(firstPatientNric, firstDoctorNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"        // different values in predicates -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"        // same patient predicate but different doctor predicate -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate thirdPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(firstPatientNric, secondDoctorNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(thirdPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"        // same doctor predicate but different patient predicate -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate fourthPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(secondPatientNric, firstDoctorNric);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(firstPredicate.equals(fourthPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"    public void test_appointmentEqualPatientandDoctorNric_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"        // Matching Patient Nric","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate doctorPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(new Nric(BENSON_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(ALICE_NRIC)","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(BENSON_NRIC)","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"    public void test_appointmentDoesNotHaveEqualPatientNric_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualPatientNricPredicate patientPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualPatientNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEqualDoctorNricPredicate doctorPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentEqualDoctorNricPredicate(new Nric(BENSON_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"                new AppointmentFilterByNricPredicate(patientPredicate, doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"        // Non-matching  patient nric","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(CARL_NRIC)","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(BENSON_NRIC)","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        // Non-matching  doctor nric","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(ALICE_NRIC)","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(CARL_NRIC)","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"        // Non-matching doctor and patient nric","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(predicate.test(new AppointmentBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"                .withPatientNric(CARL_NRIC)","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"                .withDoctorNric(DANIEL_NRIC)","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e patientPredicate \u003d new AppointmentEqualPatientNricPredicate(new Nric(ALICE_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"        Predicate\u003cAppointment\u003e doctorPredicate \u003d new AppointmentEqualDoctorNricPredicate(new Nric(BENSON_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"        AppointmentFilterByNricPredicate predicate \u003d new AppointmentFilterByNricPredicate(patientPredicate,","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"                doctorPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"        String expected \u003d AppointmentFilterByNricPredicate.class.getCanonicalName()","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"                + \"{patientPredicate\u003d\" + patientPredicate","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"                + \", doctorPredicate\u003d\" + doctorPredicate","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"                + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"mounilsankar":113,"derekjxtan":4}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentStartTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"public class AppointmentStartTimeTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppointmentStartTime(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AppointmentStartTime(invalidTime));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        AppointmentStartTime appointmentStartTime \u003d new AppointmentStartTime(\"2023-09-11 16:00\");","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(appointmentStartTime.equals(new AppointmentStartTime(\"2023-09-11 16:00\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(appointmentStartTime.equals(appointmentStartTime));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(appointmentStartTime.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(appointmentStartTime.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(appointmentStartTime.equals(new AppointmentStartTime(\"2023-09-11 04:00\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        AppointmentEndTime appointmentEndTime \u003d new AppointmentEndTime(\"2023-09-11 16:00\");","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(appointmentStartTime.equals(appointmentEndTime));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"mounilsankar":39,"derekjxtan":6}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.model.appointment.AppointmentStartTime.DATE_TIME_INPUT_FORMATTER;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_1;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_1_WITH_REMARKS;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_2;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"public class AppointmentTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    public void appointmentConsturctor() {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"        //same patient and doctor nric","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        Nric duplicateNric \u003d new Nric(VALID_NRIC_AMY);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        AppointmentStartTime startTime \u003d new AppointmentStartTime(VALID_APPOINTMENT_START_TIME);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEndTime endTime \u003d new AppointmentEndTime(VALID_APPOINTMENT_END_TIME);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        assertThrows(CommandException.class, () -\u003e new Appointment(duplicateNric, duplicateNric, startTime, endTime));","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        //swapped end time and start time","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        Nric patientNric \u003d new Nric(VALID_NRIC_AMY);","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        Nric doctorNric \u003d new Nric(VALID_NRIC_BOB);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"        AppointmentStartTime startTime2 \u003d new AppointmentStartTime(VALID_APPOINTMENT_END_TIME);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        AppointmentEndTime endTime2 \u003d new AppointmentEndTime(VALID_APPOINTMENT_START_TIME);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"        assertThrows(CommandException.class, () -\u003e new Appointment(patientNric, doctorNric, startTime2, endTime2));","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"    public void isSame() {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(APPOINTMENT_1.isSame(APPOINTMENT_1));","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(APPOINTMENT_1.isSame(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        // different Doctor NRIC -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(APPOINTMENT_1.isSame(new AppointmentBuilder(APPOINTMENT_1)","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"                .withDoctorNric(VALID_NRIC_AMY).build()));","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        // different Patient NRIC -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(APPOINTMENT_1.isSame(new AppointmentBuilder(APPOINTMENT_1)","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"                .withPatientNric(VALID_NRIC_BOB).build()));","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        // different Date Time -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(APPOINTMENT_1.isSame(new AppointmentBuilder(APPOINTMENT_1)","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 07:00\").build()));","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        // same appointment with remarks and tags -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(APPOINTMENT_1.isSame(APPOINTMENT_1_WITH_REMARKS));","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"        Appointment appointmentCopy \u003d new AppointmentBuilder(APPOINTMENT_1).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(APPOINTMENT_1.equals(appointmentCopy));","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(APPOINTMENT_1.equals(APPOINTMENT_1));","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(APPOINTMENT_1.equals(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(APPOINTMENT_1.equals(5.0));","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(APPOINTMENT_1.equals(APPOINTMENT_2));","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"        // different Doctor NRIC -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(APPOINTMENT_1).withDoctorNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(APPOINTMENT_1.equals(editedAppointment));","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"        // different Patient NRIC -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"        editedAppointment \u003d new AppointmentBuilder(APPOINTMENT_1).withPatientNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(APPOINTMENT_1.equals(editedAppointment));","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"mounilsankar"},"content":"        // different startTime -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"mounilsankar"},"content":"        editedAppointment \u003d new AppointmentBuilder(APPOINTMENT_1).withStartTime(\"2023-09-11 07:00\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(APPOINTMENT_1.equals(editedAppointment));","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"mounilsankar"},"content":"        // different endTime -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"mounilsankar"},"content":"        editedAppointment \u003d new AppointmentBuilder(APPOINTMENT_1).withEndTime(\"2023-12-01 12:00\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(APPOINTMENT_1.equals(editedAppointment));","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"    public void withinInterval() {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"        LocalDateTime withinInterval \u003d LocalDateTime.parse(\"2023-09-11 07:45\", DATE_TIME_INPUT_FORMATTER);","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"        LocalDateTime outsideInterval \u003d LocalDateTime.parse(\"2023-09-11 08:45\", DATE_TIME_INPUT_FORMATTER);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"mounilsankar"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(\"2023-09-11 07:30\", DATE_TIME_INPUT_FORMATTER);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"        LocalDateTime endTime \u003d LocalDateTime.parse(\"2023-09-11 08:00\", DATE_TIME_INPUT_FORMATTER);","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"        //time within interval","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(APPOINTMENT_1.withinInterval(withinInterval));","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"        //time outside interval","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(APPOINTMENT_1.withinInterval(outsideInterval));","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"mounilsankar"},"content":"        //time equal to start time","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(APPOINTMENT_1.withinInterval(startTime));","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"mounilsankar"},"content":"        //time equal to end time","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(APPOINTMENT_1.withinInterval(endTime));","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"mounilsankar"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"mounilsankar"},"content":"    public void overlaps() {","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"mounilsankar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"mounilsankar"},"content":"        Appointment appointmentCopy \u003d new AppointmentBuilder(APPOINTMENT_1).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(APPOINTMENT_1.overlaps(appointmentCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"mounilsankar"},"content":"        //startTime within interval but end time not","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(APPOINTMENT_1.overlaps(new AppointmentBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 07:45\")","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 08:45\")","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"mounilsankar"},"content":"        //endTime within interval but start time not","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(APPOINTMENT_1.overlaps(new AppointmentBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 07:15\")","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 07:45\")","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"mounilsankar"},"content":"        //endTime within interval but start time not","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(APPOINTMENT_1.overlaps(new AppointmentBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 07:30\")","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 08:15\")","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"mounilsankar"},"content":"        //Both startTime and endTime within interval","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(APPOINTMENT_1.overlaps(new AppointmentBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 07:40\")","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 07:50\")","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"mounilsankar"},"content":"        //both start and end time not within interval but appointment is contained within the other","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"mounilsankar"},"content":"        assertTrue(APPOINTMENT_1.overlaps(new AppointmentBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 07:15\")","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 08:45\")","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"mounilsankar"},"content":"        // no overlap","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"mounilsankar"},"content":"        assertFalse(APPOINTMENT_1.overlaps(new AppointmentBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"mounilsankar"},"content":"                .withStartTime(\"2023-09-11 08:15\")","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"mounilsankar"},"content":"                .withEndTime(\"2023-09-11 08:45\")","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"mounilsankar"},"content":"                .build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"yanghengtang"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-10"},{"lineNumber":168,"author":{"gitId":"yanghengtang"},"content":"        String expected \u003d Appointment.class.getCanonicalName() + \"{doctorNric\u003d\" + APPOINTMENT_1.getDoctorNric()","lastModifiedDate":"2023-10-10"},{"lineNumber":169,"author":{"gitId":"yanghengtang"},"content":"                + \", patientNric\u003d\" + APPOINTMENT_1.getPatientNric()","lastModifiedDate":"2023-10-10"},{"lineNumber":170,"author":{"gitId":"mounilsankar"},"content":"                + \", startTime\u003d\" + APPOINTMENT_1.getStartTime()","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"mounilsankar"},"content":"                + \", endTime\u003d\" + APPOINTMENT_1.getEndTime()","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"mounilsankar"},"content":"                + \", remark\u003d\" + APPOINTMENT_1.getRemark()","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"mounilsankar"},"content":"                + \", prescriptions\u003d\" + APPOINTMENT_1.getTags()","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"mounilsankar"},"content":"                + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(expected, APPOINTMENT_1.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":176,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":177,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"yanghengtang":70,"mounilsankar":101,"derekjxtan":6}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public class AppointmentTimeTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    public static final LocalDateTime VALID_TIME \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"            LocalDateTime.of(2023, 10, 16, 20, 30);","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    public static final LocalDateTime VALID_TIME_2 \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"            LocalDateTime.of(2023, 10, 17, 20, 30);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    public static final String VALID_TIME_STRING \u003d \"2023-10-16 20:30\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    public static final String VALID_TIME_STRING_2 \u003d \"2023-10-17 20:30\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    public static final String INVALID_TIME_STRING \u003d \"2023-10-16 2030\";","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    public static final String MESSAGE \u003d \"Test Message\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppointmentTimeStub(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    public void getTime() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"        AppointmentTime appointmentTime \u003d new AppointmentTimeStub(VALID_TIME);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(VALID_TIME, appointmentTime.getTime());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        assertNotEquals(LocalDateTime.now(), appointmentTime.getTime());","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    public void isValidAppointmentTime() {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        // null time","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppointmentTime.isValidAppointmentTime(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        // invalid time","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(AppointmentTime.isValidAppointmentTime(\"\")); // empty string","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(AppointmentTime.isValidAppointmentTime(\" \")); // spaces only","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(AppointmentTime.isValidAppointmentTime(\"^*$\")); // not numeric characters","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(AppointmentTime.isValidAppointmentTime(\"12-01-2023 07:30\")); // date in wrong format","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        // valid time","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(AppointmentStartTime.isValidAppointmentTime(\"2023-09-11 08:00\")); // in yyyy-dd-mm HH:mm 24h format","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(AppointmentStartTime.isValidAppointmentTime(\"2023-09-11 16:00\")); // in yyyy-dd-mm HH:mm 24h format","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    public void toString_test() {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        AppointmentTime appointmentTime \u003d new AppointmentTimeStub(VALID_TIME);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(VALID_TIME_STRING, appointmentTime.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        assertNotEquals(INVALID_TIME_STRING, appointmentTime.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        AppointmentTime appointmentTime \u003d new AppointmentTimeStub(VALID_TIME);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(appointmentTime.equals(new AppointmentTimeStub(VALID_TIME)));","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(appointmentTime.equals(appointmentTime));","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(appointmentTime.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(appointmentTime.equals(5.0f));","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(appointmentTime.equals(new AppointmentTimeStub(VALID_TIME_2)));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"    public void parse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"        // null time string -\u003e throws NullPointerException","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppointmentTime.parse(null, MESSAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        // invalid time string -\u003e throws IllegalArgumentException with message","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalArgumentException.class, MESSAGE, () -\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"                AppointmentTime.parse(INVALID_TIME_STRING, MESSAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"        // valid time string -\u003e returns LocalDateTime object","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(VALID_TIME_2, AppointmentTime.parse(VALID_TIME_STRING_2, MESSAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"class AppointmentTimeStub extends AppointmentTime {","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"     * Constructs an {@code AppointmentTime}.","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"     * @param time A valid LocalDateTime time.","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"    public AppointmentTimeStub(LocalDateTime time) {","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"        super(time);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"derekjxtan":102}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsDoctorPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"public class NameContainsKeywordsDoctorPredicateTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"        List\u003cString\u003e firstPredicateDoctorKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"        List\u003cString\u003e secondPredicateDoctorKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"                new NameContainsKeywordsDoctorPredicate(firstPredicateDoctorKeywordList);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"                new NameContainsKeywordsDoctorPredicate(secondPredicateDoctorKeywordList);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"                new NameContainsKeywordsDoctorPredicate(firstPredicateDoctorKeywordList);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        // different doctor -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        // One keyword","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate predicate \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"                new NameContainsKeywordsDoctorPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        predicate \u003d new NameContainsKeywordsDoctorPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        predicate \u003d new NameContainsKeywordsDoctorPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"        predicate \u003d new NameContainsKeywordsDoctorPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate predicate \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"                new NameContainsKeywordsDoctorPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"        predicate \u003d new NameContainsKeywordsDoctorPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"        // Keywords match nric, but does not match name","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"        predicate \u003d new NameContainsKeywordsDoctorPredicate(Arrays.asList(\"G4123573C\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate predicate \u003d new NameContainsKeywordsDoctorPredicate(keywords);","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        String expected \u003d NameContainsKeywordsDoctorPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"        // same value -\u003e return same hashcode","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate command \u003d new NameContainsKeywordsDoctorPredicate(keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        assertEquals(command.hashCode(), Objects.hash(keywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"        //objects are equal should have same hashcode","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate predicate2 \u003d new NameContainsKeywordsDoctorPredicate(keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"        assertEquals(command.hashCode(), predicate2.hashCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"        List\u003cString\u003e nullKeywords \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"        NameContainsKeywordsDoctorPredicate predicate \u003d new NameContainsKeywordsDoctorPredicate(nullKeywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"        // Here, we just want to make sure it doesn\u0027t throw an exception","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"        assertNotNull(predicate.hashCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"kimshitong":111}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPatientPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"public class NameContainsKeywordsPatientPredicateTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        // same value -\u003e return same hashcode","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"        NameContainsKeywordsPatientPredicate predicate \u003d new NameContainsKeywordsPatientPredicate(keywords);","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        assertEquals(predicate.hashCode(), Objects.hash(keywords));","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        List\u003cString\u003e firstPredicatePatientKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        List\u003cString\u003e secondPredicatePatientKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"                new NameContainsKeywordsPatientPredicate(firstPredicatePatientKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"                new NameContainsKeywordsPatientPredicate(secondPredicatePatientKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"                new NameContainsKeywordsPatientPredicate(firstPredicatePatientKeywordList);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"        // One keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate predicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"                new NameContainsKeywordsPatientPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"        predicate \u003d new NameContainsKeywordsPatientPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"        predicate \u003d new NameContainsKeywordsPatientPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"        predicate \u003d new NameContainsKeywordsPatientPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate predicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"                new NameContainsKeywordsPatientPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"        predicate \u003d new NameContainsKeywordsPatientPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"        // Keywords match phone, but does not match name","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        predicate \u003d new NameContainsKeywordsPatientPredicate(Arrays.asList(\"12345\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").withPhone(\"12345\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"        NameContainsKeywordsPatientPredicate predicate \u003d new NameContainsKeywordsPatientPredicate(keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"        String expected \u003d NameContainsKeywordsPatientPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"mounilsankar":2,"cheeggered":96}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"public class NricTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"        String invalidNric \u003d \"\";","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    public void isValidNric() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"        // null NRIC","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"        // invalid NRIC","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"S012345 A\")); // contains space","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"S012^456A\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"S01222456A\")); // too many characters","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"S01456A\")); // too few characters","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"A0123456A\")); // invalid starting character","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"s0123456A\")); // lowercase starting character","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"S0123456a\")); // lowercase end character","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        // valid NRIC","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(Nric.isValidNric(\"S0123456A\")); // starting with S","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(Nric.isValidNric(\"T2414628F\")); // starting with T","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(Nric.isValidNric(\"G1238858J\")); // starting with G","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(Nric.isValidNric(\"F7423926D\")); // starting with F","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(Nric.isValidNric(\"M4812734E\")); // starting with M","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        Nric nric \u003d new Nric(\"S0123456A\");","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(nric.equals(new Nric(\"S0123456A\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(nric.equals(nric));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(nric.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(nric.equals(5.0f));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(nric.equals(new Nric(\"T0987654Z\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"yanghengtang":63}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    private static final Name ALICE_NAME \u003d new Name(PersonUtil.ALICE_NAME);","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    private static final Name BENSON_NAME \u003d new Name(PersonUtil.BENSON_NAME);","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    private static final Nric ALICE_NRIC \u003d new Nric(PersonUtil.ALICE_NRIC);","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    private static final Nric BENSON_NRIC \u003d new Nric(PersonUtil.BENSON_NRIC);","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    private static final PersonStub ALICE \u003d new PersonStub(ALICE_NAME, ALICE_NRIC);","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    private static final PersonStub ALICE_COPY \u003d new PersonStub(ALICE_NAME, ALICE_NRIC);","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    private static final PersonStub BENSON \u003d new PersonStub(BENSON_NAME, BENSON_NRIC);","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    private static final PersonStub ALICE_WITH_BENSON_NRIC \u003d new PersonStub(ALICE_NAME, BENSON_NRIC);","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    private static final PersonStub BENSON_WITH_ALICE_NRIC \u003d new PersonStub(BENSON_NAME, ALICE_NRIC);","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public void getName() {","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(ALICE.getName(), ALICE_NAME);","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        assertNotEquals(BENSON.getName(), ALICE_NAME);","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    public void getNric() {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(ALICE.getNric(), ALICE_NRIC);","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        assertNotEquals(BENSON.getName(), ALICE_NAME);","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    public void isSame() {","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(ALICE.isSame(ALICE));","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(ALICE.isSame(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        // same NRIC, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(ALICE.isSame(BENSON_WITH_ALICE_NRIC));","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        // different NRIC, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(ALICE.isSame(ALICE_WITH_BENSON_NRIC));","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(ALICE.equals(ALICE_COPY));","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(ALICE.equals(BENSON_WITH_ALICE_NRIC));","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(ALICE.equals(ALICE_WITH_BENSON_NRIC));","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"    public void hashode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(ALICE.hashCode(), Objects.hash(","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"                new Name(PersonUtil.ALICE_NAME),","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"                new Nric(PersonUtil.ALICE_NRIC)));","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"class PersonStub extends Person {","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"    public PersonStub(Name name, Nric nric) {","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"        super(name, nric);","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"derekjxtan":49,"-":45}},{"path":"src/test/java/seedu/address/model/person/doctor/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDoctor.ALICE;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDoctor.ALICE_WITH_REMARKS;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDoctor.BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"public class DoctorTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"        Doctor aliceCopy \u003d new DoctorBuilder(ALICE).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        // different NRIC -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        // same NRIC, different remarks -\u003e return true","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(ALICE.isSame(ALICE_WITH_REMARKS));","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        String expected \u003d Doctor.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", nric\u003d\"","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"                + ALICE.getNric() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"                + \", remark\u003d\" + ALICE.getRemark() + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yanghengtang":49,"derekjxtan":6,"kimshitong":2}},{"path":"src/test/java/seedu/address/model/person/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE_WITH_REMARKS;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"public class PatientTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"        Patient aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        // different NRIC -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        // same NRIC, different remarks -\u003e return true","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(ALICE.isSame(ALICE_WITH_REMARKS));","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        String expected \u003d Patient.class.getCanonicalName()","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"                + \"{name\u003d\" + ALICE_WITH_REMARKS.getName()","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"                + \", phone\u003d\" + ALICE_WITH_REMARKS.getPhone()","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"                + \", nric\u003d\" + ALICE_WITH_REMARKS.getNric()","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"                + \", remark\u003d\" + ALICE_WITH_REMARKS.getRemark()","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"                + \", conditions\u003d\" + ALICE_WITH_REMARKS.getTags()","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"                + \"}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        assertEquals(expected, ALICE_WITH_REMARKS.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"yanghengtang":53,"derekjxtan":6,"cheeggered":8}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.storage.JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.APPOINTMENT_1;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.BENSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"public class JsonAdaptedAppointmentTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    private static final String INVALID_NRIC \u003d \"X0123456L\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    private static final String INVALID_DATETIME \u003d \"06-09-2023T25:30\";","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_START_TIME \u003d \"2023-10-13 20:30\";","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_END_TIME \u003d \"2023-10-13 22:30\";","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_REMARK \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_validAppointmentDetails_returnsAppointment() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(APPOINTMENT_1);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(APPOINTMENT_1, appointment.toModelType());","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"        // invalid doctor nric","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"                new JsonAdaptedAppointment(INVALID_NRIC, VALID_NRIC, VALID_START_TIME, VALID_END_TIME,","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        // invalid patient nric","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, INVALID_NRIC, VALID_START_TIME, VALID_END_TIME,","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        // invalid doctor nric and patient nric","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        appointment \u003d new JsonAdaptedAppointment(INVALID_NRIC, INVALID_NRIC, VALID_START_TIME, VALID_END_TIME,","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        // doctor nric is null","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"                new JsonAdaptedAppointment(null, VALID_NRIC, VALID_START_TIME, VALID_END_TIME,","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        // patient nric is null","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"        appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, null, VALID_START_TIME, VALID_END_TIME,","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        // doctor and patient nric is null","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        appointment \u003d new JsonAdaptedAppointment(null, null, VALID_START_TIME,","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"                VALID_END_TIME, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidStartTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"                new JsonAdaptedAppointment(VALID_NRIC, VALID_NRIC, INVALID_DATETIME, VALID_END_TIME,","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, AppointmentStartTime.MESSAGE_CONSTRAINTS, appointment::toModelType);","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_nullStartTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_NRIC, null,","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"                VALID_END_TIME, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"                AppointmentStartTime.class.getSimpleName());","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidEndTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"                new JsonAdaptedAppointment(VALID_NRIC, VALID_NRIC, VALID_START_TIME, INVALID_DATETIME,","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, AppointmentEndTime.MESSAGE_CONSTRAINTS, appointment::toModelType);","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_NRIC, VALID_START_TIME,","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"                null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, AppointmentEndTime.class.getSimpleName());","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":107}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedDataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.model.DataTest.DEPRESSION_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.model.DataTest.PEDIATRICIAN_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.model.DataTest.VALID_REMARK;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.model.DataTest.VALID_REMARK_STRING;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Data;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"public class JsonAdaptedDataTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public static final JsonAdaptedTag TAG1 \u003d new JsonAdaptedTag(DEPRESSION_TAG);","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    public static final JsonAdaptedTag TAG2 \u003d new JsonAdaptedTag(PEDIATRICIAN_TAG);","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    public static final JsonAdaptedTag INVALID_TAG \u003d new JsonAdaptedTag(\"%$#\");","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    public static final List\u003cJsonAdaptedTag\u003e TAG_LIST \u003d new ArrayList\u003c\u003e(Arrays.asList(TAG1, TAG2));","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    public static final Set\u003cTag\u003e TAG_HASHSET \u003d new HashSet\u003c\u003e(Arrays.asList(PEDIATRICIAN_TAG, DEPRESSION_TAG));","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    public static final List\u003cJsonAdaptedTag\u003e INVALID_TAG_LIST \u003d new ArrayList\u003c\u003e(Arrays.asList(TAG1, TAG2, INVALID_TAG));","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public void getModelRemark_validRemarks_returnsRemark() throws IllegalValueException {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedDataStub data \u003d new JsonAdaptedDataStub(VALID_REMARK_STRING, TAG_LIST);","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(data.getModelRemark(), VALID_REMARK);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    public void getModelRemark_nullRemarks_throwsIllegalValueException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedDataStub data \u003d new JsonAdaptedDataStub(null, TAG_LIST);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        String msg \u003d String.format(JsonAdaptedData.MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, () -\u003e data.getModelRemark(), msg);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    public void getModelTags_validTags_returnsTagsHashSet() throws IllegalValueException {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedDataStub data \u003d new JsonAdaptedDataStub(VALID_REMARK_STRING, TAG_LIST);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(data.getModelTags(), TAG_HASHSET);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    public void getModelTags_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedDataStub data \u003d new JsonAdaptedDataStub(VALID_REMARK_STRING, INVALID_TAG_LIST);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        String msg \u003d Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, () -\u003e data.getModelTags(), msg);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"class JsonAdaptedDataStub extends JsonAdaptedData {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedDataStub(String remark, List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        super(remark, tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"    public JsonAdaptedDataStub(Data source) {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        super(source);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"derekjxtan":65}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedDoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.storage.JsonAdaptedDoctor.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDoctor.BENSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"public class JsonAdaptedDoctorTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    private static final String INVALID_NRIC \u003d \"X0123456L\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_REMARK \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_validDoctorDetails_returnsDoctor() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(BENSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(BENSON, doctor.toModelType());","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedDoctor doctor \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"                new JsonAdaptedDoctor(INVALID_NRIC, VALID_NAME, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(null, VALID_NAME, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedDoctor doctor \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"                new JsonAdaptedDoctor(VALID_NRIC, INVALID_NAME, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(VALID_NRIC, null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":61}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.storage.JsonAdaptedPatient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.BENSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    private static final String INVALID_NRIC \u003d \"X0123456L\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    private static final String VALID_REMARK \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_validPatientDetails_returnsPatient() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(BENSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(BENSON, patient.toModelType());","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"                new JsonAdaptedPatient(INVALID_NRIC, VALID_NAME, VALID_PHONE, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(null, VALID_NAME, VALID_PHONE, VALID_REMARK,","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"                new JsonAdaptedPatient(VALID_NRIC, INVALID_NAME, VALID_PHONE, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NRIC, null, VALID_PHONE, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"                new JsonAdaptedPatient(VALID_NRIC, VALID_NAME, INVALID_PHONE, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NRIC, VALID_NAME, null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":81}},{"path":"src/test/java/seedu/address/storage/JsonDatabaseStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.HOON;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.IDA;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"public class JsonDatabaseStorageTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonDatabaseStorageTest\");","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    @TempDir","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    public void readDatabase_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e readDatabase(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    private java.util.Optional\u003cReadOnlyDatabase\u003e readDatabase(String filePath) throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        return new JsonDatabaseStorage(Paths.get(filePath)).readDatabase(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"                : null;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(readDatabase(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDatabase(\"notJsonFormatDatabase.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    public void readDatabase_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDatabase(\"invalidPatientDatabase.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDatabase(\"invalidDoctorDatabase.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDatabase(\"invalidAppointmentDatabase.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDatabase(\"invalidAndValidPatientDatabase.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDatabase(\"invalidAndValidDoctorDatabase.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDatabase(\"invalidAndValidAppointmentDatabase.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"    public void readAndSaveDatabase_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        Path filePath \u003d testFolder.resolve(\"TempDatabase.json\");","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        Database original \u003d getTypicalDatabase();","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"        JsonDatabaseStorage jsonDatabaseStorage \u003d new JsonDatabaseStorage(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"        jsonDatabaseStorage.saveDatabase(original, filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"        ReadOnlyDatabase readBack \u003d jsonDatabaseStorage.readDatabase(filePath).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        original.addPatient(HOON);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"        original.removePatient(ALICE);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"        jsonDatabaseStorage.saveDatabase(original, filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"        readBack \u003d jsonDatabaseStorage.readDatabase(filePath).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"        original.addPatient(IDA);","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"        jsonDatabaseStorage.saveDatabase(original); // file path not specified","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"        readBack \u003d jsonDatabaseStorage.readDatabase().get(); // file path not specified","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"    public void saveDatabase_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDatabase(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"    private void saveDatabase(ReadOnlyDatabase database, String filePath) {","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"            new JsonDatabaseStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"                    .saveDatabase(database, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"derekjxtan"},"content":"    public void saveDatabase_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDatabase(new Database(), null));","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":114}},{"path":"src/test/java/seedu/address/storage/JsonSerializableDatabaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.TypicalDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"public class JsonSerializableDatabaseTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableDatabaseTest\");","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    private static final Path TYPICAL_DATABASE_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalDatabase.json\");","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    private static final Path INVALID_PATIENTS_DATABASE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPatientDatabase.json\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    private static final Path DUPLICATE_PATIENTS_DATABASE_FILE \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicatePatientDatabase.json\");","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    private static final Path INVALID_DOCTORS_DATABASE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidDoctorDatabase.json\");","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    private static final Path DUPLICATE_DOCTORS_DATABASE_FILE \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateDoctorDatabase.json\");","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    private static final Path INVALID_APPOINTMENTS_DATABASE_FILE \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"            TEST_DATA_FOLDER.resolve(\"invalidAppointmentDatabase.json\");","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    private static final Path DUPLICATE_APPOINTMENTS_DATABASE_FILE \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateAppointmentDatabase.json\");","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_typicalDatabaseFile_success() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_DATABASE_FILE,","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"        Database databaseFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        Database typicalDatabase \u003d TypicalDatabase.getTypicalDatabase();","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(databaseFromFile, typicalDatabase);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidPatientsFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PATIENTS_DATABASE_FILE,","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_duplicatePatients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PATIENTS_DATABASE_FILE,","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableDatabase.MESSAGE_DUPLICATE_PATIENT,","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidDoctorsFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(INVALID_DOCTORS_DATABASE_FILE,","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_duplicateDoctors_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_DOCTORS_DATABASE_FILE,","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableDatabase.MESSAGE_DUPLICATE_DOCTOR,","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_invalidAppointmentsFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(INVALID_APPOINTMENTS_DATABASE_FILE,","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"    public void toModelType_duplicateAppointments_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_APPOINTMENTS_DATABASE_FILE,","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableDatabase.MESSAGE_DUPLICATE_APPOINTMENT,","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":84}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"data/database.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"yanghengtang":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDatabase.getTypicalDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.ReadOnlyDatabase;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        JsonDatabaseStorage databaseStorage \u003d new JsonDatabaseStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        storageManager \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"    public void databaseReadSave() throws Exception {","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"         * {@link JsonDatabaseStorage} class.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonDatabaseStorageTest} class.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        Database original \u003d getTypicalDatabase();","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"        storageManager.saveDatabase(original);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        ReadOnlyDatabase retrieved \u003d storageManager.readDatabase().get();","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(original, new Database(retrieved));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"    public void getDatabaseFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"        assertNotNull(storageManager.getDatabaseFilePath());","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"    public void getUserPrefsFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"        assertNotNull(storageManager.getUserPrefsFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yanghengtang":6,"derekjxtan":13,"-":54}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import static seedu.address.testutil.PersonUtil.DANIEL_NRIC;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    public static final String DEFAULT_DOCTOR_NRIC \u003d ALICE_NRIC;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    public static final String DEFAULT_PATIENT_NRIC \u003d DANIEL_NRIC;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    public static final String DEFAULT_START_TIME \u003d \"2023-09-15 07:30\";","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    public static final String DEFAULT_END_TIME \u003d \"2023-09-15 08:00\";","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    private Nric doctorNric;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    private Nric patientNric;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    private AppointmentStartTime startTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    private AppointmentEndTime endTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    private HashSet\u003cTag\u003e tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        doctorNric \u003d new Nric(DEFAULT_DOCTOR_NRIC);","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        patientNric \u003d new Nric(DEFAULT_PATIENT_NRIC);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        startTime \u003d new AppointmentStartTime(DEFAULT_START_TIME);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"        endTime \u003d new AppointmentEndTime(DEFAULT_END_TIME);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"    public AppointmentBuilder(Appointment appointmentToCopy) {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        doctorNric \u003d appointmentToCopy.getDoctorNric();","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        patientNric \u003d appointmentToCopy.getPatientNric();","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"        startTime \u003d appointmentToCopy.getStartTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"        endTime \u003d appointmentToCopy.getEndTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        remark \u003d appointmentToCopy.getRemark();","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        tags \u003d appointmentToCopy.getTags();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code DoctorNRIC} of the {@code Appointment} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"    public AppointmentBuilder withDoctorNric(String doctorNric) {","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        this.doctorNric \u003d new Nric(doctorNric);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code PatientNRIC} of the {@code Appointment} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"    public AppointmentBuilder withPatientNric(String patientNric) {","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"        this.patientNric \u003d new Nric(patientNric);","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"     * Sets the {@code startTime} of the {@code Appointment} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentBuilder withStartTime(String startTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"mounilsankar"},"content":"        this.startTime \u003d new AppointmentStartTime(startTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"mounilsankar"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"mounilsankar"},"content":"     * Sets the {@code endTime} of the {@code Appointment} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"    public AppointmentBuilder withEndTime(String endTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"        this.endTime \u003d new AppointmentEndTime(endTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"     * Sets the {@code remark} of the {@code Appointment} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"    public AppointmentBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"     * Sets the {@code tags} of the {@code Appointment} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"    public AppointmentBuilder withTags(Tag... tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"        HashSet\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e(Arrays.asList(tags));","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"        this.tags \u003d tagSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"mounilsankar"},"content":"     * Creates a new {@code Appointment} object","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"    public Appointment build() {","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"            if (this.remark \u003d\u003d null || this.tags \u003d\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"mounilsankar"},"content":"                return new Appointment(doctorNric, patientNric, startTime, endTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"derekjxtan"},"content":"            return new Appointment(doctorNric, patientNric, startTime, endTime, remark, tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"mounilsankar"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"mounilsankar"},"content":"            throw new AssertionError(\"AppointmentBuilder contains invalid fields\");","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"yanghengtang":53,"derekjxtan":29,"mounilsankar":34}},{"path":"src/test/java/seedu/address/testutil/AppointmentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":" * A utility class for Appointment.","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"public class AppointmentUtil {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"     * Returns an add appointment command string for adding the {@code appointment}.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    public static String getAddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"        return AddAppointmentCommand.COMMAND_WORD + \" \" + getAppointmentDetails(appointment);","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"     * Returns the part of command string for the given {@code appointment}\u0027s details.","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    public static String getAppointmentDetails(Appointment appointment) {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        sb.append(PREFIX_PATIENT_NRIC + appointment.getPatientNric().toString() + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        sb.append(PREFIX_DOCTOR_NRIC + appointment.getDoctorNric().toString() + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        sb.append(PREFIX_APPOINTMENT_START_TIME + appointment.getStartTime().toString() + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        sb.append(PREFIX_APPOINTMENT_END_TIME + appointment.getEndTime().toString() + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yanghengtang":35}},{"path":"src/test/java/seedu/address/testutil/DoctorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":" * A utility class to help with building Doctor objects.","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"public class DoctorBuilder {","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0123456A\";","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    private Name name;","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    private Nric nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    private HashSet\u003cTag\u003e tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code DoctorBuilder} with the default details.","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    public DoctorBuilder() {","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"     * Initializes the DoctorBuilder with the data of {@code doctorToCopy}.","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    public DoctorBuilder(Doctor doctorToCopy) {","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        name \u003d doctorToCopy.getName();","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        nric \u003d doctorToCopy.getNric();","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        remark \u003d doctorToCopy.getRemark();","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"        tags \u003d doctorToCopy.getTags();","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code Name} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"    public DoctorBuilder withName(String name) {","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code Nric} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"    public DoctorBuilder withNric(String nric) {","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"     * Sets the {@code remark} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"    public DoctorBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"     * Sets the {@code tags} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"    public DoctorBuilder withTags(Tag... tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        HashSet\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e(Arrays.asList(tags));","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"        this.tags \u003d tagSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"     * Builds a {@code Doctor} with the same attributes.","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"    public Doctor build() {","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        if (this.remark \u003d\u003d null || this.tags \u003d\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"            return new Doctor(name, nric);","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"        return new Doctor(name, nric, remark, tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yanghengtang":51,"derekjxtan":33}},{"path":"src/test/java/seedu/address/testutil/DoctorUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":" * A utility class for Person.","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"public class DoctorUtil {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"     * Returns an add doctor command string for adding the {@code doctor}.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    public static String getAddDoctorCommand(Doctor doctor) {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"        return AddDoctorCommand.COMMAND_WORD + \" \" + getDoctorDetails(doctor);","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     * Returns an add patient command string for adding the {@code patient}.","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    public static String getDeleteDoctorCommand(Index index) {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        return DeleteDoctorCommand.COMMAND_WORD + \" \" + index.toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"     * Returns the part of command string for the given {@code doctor}\u0027s details.","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    public static String getDoctorDetails(Doctor doctor) {","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        sb.append(PREFIX_NRIC + doctor.getNric().toString() + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        sb.append(PREFIX_NAME + doctor.getName().toString() + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"     * Returns the part of command string for the given {@code EditDoctorDescriptor}\u0027s details.","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"    public static String getEditDoctorDescriptorDetails(EditDoctorDescriptor descriptor) {","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        descriptor.getNric().ifPresent(nric -\u003e sb.append(PREFIX_NRIC).append(nric.nric).append(\" \"));","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yanghengtang":51}},{"path":"src/test/java/seedu/address/testutil/EditAppointmentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentEndTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.appointment.AppointmentStartTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":" * A utility class to help with building EditAppointmentDescriptor objects.","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"public class EditAppointmentDescriptorBuilder {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    private EditAppointmentDescriptor descriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    public EditAppointmentDescriptorBuilder() {","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    public EditAppointmentDescriptorBuilder(EditAppointmentDescriptor descriptor) {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"        this.descriptor \u003d new EditAppointmentDescriptor(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"     * Returns an {@code EditAppointmentDescriptor} with fields containing {@code Appointment}\u0027s details","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    public EditAppointmentDescriptorBuilder(Appointment appointment) {","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        descriptor.setPatientNric(appointment.getPatientNric());","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        descriptor.setDoctorNric(appointment.getDoctorNric());","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"        descriptor.setAppointmentStartTime(appointment.getStartTime());","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        descriptor.setAppointmentEndTime(appointment.getEndTime());","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"     * Sets the patientNric of the {@code EditAppointmentDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"    public EditAppointmentDescriptorBuilder withPatientNric(String nric) {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"        descriptor.setPatientNric(new Nric(nric));","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"     * Sets the e doctorNric of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"    public EditAppointmentDescriptorBuilder withDoctorNric(String nric) {","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"        descriptor.setDoctorNric(new Nric(nric));","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"     * Sets the {@code AppointmentStartTIme} of the {@code EditAppointmentDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"    public EditAppointmentDescriptorBuilder withStartTime(String startTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"        descriptor.setAppointmentStartTime(new AppointmentStartTime(startTime));","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"mounilsankar"},"content":"     * Sets the {@code AppointmentEndTIme} of the {@code EditAppointmentDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"    public EditAppointmentDescriptorBuilder withEndTime(String endTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"        descriptor.setAppointmentEndTime(new AppointmentEndTime(endTime));","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"    public EditAppointmentDescriptor build() {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"        return descriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"mounilsankar":70}},{"path":"src/test/java/seedu/address/testutil/EditDoctorDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"public class EditDoctorDescriptorBuilder {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"    private EditDoctorDescriptor descriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    public EditDoctorDescriptorBuilder() {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"        descriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    public EditDoctorDescriptorBuilder(EditDoctorDescriptor descriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"        this.descriptor \u003d new EditDoctorDescriptor(descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    public EditDoctorDescriptorBuilder(Doctor doctor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"        descriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"        descriptor.setName(doctor.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"        descriptor.setNric(doctor.getNric());","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    public EditDoctorDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    public EditDoctorDescriptorBuilder withNric(String nric) {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        descriptor.setNric(new Nric(nric));","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    public EditDoctorDescriptor build() {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        return descriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"kimshitong":51}},{"path":"src/test/java/seedu/address/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"public class EditPatientDescriptorBuilder {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    private EditPatientDescriptor descriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        this.descriptor \u003d new EditPatientDescriptor(descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code patient}\u0027s details","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        descriptor.setName(patient.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        descriptor.setNric(patient.getNric());","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"     * Sets the {@code Name} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    public EditPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"     * Sets the {@code Phone} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    public EditPatientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"     * Sets the {@code Nric} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"    public EditPatientDescriptorBuilder withNric(String nric) {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        descriptor.setNric(new Nric(nric));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"    public EditPatientDescriptor build() {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        return descriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"cheeggered":61}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public class PatientBuilder {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0123456A\";","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    private Name name;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    private Nric nric;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    private HashSet\u003cTag\u003e tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        nric \u003d patientToCopy.getNric();","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        remark \u003d patientToCopy.getRemark();","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        tags \u003d patientToCopy.getTags();","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code Nric} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"    public PatientBuilder withNric(String nric) {","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"     * Sets the {@code remark} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"    public PatientBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"     * Sets the {@code tags} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"    public PatientBuilder withTags(Tag... tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"        HashSet\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e(Arrays.asList(tags));","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        this.tags \u003d tagSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"     * Builds a {@code Patient} with the same attributes.","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    public Patient build() {","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"        if (this.remark \u003d\u003d null || this.tags \u003d\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"            return new Patient(name, phone, nric);","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"        return new Patient(name, phone, nric, remark, tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"yanghengtang":64,"derekjxtan":33}},{"path":"src/test/java/seedu/address/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":" * A utility class for Patient.","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"public class PatientUtil {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"     * Returns an add patient command string for adding the {@code patient}.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    public static String getAddPatientCommand(Patient patient) {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"        return AddPatientCommand.COMMAND_WORD + \" \" + getPatientDetails(patient);","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        sb.append(PREFIX_NRIC + patient.getNric().toString() + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        sb.append(PREFIX_NAME + patient.getName().toString() + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().toString() + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"     * Returns the part of command string for the given {@code descriptor}\u0027s details.","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        descriptor.getNric().ifPresent(nric -\u003e sb.append(PREFIX_NRIC).append(nric.nric).append(\" \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yanghengtang":33,"mounilsankar":11}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * A utility class containing a list of valid String objects to be used in tests.","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"    public static final String ALICE_NAME \u003d \"Alice Pauline\";","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"    public static final String ALICE_NRIC \u003d \"T0123456J\";","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    public static final String BENSON_NAME \u003d \"Benson Meier\";","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"    public static final String BENSON_NRIC \u003d \"S2936283D\";","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"    public static final String CARL_NAME \u003d \"Carl Kurz\";","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"    public static final String CARL_NRIC \u003d \"T3856391A\";","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"    public static final String DANIEL_NAME \u003d \"Daniel Meier\";","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    public static final String DANIEL_NRIC \u003d \"S9754123F\";","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    public static final String ELLE_NAME \u003d \"Elle Meyer\";","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    public static final String ELLE_NRIC \u003d \"G4123573C\";","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    public static final String FIONA_NAME \u003d \"Fiona Kunz\";","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final String FIONA_NRIC \u003d \"G6739542H\";","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    public static final String GEORGE_NAME \u003d \"George Best\";","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    public static final String GEORGE_NRIC \u003d \"T0359320R\";","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    public static final String HOON_NAME \u003d \"Hoon Meier\";","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    public static final String HOON_NRIC \u003d \"T0248362R\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    public static final String IDA_NAME \u003d \"Ida Mueller\";","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public static final String IDA_NRIC \u003d \"S9348573F\";","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"derekjxtan":19,"-":6}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size() / 2);","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"     * Returns the last index of the person in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"    public static Patient getPatient(Model model, Index index) {","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"        return model.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yanghengtang":7,"-":48}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointment.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_NRIC;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.model.DataTest.PARACETAMOL_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.model.DataTest.PEDIATRICIAN_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.model.DataTest.VALID_REMARK_STRING;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.CARL_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.DANIEL_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ELLE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.FIONA_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":" * A utility class containing a list of {@code Appointment} objects to be used in tests.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"public class TypicalAppointment {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    public static final Appointment APPOINTMENT_1 \u003d new AppointmentBuilder().withDoctorNric(BENSON_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"            .withPatientNric(ALICE_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"            .withStartTime(\"2023-09-11 07:30\")","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"            .withEndTime(\"2023-09-11 08:00\")","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    public static final Appointment APPOINTMENT_1_WITH_REMARKS \u003d new AppointmentBuilder().withDoctorNric(BENSON_NRIC)","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"            .withPatientNric(ALICE_NRIC)","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"            .withStartTime(\"2023-09-11 07:30\")","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"            .withEndTime(\"2023-09-11 08:00\")","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"            .withRemark(VALID_REMARK_STRING)","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"            .withTags(PEDIATRICIAN_TAG, PARACETAMOL_TAG)","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"            .build();","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    public static final Appointment APPOINTMENT_2 \u003d new AppointmentBuilder().withDoctorNric(CARL_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"            .withPatientNric(BENSON_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"            .withStartTime(\"2023-09-12 07:30\")","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"            .withEndTime(\"2023-09-12 08:00\")","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"    public static final Appointment APPOINTMENT_3 \u003d new AppointmentBuilder().withDoctorNric(DANIEL_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"            .withPatientNric(CARL_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"            .withStartTime(\"2023-09-11 10:30\")","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"mounilsankar"},"content":"            .withEndTime(\"2023-09-11 11:00\")","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"mounilsankar"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"mounilsankar"},"content":"    public static final Appointment APPOINTMENT_4 \u003d new AppointmentBuilder().withDoctorNric(ELLE_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"mounilsankar"},"content":"            .withPatientNric(DANIEL_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"            .withStartTime(\"2023-09-11 17:30\")","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"mounilsankar"},"content":"            .withEndTime(\"2023-09-11 18:00\")","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"mounilsankar"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"mounilsankar"},"content":"    public static final Appointment APPOINTMENT_5 \u003d new AppointmentBuilder().withDoctorNric(FIONA_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"mounilsankar"},"content":"            .withPatientNric(ELLE_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"mounilsankar"},"content":"            .withStartTime(\"2023-09-11 09:30\")","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"mounilsankar"},"content":"            .withEndTime(\"2023-09-11 10:00\")","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"mounilsankar"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"mounilsankar"},"content":"    public static final Appointment APPOINTMENT_6 \u003d new AppointmentBuilder().withDoctorNric(ALICE_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"mounilsankar"},"content":"            .withPatientNric(FIONA_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"mounilsankar"},"content":"            .withStartTime(\"2023-09-11 13:30\")","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"mounilsankar"},"content":"            .withEndTime(\"2023-09-11 14:00\")","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"mounilsankar"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    public static final Appointment APPOINTMENT_6_DIFFERENT_TIME \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"            .withDoctorNric(ALICE_NRIC)","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"            .withPatientNric(FIONA_NRIC)","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"            .withStartTime(\"2023-09-11 14:00\")","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"            .withEndTime(\"2023-09-11 14:30\")","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"            .build();","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"mounilsankar"},"content":"    // Manually added - Doctor\u0027s and Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"mounilsankar"},"content":"    public static final Appointment APPOINTMENT_7 \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"mounilsankar"},"content":"            .withDoctorNric(VALID_DOCTOR_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"mounilsankar"},"content":"            .withPatientNric(VALID_PATIENT_NRIC)","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"mounilsankar"},"content":"            .withStartTime(VALID_APPOINTMENT_START_TIME)","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"mounilsankar"},"content":"            .withEndTime(VALID_APPOINTMENT_END_TIME)","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"mounilsankar"},"content":"            .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"    public TypicalAppointment() {} // prevents instantiation","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointment() {","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"mounilsankar"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPOINTMENT_1_WITH_REMARKS, APPOINTMENT_2, APPOINTMENT_3, APPOINTMENT_4,","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"                APPOINTMENT_5, APPOINTMENT_6));","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"yanghengtang":28,"derekjxtan":24,"mounilsankar":41}},{"path":"src/test/java/seedu/address/testutil/TypicalDatabase.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalAppointment.getTypicalAppointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalDoctor.getTypicalDoctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalPatient;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":" * A utility class for testing Database.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"public class TypicalDatabase {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"     * Returns an {@code Database} with all the typical patients, doctors and appointments.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    public static Database getTypicalDatabase() {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"        for (Patient patient : getTypicalPatient()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"            db.addPatient(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        for (Doctor doctor : getTypicalDoctor()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"            db.addDoctor(doctor);","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        for (Appointment appointment : getTypicalAppointment()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"            try {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"                db.addAppointment(appointment);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"                throw new AssertionError(\"Invalid appointment in typical database\");","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"        return db;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"derekjxtan":31,"mounilsankar":6}},{"path":"src/test/java/seedu/address/testutil/TypicalDoctor.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import static seedu.address.model.DataTest.DERMATOLOGY_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.model.DataTest.VALID_REMARK_STRING;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ALICE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.BENSON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.CARL_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.CARL_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.DANIEL_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.DANIEL_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ELLE_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.ELLE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.FIONA_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.FIONA_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.GEORGE_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.GEORGE_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.HOON_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.HOON_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.IDA_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.PersonUtil.IDA_NRIC;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"import seedu.address.model.Database;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":" * A utility class containing a list of {@code Doctor} objects to be used in tests.","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"public class TypicalDoctor {","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    public static final Doctor ALICE \u003d new DoctorBuilder().withName(ALICE_NAME)","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"            .withNric(ALICE_NRIC).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    public static final Doctor ALICE_WITH_REMARKS \u003d new DoctorBuilder().withName(ALICE_NAME)","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"            .withNric(ALICE_NRIC).withRemark(VALID_REMARK_STRING).withTags(DERMATOLOGY_TAG).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    public static final Doctor BENSON \u003d new DoctorBuilder().withName(BENSON_NAME)","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"            .withNric(BENSON_NRIC).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"    public static final Doctor CARL \u003d new DoctorBuilder().withName(CARL_NAME)","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"            .withNric(CARL_NRIC).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    public static final Doctor DANIEL \u003d new DoctorBuilder().withName(DANIEL_NAME)","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"            .withNric(DANIEL_NRIC).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    public static final Doctor ELLE \u003d new DoctorBuilder().withName(ELLE_NAME).withNric(ELLE_NRIC).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    public static final Doctor FIONA \u003d new DoctorBuilder().withName(FIONA_NAME).withNric(FIONA_NRIC).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    public static final Doctor GEORGE \u003d new DoctorBuilder().withName(GEORGE_NAME).withNric(GEORGE_NRIC).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    // Manually added","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    public static final Doctor HOON \u003d new DoctorBuilder().withName(HOON_NAME)","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"            .withNric(HOON_NRIC).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    public static final Doctor IDA \u003d new DoctorBuilder().withName(IDA_NAME)","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"            .withNric(IDA_NRIC).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"    // Manually added - Doctor\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor AMY \u003d new DoctorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"            .withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor BOB \u003d new DoctorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"            .withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"    private TypicalDoctor() {} // prevents instantiation","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"    public static List\u003cDoctor\u003e getTypicalDoctor() {","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_WITH_REMARKS, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"    public static Database getTypicalDatabase() {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"        Database ab \u003d new Database();","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"        for (Doctor doctor : getTypicalDoctor()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"            ab.addDoctor(doctor);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"        return ab;","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yanghengtang":33,"derekjxtan":36,"kimshitong":13}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"    public static final Index INDEX_FIRST_DOCTOR \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"    public static final Index INDEX_SECOND_DOCTOR \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    public static final Index INDEX_THIRD_DOCTOR \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":12,"kimshitong":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPatient.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.model.DataTest.DEPRESSION_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.model.DataTest.VALID_REMARK_STRING;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"public class TypicalPatient {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    public static final String ALICE_PHONE \u003d \"94351253\";","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    public static final Patient ALICE \u003d new PatientBuilder().withName(PersonUtil.ALICE_NAME).withPhone(ALICE_PHONE)","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"            .withNric(PersonUtil.ALICE_NRIC).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    public static final Patient ALICE_WITH_REMARKS \u003d new PatientBuilder().withName(PersonUtil.ALICE_NAME)","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"            .withPhone(ALICE_PHONE)","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"            .withNric(PersonUtil.ALICE_NRIC)","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"            .withRemark(VALID_REMARK_STRING)","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"            .withTags(DEPRESSION_TAG)","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"            .build();","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    public static final String BENSON_PHONE \u003d \"98765432\";","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    public static final Patient BENSON \u003d new PatientBuilder().withName(PersonUtil.BENSON_NAME).withPhone(BENSON_PHONE)","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"            .withNric(PersonUtil.BENSON_NRIC).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    public static final String CARL_PHONE \u003d \"95352563\";","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    public static final Patient CARL \u003d new PatientBuilder().withName(PersonUtil.CARL_NAME).withPhone(CARL_PHONE)","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"            .withNric(PersonUtil.CARL_NRIC).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    public static final String DANIEL_PHONE \u003d \"87652533\";","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    public static final Patient DANIEL \u003d new PatientBuilder().withName(PersonUtil.DANIEL_NAME).withPhone(DANIEL_PHONE)","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"            .withNric(PersonUtil.DANIEL_NRIC).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    public static final String ELLE_PHONE \u003d \"9482224\";","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"    public static final Patient ELLE \u003d new PatientBuilder().withName(PersonUtil.ELLE_NAME).withPhone(ELLE_PHONE)","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"            .withNric(PersonUtil.ELLE_NRIC).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    public static final String FIONA_PHONE \u003d \"9482427\";","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    public static final Patient FIONA \u003d new PatientBuilder().withName(PersonUtil.FIONA_NAME).withPhone(FIONA_PHONE)","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"            .withNric(PersonUtil.FIONA_NRIC).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    public static final String GEORGE_PHONE \u003d \"9482442\";","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    public static final Patient GEORGE \u003d new PatientBuilder().withName(PersonUtil.GEORGE_NAME).withPhone(GEORGE_PHONE)","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"            .withNric(PersonUtil.GEORGE_NRIC).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    public static final String HOON_PHONE \u003d \"8482424\";","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"    // Manually added","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"    public static final Patient HOON \u003d new PatientBuilder().withName(PersonUtil.HOON_NAME).withPhone(HOON_PHONE)","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"            .withNric(PersonUtil.HOON_NRIC).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"    public static final String IDA_PHONE \u003d \"8482131\";","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"    public static final Patient IDA \u003d new PatientBuilder().withName(PersonUtil.IDA_NAME).withPhone(IDA_PHONE)","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"            .withNric(PersonUtil.IDA_NRIC).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient AMY \u003d new PatientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"            .withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient BOB \u003d new PatientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"            .withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"    private TypicalPatient() {} // prevents instantiation","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"    public static List\u003cPatient\u003e getTypicalPatient() {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_WITH_REMARKS, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"yanghengtang":35,"derekjxtan":43,"cheeggered":1}}]

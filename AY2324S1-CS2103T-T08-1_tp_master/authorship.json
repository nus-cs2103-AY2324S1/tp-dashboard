[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T08-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"* This is **a project based on a sample project for Software Engineering (SE) students**.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"* It is named `MediConnect` because the target user receptionist at medical facilities.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"* The purpose of `MediConnect` is to aid receptionist in their day-to-day administrative task.\u003cbr/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"  This includes:","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"  * Helping a patient book their next appointment.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"  * Helping a doctor retrieve the medical history of a particular patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"* The project simulates an ongoing software project for a desktop application (called _MediConnect_) used for managing patient details, doctor details and, appointments.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"* For an overview of this project, see the **[MediConnect Product Website](https://ay2324s1-cs2103t-t08-1.github.io/tp/)**.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"* This project is based on `AddressBook Level 3` project (`AB3` for short), a **part of the se-education.org** initiative.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"  * Documentation of `AB3`: **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"yanghengtang":12,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"mounilsankar"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"mounilsankar"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"mounilsankar"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"mounilsankar":4,"-":68}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"## CS2103T-T08-1","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"### Kim Shi Tong","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"\u003cimg src\u003d\"images/kimshitong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"[[github](https://github.com/kimshitong)]","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"[[portfolio](team/kimshitong.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"* Responsibilities: UI + Threading","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"### Mah Chee Teng","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"\u003cimg src\u003d\"images/cheeggered.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"[[github](http://github.com/cheeggered)]","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"[[portfolio](team/cheeggered.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"* Responsibilities: UI + Data","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"### Mounil Sankar","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"\u003cimg src\u003d\"images/mounilsankar.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"[[github](http://github.com/mounilsankar)] ","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"[[portfolio](team/mounilsankar.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"### Tan Jing Xu, Derek","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"\u003cimg src\u003d\"images/derekjxtan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"[[github](http://github.com/derekjxtan)]","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"[[portfolio](team/derekjxtan.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"### Tang Yang Heng","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"\u003cimg src\u003d\"images/yanghengtang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"[[github](http://github.com/yanghengtang)]","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"[[portfolio](team/yanghengtang.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"* Responsibilities: Dev Ops + Data","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"yanghengtang":26,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"derekjxtan"},"content":"* has a need to manage a significant number of patients and doctors","lastModifiedDate":"2023-10-04"},{"lineNumber":261,"author":{"gitId":"derekjxtan"},"content":"* has a need to manage appointments between the patients and doctors","lastModifiedDate":"2023-10-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"derekjxtan"},"content":"**Value proposition**:","lastModifiedDate":"2023-10-04"},{"lineNumber":268,"author":{"gitId":"derekjxtan"},"content":"* provides easy storage and management of patients\u0027 and doctors\u0027 profiles","lastModifiedDate":"2023-10-04"},{"lineNumber":269,"author":{"gitId":"derekjxtan"},"content":"* provides convenient management of appointments of doctors and patients","lastModifiedDate":"2023-10-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"kimshitong"},"content":"Priorities: High (Must-Have) - * * *, Medium (Good-To-Have) - * *, Low (To-Forgo) - *","lastModifiedDate":"2023-10-05"},{"lineNumber":275,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":276,"author":{"gitId":"kimshitong"},"content":"| Priority  | As a … | I want to …                                                                                                                    | So that I can…                                                                               |","lastModifiedDate":"2023-10-06"},{"lineNumber":277,"author":{"gitId":"kimshitong"},"content":"|-----------|--------|--------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-06"},{"lineNumber":278,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | add patient\u0027s data into the system                                                                                             | ensure the system will have a record of a new or existing patient.                           |","lastModifiedDate":"2023-10-06"},{"lineNumber":279,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | edit a patient\u0027s data in the system                                                                                            | modify or update when the patients record has changes.                                       |","lastModifiedDate":"2023-10-06"},{"lineNumber":280,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | view list of patients in the system                                                                                            | easily verify their identity.                                                                |","lastModifiedDate":"2023-10-06"},{"lineNumber":281,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | delete patients\u0027 profile from the system                                                                                       | ensure the system only contains current patients of UHC.                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":282,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | add doctor profile into the system                                                                                             | ensure the system keep tracks of all the doctor working at UHC.                              |","lastModifiedDate":"2023-10-05"},{"lineNumber":283,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | view list of doctor profiles in the system                                                                                     | assign the patient to a suitable doctor accordingly.                                         |","lastModifiedDate":"2023-10-06"},{"lineNumber":284,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | delete doctor profile from the system                                                                                          | ensure the system only contains doctor that is still working in UHC.                         |","lastModifiedDate":"2023-10-05"},{"lineNumber":285,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | add an appointment in the system                                                                                               | ensure the system has a record of this appointment.                                          |","lastModifiedDate":"2023-10-06"},{"lineNumber":286,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | view list of appointment in the system                                                                                         | see the information of the appointment.                                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":287,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | delete an appointment from the system                                                                                          | ensure appointment that has been postponed or cancelled will not be reflected in the system. |","lastModifiedDate":"2023-10-06"},{"lineNumber":288,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | easily locate available time slots for emergency appointments                                                                  | ensure that urgent cases are seen promptly                                                   |","lastModifiedDate":"2023-10-06"},{"lineNumber":289,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | generate a summary of upcoming appointments for patients                                                                       | ensure they receive reminders and stay well-prepared for their scheduled appointments        |","lastModifiedDate":"2023-10-06"},{"lineNumber":290,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | view a patient\u0027s medical profile and medical histories                                                                         | more efficiently match patients with the right doctor.                                       |","lastModifiedDate":"2023-10-06"},{"lineNumber":291,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | quickly view emergency contact information of patients                                                                         | provide useful information in the event of an emergency                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":292,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | update treatment plans for patients                                                                                            | ensure they receive the most up-to-date and effective care.                                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":293,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | view patients who have appointments on any day                                                                                 | know who will be coming.                                                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":294,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | quickly locate and retrieve patient records by their names or dates of birth                                                   | streamline the check-in process and reducing wait times                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":295,"author":{"gitId":"kimshitong"},"content":"| * * *     | user,  | compile a concise daily or monthly appointment schedule                                                                        | enable me to prepare in advance and know my patients in advance                              |","lastModifiedDate":"2023-10-06"},{"lineNumber":296,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | provide doctors information about a patient\u0027s dietary restrictions and preferences                                             | provide tailored dietary advice during their appointments.                                   |","lastModifiedDate":"2023-10-06"},{"lineNumber":297,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | easily navigate on the application                                                                                             | use it more efficiently.                                                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":298,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | provide patients with detailed information about required pre-appointment preparations (e.g., fasting, medication adjustments) | ensure a smooth and successful visit.                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":299,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | schedule recurring appointments for patients with ongoing treatment plans                                                      | ensure that staff and patients do not need to repeatedly book appointments in the system.    |","lastModifiedDate":"2023-10-06"},{"lineNumber":300,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | generate reports summarizing the number of patient appointments for a specific month                                           | better resource allocation and planning.                                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":301,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | view patient consent forms and treatment waivers                                                                               | ensure legal compliance and patient safety.                                                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":302,"author":{"gitId":"kimshitong"},"content":"| * *       | user,  | provide patients with secure access to their medical records and appointment histories                                         | promote transparency and patient engagement.                                                 |","lastModifiedDate":"2023-10-06"},{"lineNumber":303,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | use the system to track and manage the inventory of medical supplies                                                           | ensure what we have what we need for patient care.                                           |","lastModifiedDate":"2023-10-06"},{"lineNumber":304,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | easily transfer patient records to other healthcare facilities or specialists                                                  | ensure there is seamless continuity of care                                                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":305,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | efficiently enter patient check-ins and check-outs                                                                             | keep track of waiting times.                                                                 |","lastModifiedDate":"2023-10-06"},{"lineNumber":306,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | set up automated appointment confirmation messages for patients                                                                | reduce the need for manual confirmation calls.                                               |","lastModifiedDate":"2023-10-06"},{"lineNumber":307,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | add payments for each patient                                                                                                  | streamline the payment process and also reducing administrative errors.                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":308,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | close payments for each patient                                                                                                | streamline the payment process and also reducing administrative errors.                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":309,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | view the prescribed medicine for the patient\u0027s latest appointment                                                              | dispense the appropriate medicine.                                                           |","lastModifiedDate":"2023-10-06"},{"lineNumber":310,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | view all outstanding bills of each patient to advise                                                                           | let patients are aware of their financial obligations and can plan accordingly.              |","lastModifiedDate":"2023-10-06"},{"lineNumber":311,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | securely transmit patient invoices and billing information to the finance department                                           | streamline the billing process                                                               |","lastModifiedDate":"2023-10-06"},{"lineNumber":312,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | update patient consent forms and privacy policies                                                                              | let patients review and sign electronically                                                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":313,"author":{"gitId":"kimshitong"},"content":"| *         | user,  | customize appointment reminder messages                                                                                        | cater to patients\u0027 preferred communication methods (email, SMS, phone call)                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"mounilsankar"},"content":"(For all use cases below, the **System** is the `MediConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC01 View all patients’ records**","lastModifiedDate":"2023-10-04"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to view all patients’ records.","lastModifiedDate":"2023-10-04"},{"lineNumber":327,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect shows the patients’ records.","lastModifiedDate":"2023-10-04"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":334,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":335,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"mounilsankar"},"content":"      ","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":339,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC02 View a patient\u0027s records**","lastModifiedDate":"2023-10-04"},{"lineNumber":340,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":341,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":342,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":343,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to view a patient\u0027s records.","lastModifiedDate":"2023-10-04"},{"lineNumber":344,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect shows the patient’s record.","lastModifiedDate":"2023-10-04"},{"lineNumber":345,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":346,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":347,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":348,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":349,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":350,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":352,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":354,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":355,"author":{"gitId":"mounilsankar"},"content":"* 1b. The patient does not exist in the system.","lastModifiedDate":"2023-10-04"},{"lineNumber":356,"author":{"gitId":"mounilsankar"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":357,"author":{"gitId":"mounilsankar"},"content":"    ","lastModifiedDate":"2023-10-04"},{"lineNumber":358,"author":{"gitId":"mounilsankar"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":359,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":360,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC03 Add a patient**","lastModifiedDate":"2023-10-04"},{"lineNumber":361,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":362,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":363,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":364,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to add a specific patient to the list","lastModifiedDate":"2023-10-04"},{"lineNumber":365,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect adds the specific patient to the list ","lastModifiedDate":"2023-10-05"},{"lineNumber":366,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":367,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":368,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":369,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":370,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":371,"author":{"gitId":"mounilsankar"},"content":"* 1a.MediConnect detects that the arguments provided to add a patient is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":372,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.    ","lastModifiedDate":"2023-10-04"},{"lineNumber":373,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":375,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":376,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":377,"author":{"gitId":"mounilsankar"},"content":"* 1b. MediConnect detects that patient to be added already exists in the system","lastModifiedDate":"2023-10-04"},{"lineNumber":378,"author":{"gitId":"mounilsankar"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC04 Edit a patient’s details/notes**","lastModifiedDate":"2023-10-04"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":385,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":386,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":387,"author":{"gitId":"mounilsankar"},"content":"1.  User edits a specific patient’s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":388,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect edits the patient’s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":389,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":390,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":391,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":392,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":393,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":394,"author":{"gitId":"mounilsankar"},"content":"* 1a.MediConnect detects that the arguments provided to edit a patient is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":397,"author":{"gitId":"mounilsankar"},"content":"   ","lastModifiedDate":"2023-10-04"},{"lineNumber":398,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":399,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":400,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC05 Delete a patient**","lastModifiedDate":"2023-10-04"},{"lineNumber":401,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":402,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":403,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":404,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to delete a specific patient in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":405,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect deletes the person.","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":407,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":408,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":409,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":410,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":411,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":413,"author":{"gitId":"mounilsankar"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":414,"author":{"gitId":"mounilsankar"},"content":"* 1b. MediConnect detects that the given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"mounilsankar"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"mounilsankar"},"content":"    * 1b2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC06 View all doctors’ records**","lastModifiedDate":"2023-10-04"},{"lineNumber":421,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":422,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":423,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":424,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to view all doctors’ records","lastModifiedDate":"2023-10-04"},{"lineNumber":425,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect shows the doctors’ record","lastModifiedDate":"2023-10-04"},{"lineNumber":426,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":427,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":428,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":429,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":430,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":431,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":433,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input. ","lastModifiedDate":"2023-10-05"},{"lineNumber":434,"author":{"gitId":"mounilsankar"},"content":"    ","lastModifiedDate":"2023-10-04"},{"lineNumber":435,"author":{"gitId":"mounilsankar"},"content":"       Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":436,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":437,"author":{"gitId":"cheeggered"},"content":"**Use case: UC07 View a doctor’s records**","lastModifiedDate":"2023-10-05"},{"lineNumber":438,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":439,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":440,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":441,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to view a doctor\u0027s records","lastModifiedDate":"2023-10-04"},{"lineNumber":442,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect shows the doctor’s record","lastModifiedDate":"2023-10-04"},{"lineNumber":443,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":444,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":445,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":446,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":447,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":448,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":449,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message. ","lastModifiedDate":"2023-10-04"},{"lineNumber":450,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":451,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":452,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":453,"author":{"gitId":"mounilsankar"},"content":"* 1b. MediConnect detects that the doctor does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":454,"author":{"gitId":"mounilsankar"},"content":"    * 1b1. MediConnect shows an error message. ","lastModifiedDate":"2023-10-04"},{"lineNumber":455,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":456,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":457,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":458,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC08 Add a doctor**","lastModifiedDate":"2023-10-04"},{"lineNumber":459,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":460,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":461,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":462,"author":{"gitId":"mounilsankar"},"content":"1. User requests to add a specific doctor to the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":463,"author":{"gitId":"mounilsankar"},"content":"2. MediConnect adds the specific doctor to the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":464,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":465,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":466,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":467,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":468,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":469,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the arguments provided to add a doctor is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":470,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":471,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input    ","lastModifiedDate":"2023-10-05"},{"lineNumber":472,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":473,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":474,"author":{"gitId":"mounilsankar"},"content":"* 1b. MediConnect detects that doctor to be added already exists in the system","lastModifiedDate":"2023-10-05"},{"lineNumber":475,"author":{"gitId":"mounilsankar"},"content":"   * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":476,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":477,"author":{"gitId":"mounilsankar"},"content":"     Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":478,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":479,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC09 Edit a doctor’s details/notes**","lastModifiedDate":"2023-10-04"},{"lineNumber":480,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":481,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":482,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":483,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to edit a specific doctor’s details.","lastModifiedDate":"2023-10-04"},{"lineNumber":484,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect edits the doctor’s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":485,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":486,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":487,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":488,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":489,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":490,"author":{"gitId":"mounilsankar"},"content":"* 1a.MediConnect detects that the arguments provided to edit a doctor is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":491,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":492,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":493,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":494,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":495,"author":{"gitId":"mounilsankar"},"content":"* 1b. MediConnect detects that doctor to be edited does not exist in the system","lastModifiedDate":"2023-10-04"},{"lineNumber":496,"author":{"gitId":"mounilsankar"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":497,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":498,"author":{"gitId":"mounilsankar"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":499,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":500,"author":{"gitId":"mounilsankar"},"content":"**Use case: UC10 Delete a doctor**","lastModifiedDate":"2023-10-05"},{"lineNumber":501,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":502,"author":{"gitId":"mounilsankar"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":503,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":504,"author":{"gitId":"mounilsankar"},"content":"1.  User requests to delete a specific doctor in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":505,"author":{"gitId":"mounilsankar"},"content":"2.  MediConnect deletes the doctor.","lastModifiedDate":"2023-10-05"},{"lineNumber":506,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":507,"author":{"gitId":"mounilsankar"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":508,"author":{"gitId":"mounilsankar"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":509,"author":{"gitId":"mounilsankar"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":510,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":511,"author":{"gitId":"mounilsankar"},"content":"* 1a. MediConnect detects that the given arguments to delete a doctor is invalid","lastModifiedDate":"2023-10-05"},{"lineNumber":512,"author":{"gitId":"mounilsankar"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":513,"author":{"gitId":"mounilsankar"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":514,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":515,"author":{"gitId":"mounilsankar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"cheeggered"},"content":"**Use case: UC11 View a patient’s upcoming appointments**","lastModifiedDate":"2023-10-05"},{"lineNumber":518,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":519,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":520,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":521,"author":{"gitId":"cheeggered"},"content":"1. User requests to view a patient’s upcoming appointments","lastModifiedDate":"2023-10-05"},{"lineNumber":522,"author":{"gitId":"cheeggered"},"content":"2. MediConnect shows the patient’s appointment list","lastModifiedDate":"2023-10-05"},{"lineNumber":523,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":524,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":525,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":526,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":527,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":528,"author":{"gitId":"cheeggered"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":529,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":530,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":531,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":532,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":533,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":534,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the patient does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":535,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":536,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":537,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":538,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":539,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":540,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":541,"author":{"gitId":"cheeggered"},"content":"**Use case: UC12 View a doctor’s upcoming appointments**","lastModifiedDate":"2023-10-05"},{"lineNumber":542,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":543,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":544,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":545,"author":{"gitId":"cheeggered"},"content":"1. User requests to view a doctor’s upcoming appointments.","lastModifiedDate":"2023-10-05"},{"lineNumber":546,"author":{"gitId":"cheeggered"},"content":"2. MediConnect shows the doctor’s appointment list.","lastModifiedDate":"2023-10-05"},{"lineNumber":547,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":548,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":549,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":550,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":551,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":552,"author":{"gitId":"cheeggered"},"content":"* 1a. MediConnect detects that the command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":553,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":554,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":555,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":556,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":557,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":558,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the doctor does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":559,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":560,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":561,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":562,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":563,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":564,"author":{"gitId":"cheeggered"},"content":"**Use case: UC13 Add an appointment between a patient and doctor**","lastModifiedDate":"2023-10-05"},{"lineNumber":565,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":566,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":567,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":568,"author":{"gitId":"cheeggered"},"content":"1. User requests to add a specific appointment between a patient and doctor.","lastModifiedDate":"2023-10-05"},{"lineNumber":569,"author":{"gitId":"cheeggered"},"content":"2. MediConnect adds the appointment to the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":570,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":571,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":572,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":573,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":574,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":575,"author":{"gitId":"cheeggered"},"content":"* 1a.MediConnect detects that the arguments provided to add an appointment is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":576,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":577,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":578,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":579,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":580,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":581,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the appointment to be added already exists in the system","lastModifiedDate":"2023-10-05"},{"lineNumber":582,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"cheeggered"},"content":"**Use case: UC14 Edit an appointment**","lastModifiedDate":"2023-10-05"},{"lineNumber":587,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":588,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":589,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":590,"author":{"gitId":"cheeggered"},"content":"1. User requests to edit an appointment.","lastModifiedDate":"2023-10-05"},{"lineNumber":591,"author":{"gitId":"cheeggered"},"content":"2. MediConnect edits the doctor’s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":592,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":593,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":594,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":595,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"cheeggered"},"content":"* 1a.MediConnect detects that the arguments provided to edit an appointment is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":598,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":599,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input.","lastModifiedDate":"2023-10-05"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":602,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":603,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the appointment to be edited does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":604,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":605,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":606,"author":{"gitId":"cheeggered"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":607,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":608,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":609,"author":{"gitId":"cheeggered"},"content":"**Use case: UC15 Delete an appointment**","lastModifiedDate":"2023-10-05"},{"lineNumber":610,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":611,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":612,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":613,"author":{"gitId":"cheeggered"},"content":"1. User requests to delete an appointment in the list","lastModifiedDate":"2023-10-05"},{"lineNumber":614,"author":{"gitId":"cheeggered"},"content":"2. MediConnect deletes the appointment","lastModifiedDate":"2023-10-05"},{"lineNumber":615,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":616,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":617,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":618,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":619,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":620,"author":{"gitId":"cheeggered"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":621,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":622,"author":{"gitId":"cheeggered"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":623,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":624,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":625,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":626,"author":{"gitId":"cheeggered"},"content":"    * 1b2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":627,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":628,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"cheeggered"},"content":"**Use case: UC16 Find a doctor’s availabilities in a given timeframe**","lastModifiedDate":"2023-10-05"},{"lineNumber":631,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":632,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":633,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":634,"author":{"gitId":"cheeggered"},"content":"1. User requests to find a doctor’s availability in a given timeframe.","lastModifiedDate":"2023-10-05"},{"lineNumber":635,"author":{"gitId":"cheeggered"},"content":"2. MediConnect shows the doctor’s availability.","lastModifiedDate":"2023-10-05"},{"lineNumber":636,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":637,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":638,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":639,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":640,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":641,"author":{"gitId":"cheeggered"},"content":"* 1a.MediConnect detects that the given command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":642,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":643,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":644,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":645,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1","lastModifiedDate":"2023-10-05"},{"lineNumber":646,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":647,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the given doctor does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":648,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":649,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":650,"author":{"gitId":"cheeggered"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":651,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":652,"author":{"gitId":"cheeggered"},"content":"**Use case: UC17 View a patient’s outstanding bills**","lastModifiedDate":"2023-10-05"},{"lineNumber":653,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":654,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":655,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":656,"author":{"gitId":"cheeggered"},"content":"1. User requests to view a patient’s bills.","lastModifiedDate":"2023-10-05"},{"lineNumber":657,"author":{"gitId":"cheeggered"},"content":"2. MediConnect shows the patient’s bills.","lastModifiedDate":"2023-10-05"},{"lineNumber":658,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":659,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":660,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":661,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":662,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":663,"author":{"gitId":"cheeggered"},"content":"* 1a.MediConnect detects that the given command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":664,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":665,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":666,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":667,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1","lastModifiedDate":"2023-10-05"},{"lineNumber":668,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":669,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the given patient does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":670,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":671,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":672,"author":{"gitId":"cheeggered"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":673,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":674,"author":{"gitId":"cheeggered"},"content":"**Use case: UC18 Add an outstanding bill to a patient**","lastModifiedDate":"2023-10-05"},{"lineNumber":675,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":676,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":677,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":678,"author":{"gitId":"cheeggered"},"content":"1. User requests to add an outstanding bill to a patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":679,"author":{"gitId":"cheeggered"},"content":"2. MediConnect adds the outstanding bill to the patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":680,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":681,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":682,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":683,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":684,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":685,"author":{"gitId":"cheeggered"},"content":"* 1a.MediConnect detects that the given command is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":686,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":687,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":688,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":689,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1","lastModifiedDate":"2023-10-05"},{"lineNumber":690,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":691,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the given patient does not exist in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":692,"author":{"gitId":"cheeggered"},"content":"    * 1b1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":693,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":694,"author":{"gitId":"cheeggered"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":695,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":696,"author":{"gitId":"cheeggered"},"content":"**Use case: UC19 Close an outstanding bill of a patient**","lastModifiedDate":"2023-10-05"},{"lineNumber":697,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":698,"author":{"gitId":"cheeggered"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":699,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":700,"author":{"gitId":"cheeggered"},"content":"1. User requests to list outstanding bills a patient has (UC17)","lastModifiedDate":"2023-10-05"},{"lineNumber":701,"author":{"gitId":"cheeggered"},"content":"2. MediConnect shows the list of outstanding bills the patient has","lastModifiedDate":"2023-10-05"},{"lineNumber":702,"author":{"gitId":"cheeggered"},"content":"3. User requests to close a specific bill in the list","lastModifiedDate":"2023-10-05"},{"lineNumber":703,"author":{"gitId":"cheeggered"},"content":"4. MediConnect deletes the bill from the list","lastModifiedDate":"2023-10-05"},{"lineNumber":704,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":705,"author":{"gitId":"cheeggered"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":706,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":707,"author":{"gitId":"cheeggered"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":708,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":709,"author":{"gitId":"cheeggered"},"content":"* 1a. MediConnect detects that the given patient is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":710,"author":{"gitId":"cheeggered"},"content":"    * 1a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":711,"author":{"gitId":"cheeggered"},"content":"    * 1a2. MediConnect requests for the correct input","lastModifiedDate":"2023-10-05"},{"lineNumber":712,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":713,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 1","lastModifiedDate":"2023-10-05"},{"lineNumber":714,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":715,"author":{"gitId":"cheeggered"},"content":"* 1b. MediConnect detects that the list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":716,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":717,"author":{"gitId":"cheeggered"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":718,"author":{"gitId":"cheeggered"},"content":"* 3a. MediConnect detects that the given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":719,"author":{"gitId":"cheeggered"},"content":"    * 3a1. MediConnect shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":720,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":721,"author":{"gitId":"cheeggered"},"content":"      Use case resumes at step 2","lastModifiedDate":"2023-10-05"},{"lineNumber":722,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":723,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":726,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":727,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"derekjxtan"},"content":"2. Should be able to handle at least 60,000 patients at any point of time.","lastModifiedDate":"2023-10-05"},{"lineNumber":731,"author":{"gitId":"derekjxtan"},"content":"3. Should be able to add, view, edit and delete patients and doctors without a noticeable lag.","lastModifiedDate":"2023-10-05"},{"lineNumber":732,"author":{"gitId":"derekjxtan"},"content":"4. Should be able to retrieve all appointments for a particular doctor or patient within 1 second.","lastModifiedDate":"2023-10-05"},{"lineNumber":733,"author":{"gitId":"derekjxtan"},"content":"5. Should lose no more than 1-minute worth of data in case of system error. ","lastModifiedDate":"2023-10-05"},{"lineNumber":734,"author":{"gitId":"derekjxtan"},"content":"6. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-05"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"derekjxtan"},"content":"* **Appointment**: A arranged meeting between a patient and a doctor at a particular date and time","lastModifiedDate":"2023-10-05"},{"lineNumber":741,"author":{"gitId":"derekjxtan"},"content":"* **Doctor**: A person providing medical services at UHC","lastModifiedDate":"2023-10-05"},{"lineNumber":742,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"derekjxtan"},"content":"* **NRIC**: Identity card number of the National Registration Identity Card, used as the primary means of identification for patients and doctors in MediConnect","lastModifiedDate":"2023-10-05"},{"lineNumber":744,"author":{"gitId":"derekjxtan"},"content":"* **Patient**: A person receiving medical services at UHC","lastModifiedDate":"2023-10-05"},{"lineNumber":745,"author":{"gitId":"derekjxtan"},"content":"* **Receptionist**: A person handling administrative work at UHC, and is the target user of MediConnect","lastModifiedDate":"2023-10-05"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"derekjxtan":15,"mounilsankar":176,"-":364,"kimshitong":40,"cheeggered":203}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"MediConnect is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, MediConnect can get your patient, doctor and appointment management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"1. Download the latest `mediconnect.jar` from [here](https://github.com/AY2324S1-CS2103T-T08-1/tp/releases).","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your MediConnect.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar mediconnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"   * `list_a` : Lists all appointments.","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"   * `add_p n\\Joe Ng ic\\T0383462A p\\83745623` : Adds a patient named `Joe Ng` to the list of Patient.","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"   * `delete_d id\\T0123321D` : Deletes the doctor with NRIC `T0123321D`.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"  e.g. in `add n\\NAME`, `NAME` is a parameter which can be used as `add n\\John Doe`.","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"  e.g `n\\NAME [t\\TAG]` can be used as `n\\John Doe t\\friend` or as `n\\John Doe`.","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"  e.g. `[t\\TAG]…​` can be used as ` ` (i.e. 0 times), `t\\friend`, `t\\friend t\\family` etc.","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"  e.g. if the command specifies `n\\NAME p\\PHONE_NUMBER`, `p\\PHONE_NUMBER n\\NAME` is also acceptable.","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"### Adding a patient: `add_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"Adds a patient to the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"Format: `add_p n\\NAME ic\\NRIC p\\PHONE_NUMBER`","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"* `add_p n\\John Doe ic\\T0212385J p\\98765432`","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"* `add_p ic\\S9912343G n\\Betsy Crowe p\\81235833`","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"### Listing all patient : `list_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"Shows a list of all patients in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"Format: `list_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"### Editing a patient : `edit_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"Edits an existing patient in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"Format: `edit_p ic\\NRIC [n\\NAME] [p\\PHONE]`","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"* Edits the person with the specified `NRIC`.","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"* The NRIC of the patient cannot be changed.","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"yanghengtang"},"content":"*  `edit_p ic\\T0212385J n\\Joe Ng` Edits the name of the patient with NRIC `T0212385J` to be `Joe Ng`.","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"yanghengtang"},"content":"*  `edit_p ic\\S9912343G p\\91234567` Edits the phone of patient with NRIC `S9912343G` to be `91234567`.","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"yanghengtang"},"content":"### Locating patients by name: `find_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"yanghengtang"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"yanghengtang"},"content":"Format: `find_p KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"yanghengtang"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"yanghengtang"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"yanghengtang"},"content":"* Only the name of the patient is searched.","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"yanghengtang"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"yanghengtang"},"content":"* Patients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"yanghengtang"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"yanghengtang"},"content":"* `find_p John` returns `john` and `John Doe`","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"yanghengtang"},"content":"* `find_p alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"yanghengtang"},"content":"### Deleting a patient : `delete_p`","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"yanghengtang"},"content":"Deletes the specified patient from the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"yanghengtang"},"content":"Format: `delete_p ic\\NRIC`","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"yanghengtang"},"content":"* Deletes the patient with the specified `NRIC`.","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"yanghengtang"},"content":"* `delete_p ic\\T0212385J` deletes the patient with NRIC `T0212385J` in the system.","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"yanghengtang"},"content":"### Adding a doctor: `add_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"yanghengtang"},"content":"Adds a doctor to the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"yanghengtang"},"content":"Format: `add_d n\\NAME ic\\NRIC`","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"yanghengtang"},"content":"* `add_d n\\John Doe ic\\T0212385J`","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"yanghengtang"},"content":"* `add_d ic\\S9912343G n\\Betsy Crowe`","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"yanghengtang"},"content":"### Listing all doctor : `list_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":144,"author":{"gitId":"yanghengtang"},"content":"Shows a list of all doctors in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"yanghengtang"},"content":"Format: `list_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"yanghengtang"},"content":"### Editing a doctor : `edit_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":150,"author":{"gitId":"yanghengtang"},"content":"Edits an existing doctor in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"yanghengtang"},"content":"Format: `edit_d ic\\NRIC [n\\NAME]`","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":154,"author":{"gitId":"yanghengtang"},"content":"* Edits the doctor with the specified `NRIC`.","lastModifiedDate":"2023-10-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"yanghengtang"},"content":"* The NRIC of the dcotor cannot be changed.","lastModifiedDate":"2023-10-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"yanghengtang"},"content":"*  `edit_d ic\\T0212385J n\\Joe Ng` Edits the name of the doctor with NRIC `T0212385J` to be `Joe Ng`.","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"yanghengtang"},"content":"### Locating doctors by name: `find_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"yanghengtang"},"content":"Finds doctor whose names contain any of the given keywords.","lastModifiedDate":"2023-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"yanghengtang"},"content":"Format: `find_d KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"yanghengtang"},"content":"* Only the name of the doctor is searched.","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"yanghengtang"},"content":"* Doctors matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"yanghengtang"},"content":"* `find_d John` returns `john` and `John Doe`","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"yanghengtang"},"content":"* `find_d alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":178,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":179,"author":{"gitId":"yanghengtang"},"content":"### Deleting a doctor : `delete_d`","lastModifiedDate":"2023-10-05"},{"lineNumber":180,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":181,"author":{"gitId":"yanghengtang"},"content":"Deletes the specified doctor from the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":183,"author":{"gitId":"yanghengtang"},"content":"Format: `delete_d ic\\NRIC`","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":185,"author":{"gitId":"yanghengtang"},"content":"* Deletes the doctor with the specified `NRIC`.","lastModifiedDate":"2023-10-05"},{"lineNumber":186,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":187,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"yanghengtang"},"content":"* `delete_d ic\\T0212385J` deletes the doctor with NRIC `T0212385J` in the system.","lastModifiedDate":"2023-10-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":190,"author":{"gitId":"yanghengtang"},"content":"### Adding an appointment: `add_a`","lastModifiedDate":"2023-10-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":192,"author":{"gitId":"yanghengtang"},"content":"Adds an appointment into the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":194,"author":{"gitId":"yanghengtang"},"content":"Format: `add_a pic\\PATIENT_NRIC dic\\DOCTOR_NRIC d\\DATE_TIME`","lastModifiedDate":"2023-10-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":197,"author":{"gitId":"yanghengtang"},"content":"* `add_a pic\\S9912343G dic\\T0212385J d\\2023-09-11T07:30`","lastModifiedDate":"2023-10-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":199,"author":{"gitId":"yanghengtang"},"content":"### Listing all appointments : `list_a`","lastModifiedDate":"2023-10-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":201,"author":{"gitId":"yanghengtang"},"content":"Shows a list of all upcoming appointments in the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":203,"author":{"gitId":"yanghengtang"},"content":"Format: `list_a`","lastModifiedDate":"2023-10-05"},{"lineNumber":204,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":205,"author":{"gitId":"yanghengtang"},"content":"### Locating appointment by patient or doctor NRIC: `find_a`","lastModifiedDate":"2023-10-05"},{"lineNumber":206,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":207,"author":{"gitId":"yanghengtang"},"content":"Finds appointment with the specified doctor or patient NRIC.","lastModifiedDate":"2023-10-05"},{"lineNumber":208,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":209,"author":{"gitId":"yanghengtang"},"content":"Format: `find_a [pic\\PATIENT_NRIC] [dic\\DOCTOR_NRIC]`","lastModifiedDate":"2023-10-06"},{"lineNumber":210,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":211,"author":{"gitId":"yanghengtang"},"content":"* Find any appointment of the doctor or patient with the specified `NRIC` has.","lastModifiedDate":"2023-10-05"},{"lineNumber":212,"author":{"gitId":"yanghengtang"},"content":"* At least one of the optional field must be provided","lastModifiedDate":"2023-10-05"},{"lineNumber":213,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"yanghengtang"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":215,"author":{"gitId":"yanghengtang"},"content":"* `find_a pic\\S9912343G` returns all the appointment the patient with NRIC `S9912343G` has.","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"yanghengtang"},"content":"### Deleting an appointment : `delete_a`","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"yanghengtang"},"content":"Deletes the specified appointment from the system.","lastModifiedDate":"2023-10-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"yanghengtang"},"content":"Format: `delete_a pic\\PATIENT_NRIC dic\\DOCTOR_NRIC d\\DATE_TIME`","lastModifiedDate":"2023-10-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"yanghengtang"},"content":"* Deletes the appointment with the specified `PATIENT_NRIC`, `DOCTOR_NRIC` and `DATE_TIME`.","lastModifiedDate":"2023-10-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"yanghengtang"},"content":"* `delete_a pic\\S9912343G dic\\T0212385J d\\2023-09-11T07:30` deletes the existing appointment between patient with NRIC `S9912343G` and doctor with NRIC `T0212385J` at `9 Sep 23 7.30am`.","lastModifiedDate":"2023-10-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"yanghengtang"},"content":"MediConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":240,"author":{"gitId":"yanghengtang"},"content":"MediConnect data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":243,"author":{"gitId":"yanghengtang"},"content":"If your changes to the data file makes its format invalid, MediConnect will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"yanghengtang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MediConnect home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":261,"author":{"gitId":"yanghengtang"},"content":"1. _Details coming soon ..._","lastModifiedDate":"2023-10-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"yanghengtang"},"content":"| Action                 | Format, Examples                                                                                                            |","lastModifiedDate":"2023-10-06"},{"lineNumber":268,"author":{"gitId":"yanghengtang"},"content":"|------------------------|-----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-06"},{"lineNumber":269,"author":{"gitId":"yanghengtang"},"content":"| **Add Patient**        | `add_p n\\NAME ic\\NRIC p\\PHONE_NUMBER` \u003cbr\u003e e.g., `add_p n\\John Doe ic\\T0212385J p\\98765432`                                 |","lastModifiedDate":"2023-10-06"},{"lineNumber":270,"author":{"gitId":"yanghengtang"},"content":"| **Add Doctor**         | `add_d n\\NAME ic\\NRIC` \u003cbr\u003e e.g., `add_d n\\John Doe ic\\T0212385J`                                                           |","lastModifiedDate":"2023-10-06"},{"lineNumber":271,"author":{"gitId":"yanghengtang"},"content":"| **Add Appointment**    | `add_a pic\\PATIENT_NRIC dic\\DOCTOR_NRIC d\\DATE_TIME` \u003cbr\u003e e.g., `add_a pic\\S9912343G dic\\T0212385J d\\2023-09-11T07:30`      |","lastModifiedDate":"2023-10-06"},{"lineNumber":272,"author":{"gitId":"yanghengtang"},"content":"| **Delete Patient**     | `delete_p ic\\NRIC`\u003cbr\u003e e.g., `delete_p ic\\T0212385J`                                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":273,"author":{"gitId":"yanghengtang"},"content":"| **Delete Doctor**      | `delete_d ic\\NRIC`\u003cbr\u003e e.g., `delete_d ic\\T0212385J`                                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":274,"author":{"gitId":"yanghengtang"},"content":"| **Delete Appointment** | `delete_a pic\\PATIENT_NRIC dic\\DOCTOR_NRIC d\\DATE_TIME`\u003cbr\u003e e.g., `delete_a pic\\S9912343G dic\\T0212385J d\\2023-09-11T07:30` |","lastModifiedDate":"2023-10-06"},{"lineNumber":275,"author":{"gitId":"yanghengtang"},"content":"| **Edit Patient**       | `edit_p ic\\NRIC [n\\NAME] [p\\PHONE]`\u003cbr\u003e e.g.,`edit_p ic\\T0212385J n\\Joe Ng`                                                 |","lastModifiedDate":"2023-10-06"},{"lineNumber":276,"author":{"gitId":"yanghengtang"},"content":"| **Edit Doctor**        | `edit_d ic\\NRIC [n\\NAME]`\u003cbr\u003e e.g.,`edit_d ic\\T0212385J n\\Joe Ng`                                                           |","lastModifiedDate":"2023-10-06"},{"lineNumber":277,"author":{"gitId":"yanghengtang"},"content":"| **Find Patient**       | `find_p KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find_p James Jake`                                                              |","lastModifiedDate":"2023-10-06"},{"lineNumber":278,"author":{"gitId":"yanghengtang"},"content":"| **Find Patient**       | `find_d KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find_d James Jake`                                                              |","lastModifiedDate":"2023-10-06"},{"lineNumber":279,"author":{"gitId":"yanghengtang"},"content":"| **List Patient**       | `list_p`                                                                                                                    |","lastModifiedDate":"2023-10-06"},{"lineNumber":280,"author":{"gitId":"yanghengtang"},"content":"| **List Doctor**        | `list_d`                                                                                                                    |","lastModifiedDate":"2023-10-06"},{"lineNumber":281,"author":{"gitId":"yanghengtang"},"content":"| **List Appointment**   | `list_a`                                                                                                                    |","lastModifiedDate":"2023-10-06"},{"lineNumber":282,"author":{"gitId":"yanghengtang"},"content":"| **Help**               | `help`                                                                                                                      |","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"yanghengtang":139,"-":143}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"yanghengtang"},"content":"    content: \"MediConnect\";","lastModifiedDate":"2023-10-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"yanghengtang":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"title: MediConnect","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T08-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T08-1/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T08-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-T08-1/tp)","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"**MediConnect is a desktop application for managing your patient and doctor details as well as appointment.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"* If you are interested in using MediConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"* If you are interested about developing MediConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yanghengtang":6,"-":13}},{"path":"docs/team/cheeggered.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"title: Chee Teng\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"### Project: MediConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"AddressBook - MediConnect is a desktop address book application used for managing hospital staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"  * What it does: ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"  * Justification: ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"  * PRs reviewed (with non-trivial review comments): []()","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"  * Contributed to forum discussions (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"  * Integrated a third party library (Natty) to the project ([]())","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"derekjxtan":39}},{"path":"docs/team/derekjxtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"title: Derek\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"### Project: MediConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"AddressBook - MediConnect is a desktop address book application used for managing hospital staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"  * What it does: ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"  * Justification: ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"  * PRs reviewed (with non-trivial review comments): []()","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"  * Contributed to forum discussions (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"  * Integrated a third party library (Natty) to the project ([]())","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"derekjxtan":39}},{"path":"docs/team/kimshitong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"title: Shi Tong\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"### Project: MediConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"AddressBook - MediConnect is a desktop address book application used for managing hospital staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"  * What it does: ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"  * Justification: ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"  * PRs reviewed (with non-trivial review comments): []()","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"  * Contributed to forum discussions (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"  * Integrated a third party library (Natty) to the project ([]())","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"derekjxtan":39}},{"path":"docs/team/mounilsankar.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"title: Mounil\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"### Project: MediConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"AddressBook - MediConnect is a desktop address book application used for managing hospital staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"  * What it does: ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"  * Justification: ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"  * PRs reviewed (with non-trivial review comments): []()","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"  * Contributed to forum discussions (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"  * Integrated a third party library (Natty) to the project ([]())","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"derekjxtan":39}},{"path":"docs/team/yanghengtang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"title: Yang Heng\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"### Project: MediConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"AddressBook - MediConnect is a desktop address book application used for managing hospital staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"  * What it does: ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"  * Justification: ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"  * ","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    * ","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"  * PRs reviewed (with non-trivial review comments): []()","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"  * Contributed to forum discussions (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: []())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"  * Integrated a third party library (Natty) to the project ([]())","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"derekjxtan":39}},{"path":"src/main/java/seedu/address/model/Listable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * A interface for all classes that needs to be added to a UniqueList to implement.","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"public interface Listable {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"     * Checks if 2 Listables are the same. This method is separate from equals as it represents a weaker notion of","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"     * equality.","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"     * @param otherListable Another Listable to compare the current instance to.","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"     * @return True if both listables are the same.","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    public boolean isSame(Listable otherListable);","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"derekjxtan":17}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":" * Represents a Person\u0027s NRIC in the system.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"public class Nric {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"            \"NRIC should only contain alphanumeric characters and it should not be blank\";","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"    /*","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"     * The first character of the NRIC must either be \u0027S\u0027, \u0027T\u0027, \u0027F\u0027, \u0027G\u0027 or \u0027M\u0027,","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"     * followed by 7 digits and ending with a uppercase alphabet.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[STFGM]\\\\d{7}[A-Z]\";","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    public final String nric;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"     * Constructs a {@code Nric}.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     * @param nric A valid NRIC.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    public Nric(String nric) {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if a given string is a valid NRIC.","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"        return nric;","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        return nric.equals(otherNric.nric);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"        return nric.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"yanghengtang":65}},{"path":"src/main/java/seedu/address/model/person/doctor/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.Listable;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":" * Represents a Doctor in the address book.","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public class Doctor implements Listable {","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    // Identity fields","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    private final Name name;","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    public Doctor(Name name, Nric nric) {","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"        requireAllNonNull(name, nric);","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        return name;","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    public Nric getNric() {","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        return nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if both doctors have the same NRIC.","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"     * This defines a weaker notion of equality between two doctors.","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    public boolean isSame(Listable otherListable) {","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"        if (!(otherListable instanceof Doctor)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        Doctor otherDoctor \u003d (Doctor) otherListable;","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        if (otherDoctor \u003d\u003d this) {","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"        return otherDoctor.getNric().equals(getNric());","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if both doctors have the same identity fields.","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"     * This defines a stronger notion of equality between two doctors.","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"        if (!(other instanceof Doctor)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"        Doctor otherDoctor \u003d (Doctor) other;","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"        return name.equals(otherDoctor.name)","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 nric.equals(otherDoctor.nric);","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"        return Objects.hash(name, nric);","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"                .toString();","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yanghengtang":89}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * Signals that the operation will result in duplicate Listable (Listables are considered duplicates if they have the","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" * same identity).","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"derekjxtan":11}},{"path":"src/main/java/seedu/address/model/person/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * Signals that the operation is unable to find the specified Listable.","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"public class ItemNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"derekjxtan":7}},{"path":"src/main/java/seedu/address/model/person/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Listable;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"public class Patient implements Listable {","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    // Identity fields","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    private final Name name;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    private final Phone phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    public Patient(Name name, Phone phone, Nric nric) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        requireAllNonNull(name, phone, nric);","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        return name;","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        return phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    public Nric getNric() {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"        return nric;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if both patients have the same NRIC.","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"     * This defines a weaker notion of equality between two patients.","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    public boolean isSame(Listable otherListable) {","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        if (!(otherListable instanceof Patient)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        Patient otherPatient \u003d (Patient) otherListable;","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        return otherPatient.getNric().equals(getNric());","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"     * Returns true if both patients have the same identity fields.","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"yanghengtang"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"yanghengtang"},"content":"        Patient otherPerson \u003d (Patient) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"yanghengtang"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"yanghengtang"},"content":"                \u0026\u0026 nric.equals(otherPerson.nric);","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"yanghengtang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"yanghengtang"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"yanghengtang"},"content":"        return Objects.hash(name, phone, nric);","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"yanghengtang"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"yanghengtang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"yanghengtang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"yanghengtang"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"yanghengtang"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"yanghengtang"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"yanghengtang"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"yanghengtang":90,"derekjxtan":10}},{"path":"src/main/java/seedu/address/model/person/patient/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.Listable;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.exceptions.DuplicateItemException;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":" * A list of Listables that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":" * A Listable is considered unique by comparing using {@code Listable#isSame(Listable)}. As such, adding and updating of","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":" * items uses Listable#isSame(Listable) for equality so as to ensure that the item being added or updated is","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":" * unique in terms of identity in the UniqueItemList. However, the removal of a item uses Listable#equals(Object) so","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":" * as to ensure that the items with exactly the same fields will be removed.","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":" *","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":" *","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":" * @see Listable#isSame(Listable)","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"public class UniqueItemList\u003cS extends Listable\u003e implements Iterable\u003cS\u003e {","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    private final ObservableList\u003cS\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    private final ObservableList\u003cS\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     * Returns true if the list contains an equivalent item as the given argument.","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    public boolean contains(S toCheck) {","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     * Adds a item to the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    public void add(S toAdd) {","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"     * Replaces the item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"    public void setItem(S target, S editedItem) {","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        if (!target.isSame(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"     * Removes the equivalent item from the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"     * The item must exist in the list.","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"    public void remove(S toRemove) {","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"    public void setItems(UniqueItemList\u003cS\u003e replacement) {","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"    public void setItems(List\u003cS\u003e items) {","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"        internalList.setAll(items);","lastModifiedDate":"2023-10-08"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-08"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"    public ObservableList\u003cS\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-08"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-08"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"    public Iterator\u003cS\u003e iterator() {","lastModifiedDate":"2023-10-08"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-08"},{"lineNumber":110,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":111,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":112,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":113,"author":{"gitId":"derekjxtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-08"},{"lineNumber":114,"author":{"gitId":"derekjxtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-08"},{"lineNumber":115,"author":{"gitId":"derekjxtan"},"content":"            return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":116,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":117,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":118,"author":{"gitId":"derekjxtan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-08"},{"lineNumber":119,"author":{"gitId":"derekjxtan"},"content":"        if (!(other instanceof UniqueItemList\u003c?\u003e)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":120,"author":{"gitId":"derekjxtan"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":121,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":122,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":123,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003c?\u003e otherUniqueItemList \u003d (UniqueItemList\u003c?\u003e) other;","lastModifiedDate":"2023-10-08"},{"lineNumber":124,"author":{"gitId":"derekjxtan"},"content":"        return internalList.equals(otherUniqueItemList.internalList);","lastModifiedDate":"2023-10-08"},{"lineNumber":125,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":126,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":128,"author":{"gitId":"derekjxtan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"derekjxtan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":133,"author":{"gitId":"derekjxtan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":134,"author":{"gitId":"derekjxtan"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-08"},{"lineNumber":135,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":136,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":137,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":138,"author":{"gitId":"derekjxtan"},"content":"     * Returns true if {@code items} contains only unique items.","lastModifiedDate":"2023-10-08"},{"lineNumber":139,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":140,"author":{"gitId":"derekjxtan"},"content":"    private boolean itemsAreUnique(List\u003cS\u003e items) {","lastModifiedDate":"2023-10-08"},{"lineNumber":141,"author":{"gitId":"derekjxtan"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2023-10-08"},{"lineNumber":142,"author":{"gitId":"derekjxtan"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2023-10-08"},{"lineNumber":143,"author":{"gitId":"derekjxtan"},"content":"                if (items.get(i).isSame(items.get(j))) {","lastModifiedDate":"2023-10-08"},{"lineNumber":144,"author":{"gitId":"derekjxtan"},"content":"                    return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":145,"author":{"gitId":"derekjxtan"},"content":"                }","lastModifiedDate":"2023-10-08"},{"lineNumber":146,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":147,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":148,"author":{"gitId":"derekjxtan"},"content":"        return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":149,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":150,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"derekjxtan":150}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    public static final String VALID_NRIC_AMY \u003d \"T0123456A\";","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    public static final String VALID_NRIC_BOB \u003d \"S9987654Z\";","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yanghengtang":2,"-":128}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"public class NricTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"        String invalidNric \u003d \"\";","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    public void isValidNric() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"        // null NRIC","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"        // invalid NRIC","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"S012345 A\")); // contains space","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"S012^456A\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"S01222456A\")); // too many characters","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"S01456A\")); // too few characters","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"A0123456A\")); // invalid starting character","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"s0123456A\")); // lowercase starting character","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(Nric.isValidNric(\"S0123456a\")); // lowercase end character","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        // valid NRIC","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(Nric.isValidNric(\"S0123456A\")); // starting with S","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(Nric.isValidNric(\"T2414628F\")); // starting with T","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(Nric.isValidNric(\"G1238858J\")); // starting with G","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(Nric.isValidNric(\"F7423926D\")); // starting with F","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(Nric.isValidNric(\"M4812734E\")); // starting with M","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        Nric nric \u003d new Nric(\"S0123456A\");","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(nric.equals(new Nric(\"S0123456A\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(nric.equals(nric));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(nric.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(nric.equals(5.0f));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(nric.equals(new Nric(\"T0987654Z\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"yanghengtang":63}},{"path":"src/test/java/seedu/address/model/person/doctor/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.testutil.TypicalDoctor.ALICE;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.testutil.TypicalDoctor.BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"public class DoctorTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    public void isSameDoctor() {","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(ALICE.isSame(ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.isSame(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"        // same NRIC, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(ALICE.isSame(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        // different NRIC, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.isSame(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        Doctor aliceCopy \u003d new DoctorBuilder(ALICE).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        // different NRIC -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"        String expected \u003d Doctor.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", nric\u003d\"","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"                + ALICE.getNric() + \"}\";","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yanghengtang":69}},{"path":"src/test/java/seedu/address/model/person/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.testutil.TypicalPatient.BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"public class PatientTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"    public void isSamePatient() {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(ALICE.isSame(ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(ALICE.isSame(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"        // same NRIC, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(ALICE.isSame(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        // different NRIC, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(ALICE.isSame(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        Patient aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"        // different NRIC -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"yanghengtang"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"yanghengtang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"yanghengtang"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"yanghengtang"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"yanghengtang"},"content":"        String expected \u003d Patient.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"yanghengtang"},"content":"                + \", nric\u003d\" + ALICE.getNric() + \"}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"yanghengtang"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"yanghengtang":72,"derekjxtan":4}},{"path":"src/test/java/seedu/address/model/person/patient/UniqueItemListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import static seedu.address.testutil.TypicalPatient.BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.exceptions.DuplicateItemException;","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.model.person.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"import seedu.address.testutil.TypicalPatient;","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"public class UniqueItemListTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    private final UniqueItemList\u003cPatient\u003e uniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    public void contains_nullItem_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.contains(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public void contains_itemNotInList_returnsFalse() {","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        assertFalse(uniquePatientList.contains(ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    public void contains_itemInList_returnsTrue() {","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniquePatientList.contains(TypicalPatient.ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    public void contains_itemWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        Patient editedAlice \u003d new PatientBuilder(TypicalPatient.ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"                .build();","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        assertTrue(uniquePatientList.contains(editedAlice));","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    public void add_nullItem_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.add(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    public void add_duplicateItem_throwsDuplicateItemException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniquePatientList.add(TypicalPatient.ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_nullTargetItem_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setItem(null, TypicalPatient.ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_nullEditedItem_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setItem(TypicalPatient.ALICE, null));","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_targetItemNotInList_throwsItemNotFoundException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniquePatientList.setItem(","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"                TypicalPatient.ALICE, TypicalPatient.ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_editedItemIsSameItem_success() {","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.setItem(TypicalPatient.ALICE, TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniqueItemList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"        expectedUniqueItemList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniqueItemList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_editedItemHasSameIdentity_success() {","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"        Patient editedAlice \u003d new PatientBuilder(TypicalPatient.ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"                .build();","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.setItem(TypicalPatient.ALICE, editedAlice);","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"        expectedUniquePatientList.add(editedAlice);","lastModifiedDate":"2023-10-08"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_editedItemHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.setItem(TypicalPatient.ALICE, BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"    public void setItem_editedItemHasNonUniqueIdentity_throwsDuplicateItemException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":110,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":111,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":112,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniquePatientList.setItem(TypicalPatient.ALICE, BOB));","lastModifiedDate":"2023-10-08"},{"lineNumber":113,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":114,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":115,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":116,"author":{"gitId":"derekjxtan"},"content":"    public void remove_nullItem_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":117,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.remove(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":118,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":119,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":120,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":121,"author":{"gitId":"derekjxtan"},"content":"    public void remove_itemDoesNotExist_throwsItemNotFoundException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":122,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniquePatientList.remove(TypicalPatient.ALICE));","lastModifiedDate":"2023-10-08"},{"lineNumber":123,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":124,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":125,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":126,"author":{"gitId":"derekjxtan"},"content":"    public void remove_existingItem_removesItem() {","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":128,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.remove(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":133,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":134,"author":{"gitId":"derekjxtan"},"content":"    public void setItems_nullUniqueItemList_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":135,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setItems((UniqueItemList\u003cPatient\u003e) null));","lastModifiedDate":"2023-10-08"},{"lineNumber":136,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":137,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":138,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":139,"author":{"gitId":"derekjxtan"},"content":"    public void setItems_uniqueItemList_replacesOwnListWithProvidedUniqueItemList() {","lastModifiedDate":"2023-10-08"},{"lineNumber":140,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":141,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":142,"author":{"gitId":"derekjxtan"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":143,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.setItems(expectedUniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":144,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":145,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":146,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":147,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":148,"author":{"gitId":"derekjxtan"},"content":"    public void setItems_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":149,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setItems((List\u003cPatient\u003e) null));","lastModifiedDate":"2023-10-08"},{"lineNumber":150,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":151,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":152,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":153,"author":{"gitId":"derekjxtan"},"content":"    public void setItems_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-08"},{"lineNumber":154,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.add(TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":155,"author":{"gitId":"derekjxtan"},"content":"        List\u003cPatient\u003e patientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":156,"author":{"gitId":"derekjxtan"},"content":"        uniquePatientList.setItems(patientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":157,"author":{"gitId":"derekjxtan"},"content":"        UniqueItemList\u003cPatient\u003e expectedUniquePatientList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":158,"author":{"gitId":"derekjxtan"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":159,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":160,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":161,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":162,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":163,"author":{"gitId":"derekjxtan"},"content":"    public void setItems_listWithDuplicateItems_throwsDuplicateItemException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":164,"author":{"gitId":"derekjxtan"},"content":"        List\u003cPatient\u003e listWithDuplicatePatients \u003d Arrays.asList(TypicalPatient.ALICE, TypicalPatient.ALICE);","lastModifiedDate":"2023-10-08"},{"lineNumber":165,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniquePatientList.setItems(listWithDuplicatePatients));","lastModifiedDate":"2023-10-08"},{"lineNumber":166,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":167,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":168,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":169,"author":{"gitId":"derekjxtan"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":170,"author":{"gitId":"derekjxtan"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-08"},{"lineNumber":171,"author":{"gitId":"derekjxtan"},"content":"                -\u003e uniquePatientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-08"},{"lineNumber":172,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":173,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":174,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":175,"author":{"gitId":"derekjxtan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-08"},{"lineNumber":176,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(uniquePatientList.asUnmodifiableObservableList().toString(), uniquePatientList.toString());","lastModifiedDate":"2023-10-08"},{"lineNumber":177,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":178,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"derekjxtan":178}},{"path":"src/test/java/seedu/address/testutil/DoctorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":" * A utility class to help with building Doctor objects.","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"public class DoctorBuilder {","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0123456A\";","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"    private Name name;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"    private Nric nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code DoctorBuilder} with the default details.","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    public DoctorBuilder() {","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"     * Initializes the DoctorBuilder with the data of {@code doctorToCopy}.","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    public DoctorBuilder(Doctor doctorToCopy) {","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"        name \u003d doctorToCopy.getName();","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"        nric \u003d doctorToCopy.getNric();","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code Name} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    public DoctorBuilder withName(String name) {","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code Nric} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    public DoctorBuilder withNric(String nric) {","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"    public Doctor build() {","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        return new Doctor(name, nric);","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yanghengtang":52}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"public class PatientBuilder {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0123456A\";","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"    private Name name;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    private Nric nric;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"        nric \u003d patientToCopy.getNric();","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"yanghengtang"},"content":"     * Sets the {@code Nric} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"yanghengtang"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"yanghengtang"},"content":"    public PatientBuilder withNric(String nric) {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"yanghengtang"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"yanghengtang"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"yanghengtang"},"content":"    public Patient build() {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"yanghengtang"},"content":"        return new Patient(name, phone, nric);","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"yanghengtang":65}},{"path":"src/test/java/seedu/address/testutil/TypicalDoctor.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":" * A utility class containing a list of {@code Doctor} objects to be used in tests.","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":"public class TypicalDoctor {","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor ALICE \u003d new DoctorBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"T0123456J\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor BENSON \u003d new DoctorBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"S2936283D\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor CARL \u003d new DoctorBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"T3856391A\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor DANIEL \u003d new DoctorBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"S9754123F\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor ELLE \u003d new DoctorBuilder().withName(\"Elle Meyer\").withNric(\"G4123573C\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor FIONA \u003d new DoctorBuilder().withName(\"Fiona Kunz\").withNric(\"G6739542H\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor GEORGE \u003d new DoctorBuilder().withName(\"George Best\").withNric(\"T0359320R\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    // Manually added","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor HOON \u003d new DoctorBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"T0248362R\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor IDA \u003d new DoctorBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"S9348573F\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    // Manually added - Doctor\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor AMY \u003d new DoctorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"            .withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"    public static final Doctor BOB \u003d new DoctorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"            .withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    private TypicalDoctor() {} // prevents instantiation","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"    public static List\u003cDoctor\u003e getTypicalDoctor() {","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yanghengtang":50}},{"path":"src/test/java/seedu/address/testutil/TypicalPatient.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanghengtang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"yanghengtang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"yanghengtang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"yanghengtang"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"yanghengtang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"yanghengtang"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"yanghengtang"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"yanghengtang"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"yanghengtang"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"yanghengtang"},"content":"public class TypicalPatient {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient ALICE \u003d new PatientBuilder().withName(\"Alice Pauline\").withPhone(\"94351253\")","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"T0123456J\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient BENSON \u003d new PatientBuilder().withName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"S2936283D\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient CARL \u003d new PatientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"T3856391A\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient DANIEL \u003d new PatientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"S9754123F\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient ELLE \u003d new PatientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"G4123573C\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient FIONA \u003d new PatientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"G6739542H\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient GEORGE \u003d new PatientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"T0359320R\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"yanghengtang"},"content":"    // Manually added","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient HOON \u003d new PatientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"T0248362R\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient IDA \u003d new PatientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"yanghengtang"},"content":"            .withNric(\"S9348573F\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"yanghengtang"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient AMY \u003d new PatientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"yanghengtang"},"content":"            .withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"yanghengtang"},"content":"    public static final Patient BOB \u003d new PatientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"yanghengtang"},"content":"            .withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"yanghengtang"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"yanghengtang"},"content":"    private TypicalPatient() {} // prevents instantiation","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"yanghengtang"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"yanghengtang"},"content":"    public static List\u003cPatient\u003e getTypicalPatient() {","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"yanghengtang"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"yanghengtang"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"yanghengtang"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"yanghengtang":54}}]

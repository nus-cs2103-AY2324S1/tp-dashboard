[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W09-3/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"# ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"**ClinicAssistant is a desktop app for managing contacts**, optimized for use via a Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"If you can type fast, ClinicAssistant can get your contact management tasks done *faster than traditional GUI apps.*","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"**If you are interested**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"- to use ClinicAssistant, head over to the [**Quick Start** section of the **User Guide**](docs/UserGuide.md).","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"- to develop ClinicAssistant, the [**Developer Guide**](docs/DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"**Acknowledgements**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"  - Libraries used: JavaFX, JUnit5","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"tohpinren":3,"yezkez10":13,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"### Bryan Goh","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"\u003cimg src\u003d\"images/bryan-goh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"[[homepage](https://github.com/AY2324S1-CS2103T-W09-3/tp.git)]","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"[[github](https://github.com/Bryan-Goh)]","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"[[portfolio](team/bryan-goh.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"* Responsibilities: Delete Appointments","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"### Foo Jing Ning, Joy","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"\u003cimg src\u003d\"images/yezkez10.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"[[github](http://github.com/yezkez10)]","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"[[portfolio](team/yezkez10.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"* Responsibilities: Add Patients","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"### Niu Wenjia","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"\u003cimg src\u003d\"images/wj331.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"[[github](http://github.com/wj331)]","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"[[portfolio](team/yezkez10.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"* Responsibilities: Delete Patients","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"### Toh Pin Ren","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"\u003cimg src\u003d\"images/tohpinren.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"[[github](http://github.com/tohpinren)]","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"[[portfolio](team/tohpinren.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"* Responsibilities: Add Lists","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"### Yip Sin Hang","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"\u003cimg src\u003d\"images/simbayippy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"[[github](http://github.com/simbayippy)]","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"[[portfolio](team/yezkez10.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"* Responsibilities: Add Appointments","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"tohpinren":1,"yezkez10":4,"-":36,"Bryan-Goh":22}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"# ClinicAssistant Developer Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"wj331"},"content":"**Target user profile: Clinic Staff**","lastModifiedDate":"2023-10-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"simbayippy"},"content":"* has a need to manage a significant number of patients","lastModifiedDate":"2023-10-03"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"| Priority | As a …​                              | I want to …​                              | So that I can…​                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"simbayippy"},"content":"|----------|--------------------------------------|-------------------------------------------|--------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":286,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | clinic assistant                     | register new patients to the database     | reduce the use of physical documents and storage costs |","lastModifiedDate":"2023-10-03"},{"lineNumber":287,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | clinic admin staff                   | delete patient records                    | keep our records up-to-date                            |","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | clinic assistant                     | add new appointments to specific patients | keep track of their appointments                       |","lastModifiedDate":"2023-10-03"},{"lineNumber":289,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | clinic admin staff                   | delete appointments of patients           | update cancellations of no-shows                       |","lastModifiedDate":"2023-10-03"},{"lineNumber":290,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | overwhelmed healthcare professional  | view all the patient records              | not memorise all the patients of the clinic            |","lastModifiedDate":"2023-10-03"},{"lineNumber":291,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | overwhelmed healthcare professional  | view a specific patient\u0027s details         | save time                                              |","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"simbayippy"},"content":"(For all use cases below, the **System** is the `ClinicRecords` and the **Actor** is the `Clinic staff`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"simbayippy"},"content":"**Use case 1: Add a patient**","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"simbayippy"},"content":"1.  New patient visits the clinic","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"simbayippy"},"content":"2.  Patient is not in ClinicRecords","lastModifiedDate":"2023-10-03"},{"lineNumber":305,"author":{"gitId":"simbayippy"},"content":"3.  Clinic staff adds this new patient into the ClinicRecords","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"simbayippy"},"content":"4.  ClinicRecords shows a confirmation message","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"simbayippy"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":309,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"simbayippy"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":311,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"simbayippy"},"content":"* 3a. The given input is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"simbayippy"},"content":"    * 3a1. ClinicRecords shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":315,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"simbayippy"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-03"},{"lineNumber":317,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"simbayippy"},"content":"**Use case 2: List all patients**","lastModifiedDate":"2023-10-03"},{"lineNumber":319,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":320,"author":{"gitId":"simbayippy"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":321,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"wj331"},"content":"1.  Clinic staff wants to see all patient records","lastModifiedDate":"2023-10-04"},{"lineNumber":323,"author":{"gitId":"simbayippy"},"content":"2.  Clinic staff requests to list patients","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"simbayippy"},"content":"3.  ClinicRecords shows a list of patients","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"simbayippy"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"wj331"},"content":"**Use case 3: List a specific patient**","lastModifiedDate":"2023-10-04"},{"lineNumber":329,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":330,"author":{"gitId":"wj331"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":331,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":332,"author":{"gitId":"wj331"},"content":"1. Patient visits the clinic","lastModifiedDate":"2023-10-04"},{"lineNumber":333,"author":{"gitId":"wj331"},"content":"2. Clinic staff needs the information of this specific patient","lastModifiedDate":"2023-10-04"},{"lineNumber":334,"author":{"gitId":"wj331"},"content":"3. Clinic staff inserts the patient\u0027s details","lastModifiedDate":"2023-10-04"},{"lineNumber":335,"author":{"gitId":"wj331"},"content":"4. ClinicRecords retrieves the patient\u0027s information for the clinic staff","lastModifiedDate":"2023-10-04"},{"lineNumber":336,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":337,"author":{"gitId":"wj331"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":338,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":339,"author":{"gitId":"wj331"},"content":"* 3a. The patient cannot be found","lastModifiedDate":"2023-10-04"},{"lineNumber":340,"author":{"gitId":"wj331"},"content":"    * 3a1. ClinicRecords shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":341,"author":{"gitId":"wj331"},"content":"        Use Case resumes at step 3","lastModifiedDate":"2023-10-04"},{"lineNumber":342,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":343,"author":{"gitId":"wj331"},"content":"**Use case 4: Delete a patient**","lastModifiedDate":"2023-10-04"},{"lineNumber":344,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":345,"author":{"gitId":"simbayippy"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":347,"author":{"gitId":"simbayippy"},"content":"1.  User requests to list patients","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"simbayippy"},"content":"2.  ClinicRecords shows a list of patients","lastModifiedDate":"2023-10-03"},{"lineNumber":349,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"simbayippy"},"content":"4.  ClinicRecords deletes the person","lastModifiedDate":"2023-10-03"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"simbayippy"},"content":"* 3a. The given input is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"simbayippy"},"content":"    * 3a1. ClinicRecords shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"wj331"},"content":"1.  Should be able to find a patient\u0027s information in less than 2 seconds","lastModifiedDate":"2023-10-04"},{"lineNumber":371,"author":{"gitId":"simbayippy"},"content":"2.  Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":372,"author":{"gitId":"wj331"},"content":"3.  Should be able to load all patient\u0027s information in about 3 seconds.","lastModifiedDate":"2023-10-04"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"wj331"},"content":"* **ClinicRecords**: The record book we use to store information of patients","lastModifiedDate":"2023-10-04"},{"lineNumber":379,"author":{"gitId":"simbayippy"},"content":"* **Private patient record**: Details that are not meant to be shared with others","lastModifiedDate":"2023-10-03"},{"lineNumber":380,"author":{"gitId":"wj331"},"content":"* **Clinic Staff**: Any healthcare professional at the clinics including doctors/nurses/staff","lastModifiedDate":"2023-10-04"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":390,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":391,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"wj331"},"content":"       Expected: First Patient is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-12"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"simbayippy":45,"wj331":23,"-":367}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"# ClinicAssistant User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"ClinicAssistant is a **desktop app for managing contacts, optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ClinicAssistant can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"1. Download the latest `clinicassistant.jar` from [here](https://github.com/AY2324S1-CS2103T-W09-3/tp/releases).","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ClinicAssistant.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar clinicassistant.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"   * `list` : Lists all patients.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a patient named `John Doe` to ClinicAssistant.","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"   * `delete 3` : Deletes the 3rd patient shown in the current list.","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"   * `clear` : Deletes all patients.","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"yezkez10"},"content":"Adds a patient to the database. A patient has a **name, phone number, email, IC** and **address**.","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"yezkez10"},"content":"Format: `add /n NAME /p PHONE_NUMBER /e EMAIL /ic NRIC /a ADDRESS`","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"**Note:**","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"An appointment must have all tags to work. e.g. add appt, add appt /for 3, add appt /on 2023-09-17 will not work","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"yezkez10"},"content":"* `add /n Drizzy /p 999 /e drake@gmail.com /ic T03XXXXXE /a 901 Shelby Dr`","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"### Adding an appointment: `add appt`","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"Adds a new appointment to a specific patient at index. Need to include the upcoming date of this new appointment.","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"Format: `add appt /for INDEX /on DATE`","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"simbayippy"},"content":"**Note:**","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"An appointment must have all tags to work. e.g. add appt, add appt /for 3, add appt /on 2023-09-17 will not work","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"simbayippy"},"content":"* `add appt /for 6 /on 2023-09-17 13:00`","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"### Listing all patients : `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"Shows a list of all patients in the database.","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"**Note:**","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"There should not be any parameters after “list”. e.g. `list 123` will not return the list of patients","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"### Deleting an appointment : `delete_appt`","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"Deletes the appointment at the specified index of the specified patient.","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"Format: `delete_appt INDEX /appt INDEX`","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"* The command is case-sensitive. E.g. delete_appt INDEX /appt 3 will not work","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"* INDEX must be a positive integer, starting from 1","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"* Acceptable values for INDEX is a single integer that is within the number of appointments of that patient","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"* Cannot have any missing parameters. E.g. delete_appt, delete_appt 4, delete_appt /appt 3 will not work","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"*  `delete_appt 4 /appt 4` Deletes the fourth appointment of Person index 4","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"*  `delete_appt 1 /appt 1` Deletes the first appointment of Person index 1","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"### Finding patient details by name: `find`","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"Finds patients whose name contains the given keyword.","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"### Deleting a patient : `delete`","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"Deletes the specified patient from the Clinic Records.","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"* Deletes the patient at the specified `INDEX`.","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"wj331"},"content":"* The index **must be a positive integer** 1, 2, 3, 4, …​","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"* `list` followed by `delete 2` deletes the 2nd patient in ClinicAssistant.","lastModifiedDate":"2023-10-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"### Clearing all patients : `clear`","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"Clears all patients from ClinicAssistant.","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"ClinicAssistant data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"ClinicAssistant data are saved automatically as a JSON file `[JAR file location]/data/clinicassistant.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"If your changes to the data file makes its format invalid, ClinicAssistant will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ClinicAssistant home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"**Find**   | `find KEYWORD`\u003cbr\u003e e.g., `find john`","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"simbayippy":6,"wj331":3,"tohpinren":23,"yezkez10":5,"-":150,"Bryan-Goh":12}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eClinicAssistant\u003c/a\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"tohpinren":1,"-":65}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"# ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W09-3/tp/actions)","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W09-3/tp/graph/badge.svg?token\u003dE7O4JYRUM0)](https://codecov.io/gh/AY2324S1-CS2103T-W09-3/tp)","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"![Ui](images/AB3Ui.png)","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"**ClinicAssistant is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"* If you are interested in using ClinicAssistant, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"* If you are interested about developing ClinicAssistant, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tohpinren":4,"yezkez10":1,"-":16}},{"path":"docs/team/bryan-goh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"title: \"Bryan Goh\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"# Project: ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"ClinicAssistant is a desktop application used by General Practitioner clinics\u0027 admin staff for patient contact management. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"### Code contributed: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dBryan-Goh\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"### Enhancements implemented:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"### Contributions to the UG:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"### Contributions to the DG:","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Bryan-Goh":26}},{"path":"docs/team/simbayippy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"title: \"Yip Sin Hangs\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"# Project: ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"ClinicAssistant is a desktop application used by General Practitioner clinics\u0027 admin staff for patient contact management. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"### Code contributed","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"Code contributed: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsimbayippy\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"### Enhancements implemented","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"### Contributions to the UG","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"### Contributions to the DG","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"### Review/mentoring contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"### Contributions beyond the project team","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"  `to be added soon`","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"simbayippy":31}},{"path":"docs/team/tohpinren.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"title: \"Toh Pin Ren\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"# Project: ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"ClinicAssistant is a desktop application used by General Practitioner clinics\u0027 admin staff for patient contact management. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"### Code contributed","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"Code contributed: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dtohpinren\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"### Enhancements implemented","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"A summary of the enhancements you implemented.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"### Contributions to the UG","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"Which sections did you contribute to the UG?","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"### Contributions to the DG","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"Which sections did you contribute to the DG? Which UML diagrams did you add/updated?","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"### Review/mentoring contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"### Contributions beyond the project team","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"- Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"- Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"tohpinren":41}},{"path":"docs/team/wj331.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"title: \"wj331\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"# Project: ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"ClinicAssistant is a desktop application used by General Practitioner clinics\u0027 admin staff for patient contact management. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"### Code Contributed: [RepoSense Link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dwj331\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"### Enhancements implemented:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"### Contributions to the UG:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"### Contributions to the DG:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"* to be added soon","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"wj331":27}},{"path":"docs/team/yezkez10.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"title: \"Joy Foo\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"## Project: ClinicAssistant","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"### Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"ClinicAssistant is a desktop application used by General Practitioner clinics\u0027 admin staff for patient contact management. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"**Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"**Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"- to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"- to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"**Enhancements to existing features:**","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"- to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"**Contributions to Documentation:**","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"* User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"  * Added documentation for the features `add`","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"* Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"  - to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"**Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"* PRs reviewed to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"* Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"* Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"**Contributions beyond the project scope:**","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"- to be added soon","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"yezkez10":40}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_PATIENTS_FOUND_OVERVIEW \u003d \"%1$d patients found!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_ONE_PATIENT_FOUND_OVERVIEW \u003d \"1 patient found!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_NO_PATIENT_FOUND_OVERVIEW \u003d \"No patients found!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"            \"The Appointment index provided is invalid\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"    //TODO: change this to own format","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"                .append(\" | Phone: \")","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"                .append(\" | Email: \")","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"                .append(\" | Gender: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"                .append(person.getGender())","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"                .append(\" | Age: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"                .append(person.getAge())","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"                .append(\" | Ethnic: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"                .append(person.getEthnic())","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"                .append(\" | NRIC: \")","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"                .append(person.getNric())","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"                .append(\" | Address: \")","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"                .append(\" | Tags: \");","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"     * Formats the {@code address of the patient} for display to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"     * @param person Patient we are interested in","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"     * @param appointment Appointment of the patient","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"     * @return","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"    public static String formatAppointment(Person person, Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"simbayippy"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"        builder.append(\"\\nPatient: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"                .append(person.getName())","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"                .append(\"\\n\")","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"                .append(\"Description: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"                .append(appointment.getDescription())","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"                .append(\"\\n\")","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"simbayippy"},"content":"                .append(\"Date: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"                .append(appointment.getDateTime());","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"simbayippy":16,"wj331":11,"tohpinren":3,"yezkez10":7,"-":44,"Bryan-Goh":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"            + PREFIX_ETHNIC + \"ETHNICITY \"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"            + PREFIX_NRIC + \"NRIC NO. \"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"            + PREFIX_AGE + \"22 \"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"            + PREFIX_ETHNIC + \"Chinese \"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"            + PREFIX_NRIC + \"T1234567E \"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"            + PREFIX_TAG + \"allergic to the sun \"","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"            + PREFIX_TAG + \"history of knee problems\";","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wj331":11,"yezkez10":3,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/AppointmentAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":" * A AppointmentAddCommand instance to add appointment to patients","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"public class AppointmentAddCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"    public static final String COMMAND_WORD \u003d \"appt\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"            + \": Adds a appointment to the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"            + \"Parameters: INDEX (must be a positive integer), \"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"            + \"DESCRIPTION, DATE_TIME (must be a valid date in the future)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_FOR + \" 1 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_DESCRIPTION + \" description details \"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_DATE + \" 02-01-2024 12:00\";","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists for the patient.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_ADD_APPOINTMENT_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"    private final String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"    public AppointmentAddCommand(Index targetIndex, String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"        Person targetPatient \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"        Appointment toAdd \u003d new Appointment(description, dateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"        if (targetPatient.hasAppointment(toAdd)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"        targetPatient.addAppointment(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_APPOINTMENT_SUCCESS, toAdd));","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"simbayippy"},"content":"        if (!(other instanceof AppointmentAddCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"        AppointmentAddCommand otherAddCommand \u003d (AppointmentAddCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"        return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"simbayippy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"        return new ToStringBuilder(this).toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"simbayippy":78,"wj331":1,"Bryan-Goh":12}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":" * Deletes the appointment of an existing person in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Index: %2$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String COMMAND_WORD \u003d \"delete_appt\";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"            + \": Deletes the Appointment of the person identified \"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"            + \"by the index number of the specified person. \"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"            + \"the person is specified by their Index.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_APPOINTMENT + \"3\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment %1$s  of %2$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"    private final Index index;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"    private final Index index2;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"     * @param index Index of the patient","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"     * @param index2 Index of the appointment","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"    public DeleteAppointmentCommand(Index index, Index index2) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        requireAllNonNull(index, index2);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        this.index2 \u003d index2;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"        if (index2.getZeroBased() \u003e\u003d personToEdit.getAppointments().size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment deleted \u003d personToEdit.deleteAppointment(index2.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS, deleted,","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"                Messages.format(personToEdit)));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"        if (!(other instanceof DeleteAppointmentCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"        DeleteAppointmentCommand e \u003d (DeleteAppointmentCommand) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"                \u0026\u0026 index2.equals(e.index2);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Bryan-Goh":85}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":" * Deletes a patient identified using its displayed index in the clinic records.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"            + \": Deletes the patient with the index number used in the clinic records.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"            + \"Parameters: INDEX (must be a positive integer in the list)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted Person: %1$s from clinic records\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wj331":5,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.model.person.Person.createClone;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"    public static final String COMMAND_WORD \u003d \"edit_appt\";","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"            + \": Edits the specified Appointment of the patient identified \"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"            + \"by the index number used in the displayed patients list. \"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_APPOINTMENT","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"]\"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"            + \"[\" + PREFIX_DATE + \"]...\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_APPOINTMENT + \"1 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_DATE + \"01-01-2024 00:00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Newly edited Appointment %1$s of %2$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided: \"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"]\"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"            + \"[\" + PREFIX_DATE + \"]\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_APPOINTMENT + \"1 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_DATE + \"01-01-2024 00:00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists for the patient.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"    private final Index patientIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"    private final Index appointmentIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"     * @param patientIndex of the person in the filtered person list to edit","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentCommand(Index patientIndex, Index apptIndex, EditAppointmentDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(patientIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(apptIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"        this.patientIndex \u003d patientIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"        this.appointmentIndex \u003d apptIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"        if (patientIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"        // get the person to edit","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"        Person personToEdit \u003d lastShownList.get(patientIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"        Person editedPerson \u003d createClone(personToEdit);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"        ArrayList\u003cAppointment\u003e appointmentList \u003d editedPerson.getAppointments();","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"simbayippy"},"content":"        if (appointmentIndex.getZeroBased() \u003e\u003d appointmentList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"simbayippy"},"content":"        // get the appointment to edit from the list of appointments of Person","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"simbayippy"},"content":"        Appointment appointmentToEdit \u003d appointmentList.get(appointmentIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"simbayippy"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"simbayippy"},"content":"        editedPerson.editAppointment(appointmentIndex.getZeroBased(), editedAppointment);","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"simbayippy"},"content":"        if (personToEdit.hasAppointment(editedAppointment)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"simbayippy"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"simbayippy"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"simbayippy"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"simbayippy"},"content":"                editedAppointment, Messages.format(editedPerson)));","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"simbayippy"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"simbayippy"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"simbayippy"},"content":"    private static Appointment createEditedAppointment(Appointment apptToEdit, EditAppointmentDescriptor editApptDesc) {","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"simbayippy"},"content":"        assert apptToEdit !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"simbayippy"},"content":"        String updatedDescription \u003d editApptDesc.getDescription().orElse(apptToEdit.getDescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime updatedDateTime \u003d editApptDesc.getDateTime().orElse(apptToEdit.getDateTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"simbayippy"},"content":"        return new Appointment(updatedDescription, updatedDateTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"simbayippy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"simbayippy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"simbayippy"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"simbayippy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"simbayippy"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"simbayippy"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentCommand otherEditAppointmentCommand \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"simbayippy"},"content":"        return patientIndex.equals(otherEditAppointmentCommand.patientIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"simbayippy"},"content":"                \u0026\u0026 editAppointmentDescriptor.equals(otherEditAppointmentCommand.editAppointmentDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"simbayippy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"simbayippy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"simbayippy"},"content":"                .add(\"patientIndex\", patientIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"simbayippy"},"content":"                .add(\"appointmentIndex\", appointmentIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"simbayippy"},"content":"                .add(\"editAppointmentDescriptor\", editAppointmentDescriptor)","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"simbayippy"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"simbayippy"},"content":"     * Stores the Appointment to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"simbayippy"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"simbayippy"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"simbayippy"},"content":"        private String description;","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"simbayippy"},"content":"        private LocalDateTime dateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"simbayippy"},"content":"        public EditAppointmentDescriptor() {}","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"simbayippy"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"simbayippy"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"simbayippy"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"simbayippy"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"simbayippy"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"simbayippy"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"simbayippy"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"simbayippy"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"simbayippy"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"simbayippy"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"simbayippy"},"content":"            return CollectionUtil.isAnyNonNull(description, dateTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"simbayippy"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"simbayippy"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"simbayippy"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"simbayippy"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"simbayippy"},"content":"        public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"simbayippy"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"simbayippy"},"content":"        public Optional\u003cLocalDateTime\u003e getDateTime() {","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"simbayippy"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"simbayippy"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"simbayippy"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"simbayippy"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"simbayippy"},"content":"                return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"simbayippy"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"simbayippy"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"simbayippy"},"content":"            if (!(other instanceof EditAppointmentCommand.EditAppointmentDescriptor)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"simbayippy"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"simbayippy"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"simbayippy"},"content":"            EditAppointmentCommand.EditAppointmentDescriptor otherAppointmentDescriptor \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"simbayippy"},"content":"                    (EditAppointmentCommand.EditAppointmentDescriptor) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"simbayippy"},"content":"            return Objects.equals(description, otherAppointmentDescriptor.description)","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"simbayippy"},"content":"                    \u0026\u0026 Objects.equals(dateTime, otherAppointmentDescriptor.dateTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"simbayippy"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"simbayippy"},"content":"        public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"simbayippy"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"simbayippy"},"content":"                    .add(\"description\", description)","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"simbayippy"},"content":"                    .add(\"dateTime\", dateTime)","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"simbayippy"},"content":"                    .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"simbayippy":210}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"            + \"[\" + PREFIX_AGE + \"AGE] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"            + \"[\" + PREFIX_ETHNIC + \"ETHNIC] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"            + \"[\" + PREFIX_NRIC + \"NRIC] \"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"        Age updatedAge \u003d editPersonDescriptor.getAge().orElse(personToEdit.getAge());","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"        Ethnicity updatedEthnic \u003d editPersonDescriptor.getEthnic().orElse(personToEdit.getEthnic());","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"yezkez10"},"content":"        Nric updatedNric \u003d editPersonDescriptor.getNric().orElse(personToEdit.getNric());","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedGender, updatedAge, updatedEthnic,","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"                updatedNric, updatedAddress, updatedTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"wj331"},"content":"        private Gender gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"wj331"},"content":"        private Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"wj331"},"content":"        private Ethnicity ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"yezkez10"},"content":"        private Nric nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":173,"author":{"gitId":"wj331"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"wj331"},"content":"            setAge(toCopy.age);","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"wj331"},"content":"            setEthnic(toCopy.ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"yezkez10"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"wj331"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"wj331"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":213,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":214,"author":{"gitId":"wj331"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"wj331"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"wj331"},"content":"        public void setAge(Age age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":218,"author":{"gitId":"wj331"},"content":"            this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":219,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":220,"author":{"gitId":"wj331"},"content":"        public Optional\u003cAge\u003e getAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":221,"author":{"gitId":"wj331"},"content":"            return Optional.ofNullable(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":222,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":223,"author":{"gitId":"wj331"},"content":"        public void setEthnic(Ethnicity ethnic) {","lastModifiedDate":"2023-10-15"},{"lineNumber":224,"author":{"gitId":"wj331"},"content":"            this.ethnic \u003d ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":225,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"wj331"},"content":"        public Optional\u003cEthnicity\u003e getEthnic() {","lastModifiedDate":"2023-10-15"},{"lineNumber":227,"author":{"gitId":"wj331"},"content":"            return Optional.ofNullable(ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":228,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":230,"author":{"gitId":"yezkez10"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":231,"author":{"gitId":"yezkez10"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":232,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":233,"author":{"gitId":"wj331"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2023-10-15"},{"lineNumber":234,"author":{"gitId":"wj331"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2023-10-15"},{"lineNumber":235,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":276,"author":{"gitId":"wj331"},"content":"                    \u0026\u0026 Objects.equals(gender, otherEditPersonDescriptor.gender)","lastModifiedDate":"2023-10-15"},{"lineNumber":277,"author":{"gitId":"wj331"},"content":"                    \u0026\u0026 Objects.equals(age, otherEditPersonDescriptor.age)","lastModifiedDate":"2023-10-15"},{"lineNumber":278,"author":{"gitId":"wj331"},"content":"                    \u0026\u0026 Objects.equals(ethnic, otherEditPersonDescriptor.ethnic)","lastModifiedDate":"2023-10-15"},{"lineNumber":279,"author":{"gitId":"yezkez10"},"content":"                    \u0026\u0026 Objects.equals(nric, otherEditPersonDescriptor.nric)","lastModifiedDate":"2023-10-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":290,"author":{"gitId":"wj331"},"content":"                    .add(\"gender\", gender)","lastModifiedDate":"2023-10-15"},{"lineNumber":291,"author":{"gitId":"wj331"},"content":"                    .add(\"age\", age)","lastModifiedDate":"2023-10-15"},{"lineNumber":292,"author":{"gitId":"wj331"},"content":"                    .add(\"ethnic\", ethnic)","lastModifiedDate":"2023-10-15"},{"lineNumber":293,"author":{"gitId":"yezkez10"},"content":"                    .add(\"nric\", nric)","lastModifiedDate":"2023-10-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"wj331":48,"yezkez10":10,"-":241}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose names contain any of \"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"        int numberOfPatientsFound \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"        if (numberOfPatientsFound \u003d\u003d 0) {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"            return new CommandResult(Messages.MESSAGE_NO_PATIENT_FOUND_OVERVIEW);","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        } else if (numberOfPatientsFound \u003d\u003d 1) {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"            return new CommandResult(Messages.MESSAGE_ONE_PATIENT_FOUND_OVERVIEW);","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"        } else {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"                    String.format(Messages.MESSAGE_PATIENTS_FOUND_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tohpinren":10,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tohpinren":1,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.AppointmentAddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":" * Parses input arguments and creates a new {@code AppointmentAddCommand} objectg","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"public class AddAppointmentParser implements Parser\u003cAppointmentAddCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"    public AppointmentAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FOR, PREFIX_DESCRIPTION, PREFIX_DATE);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_FOR, PREFIX_DESCRIPTION, PREFIX_DATE)","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"                    AppointmentAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"        Index patientIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_FOR).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"        return new AppointmentAddCommand(patientIndex, description, dateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"simbayippy":36,"wj331":16}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"    //TODO: edit parser to fit our UG requirements","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER, PREFIX_AGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"                    PREFIX_ETHNIC, PREFIX_NRIC, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"                PREFIX_GENDER, PREFIX_AGE, PREFIX_ETHNIC, PREFIX_NRIC)","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"                PREFIX_GENDER, PREFIX_AGE, PREFIX_ETHNIC, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        Age age \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"        Ethnicity ethnicity \u003d ParserUtil.parseEthnic(argMultimap.getValue(PREFIX_ETHNIC).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"        Person person \u003d new Person(name, phone, email, gender, age, ethnicity, nric, address, tagList);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"wj331":18,"yezkez10":2,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.AppointmentAddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"        case AppointmentAddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"            return new AddAppointmentParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"simbayippy":8,"-":86,"Bryan-Goh":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"/n \");","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"/p \");","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"/e \");","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"/ic \");","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"/g \");","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"/age \");","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    public static final Prefix PREFIX_ETHNIC \u003d new Prefix(\"/eth \");","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"/a \");","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"/t \");","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"    public static final Prefix PREFIX_FOR \u003d new Prefix(\"/for \");","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"/d \");","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Prefix PREFIX_APPOINTMENT \u003d new Prefix(\"/appt \");","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"/on \");","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"simbayippy":3,"wj331":4,"yezkez10":6,"-":10,"Bryan-Goh":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":" * Parses input arguments and creates a new {@code DeleteAppointmentCommand} object","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code DeleteAppointmentCommand}","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     * and returns a {@code DeleteAppointmentCommand} object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"        Index index;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"                    DeleteAppointmentCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"        String text \u003d argMultimap.getValue(PREFIX_APPOINTMENT).orElse(\"\");","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"        if (text \u003d\u003d \"\") {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"                    DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        if (!text.matches(\"[0-9]+\")) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"                    DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        int number \u003d Integer.valueOf(text);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"        if (number \u003c\u003d 0) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"                    DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        Index index2 \u003d Index.fromOneBased(number);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        return new DeleteAppointmentCommand(index, index2);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Bryan-Goh":52}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code EditAppointmentCommand}","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"     * and returns a {@code EditAppointmentCommand} object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT, PREFIX_DESCRIPTION, PREFIX_DATE);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"        Index patientIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"        Index appointmentIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"            patientIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"        // Check if required arguments are present","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"        if (!argMultimap.getValue(PREFIX_APPOINTMENT).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"            appointmentIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_APPOINTMENT).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DESCRIPTION, PREFIX_DATE);","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"            editAppointmentDescriptor.setDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"            editAppointmentDescriptor.setDateTime(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"        return new EditAppointmentCommand(patientIndex, appointmentIndex, editAppointmentDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"simbayippy":69}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"     * Parses a {@code String nric} into a {@code NRIC}.","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"yezkez10"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"yezkez10"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"yezkez10"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"yezkez10"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"yezkez10"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"yezkez10"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"yezkez10"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"     * Parses a {@code String Gender} into a {@code Gender}.","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"     * @param gender The input string that represents Gender \"M\" or \"F\"","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"     * @return Gender instance","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"     * @throws ParseException if the given {@code gender} is not \"M\" or \"F\".","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"     * Parses a {@code String age} into a {@code Age}.","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"     * @param age The input string that represents age of patient","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"     * @return Age an Age instance","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"     * @throws ParseException if the given {@code age} is not between 0 and 150.","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"        String trimmedAge \u003d age.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"        int ageInt \u003d Integer.parseInt(trimmedAge);","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"        if (!Age.isValidAge(ageInt)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"        return new Age(ageInt);","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"     * Parses a {@code String ethnic} into a {@code Ethnicity}.","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"     * @param ethnic The input string that represents ethnic group of patient","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"     * @return Gender instance","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"     * @throws ParseException if the given {@code ethnic} is not \"Chinese\", \"Malay\", \"Indian\", \"Eurasian\" or \"Others\".","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"    public static Ethnicity parseEthnic(String ethnic) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"        requireNonNull(ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"        String trimmedEthnic \u003d ethnic.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"        if (!Ethnicity.isValidEthnic(trimmedEthnic)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"            throw new ParseException(Ethnicity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"        return new Ethnicity(trimmedEthnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":192,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"simbayippy"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"simbayippy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"simbayippy"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"simbayippy"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"simbayippy"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"simbayippy"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"simbayippy"},"content":"        if (!Appointment.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"simbayippy"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"simbayippy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime parsedDateTime \u003d LocalDateTime.parse(trimmedDateTime, formatter);","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"simbayippy"},"content":"        return parsedDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"simbayippy":22,"wj331":50,"yezkez10":15,"-":124}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":" * Appointment instance for patients","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"public class Appointment {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description must not be empty, Date must be in dd-MM-yyyy HH:mm\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"     * description must be alphanumeric","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"    private final String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"     * Constructor for Appointment instance","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"     * @param description Description of the appointment","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"     * @param dateTime Time and Date of the appointment","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"    public Appointment(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"        requireAllNonNull(description, dateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"     * Returns true if a given string is a valid descrption","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"     * @param test","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"     * @return","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"     * Returns true if a given LocalDateTime is a valid date and time (must be in the future) for an appointment.","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"        // Define the format that the string should adhere to","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"            // Attempt to parse the string into a LocalDateTime using the specified format","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"            LocalDateTime parsedDateTime \u003d LocalDateTime.parse(test, formatter);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"            LocalDateTime currentDateTime \u003d LocalDateTime.now(); // Get the current date and time","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"            return parsedDateTime.isAfter(currentDateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"            // Parsing failed, so the string is not in the correct format","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"        return this.description;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"simbayippy"},"content":"        return this.dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"                .add(\"description\", description)","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"simbayippy"},"content":"                .add(\"dateTime\", dateTime)","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"simbayippy"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"        return Objects.equals(description, otherAppointment.description)","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"                \u0026\u0026 Objects.equals(dateTime, otherAppointment.dateTime);","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"simbayippy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"simbayippy"},"content":"        // Generate a hashCode based on description and dateTime","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"simbayippy"},"content":"        return Objects.hash(description, dateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"simbayippy":94,"wj331":4,"Bryan-Goh":6}},{"path":"src/main/java/seedu/address/model/person/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" * Represents a Person\u0027s Gender in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAge(int)}","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"public class Age {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"            \"Age should be \u003c150 and \u003e\u003d 0\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    public final int age;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"     * @param age A valid Age.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    public Age(int age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"     * Returns true if a given input is a valid age.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    public static boolean isValidAge(int test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        return test \u003c\u003d 150 \u0026\u0026 test \u003e\u003d 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        if (!(other instanceof Age)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        Age otherAge \u003d (Age) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        return this.age \u003d\u003d otherAge.age;","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        return String.valueOf(this.age);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"wj331":53}},{"path":"src/main/java/seedu/address/model/person/Ethnicity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":" * Represents a Person\u0027s Gender in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEthnic(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"public class Ethnicity {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"            \"Ethnic should be \u0027Chinese\u0027/ \u0027Malay\u0027/ \u0027Indian\u0027/ \u0027Eurasian\u0027 or \u0027Others\u0027 \";","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    private static final Set\u003cString\u003e VALID_ETHNICITIES \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"            Set.of(\"Chinese\", \"Malay\", \"Indian\", \"Eurasian\", \"Others\");","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    public final String ethnic;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"     * @param ethnic A valid Ethnicity.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    public Ethnicity(String ethnic) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        requireNonNull(ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"        checkArgument(isValidEthnic(ethnic), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        this.ethnic \u003d ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"     * Returns true if a given string is a valid Ethnicity.","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    public static boolean isValidEthnic(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        return VALID_ETHNICITIES.contains(test);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        return this.ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        if (!(other instanceof Ethnicity)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        Ethnicity otherEthnicity \u003d (Ethnicity) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        return this.ethnic.equals(otherEthnicity.ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        return ethnic.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"wj331":62}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" * Represents a Person\u0027s Gender in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"public class Gender {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"            \"Gender should be strictly M or F only\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[MF]$\";","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    public final String gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     * @param gender A valid Gender.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"     * Returns true if a given string is a valid Gender.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        return gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        if (!(other instanceof Gender)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        Gender otherGender \u003d (Gender) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        return gender.equals(otherGender.gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        return gender.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"wj331":60}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":" * Represents a Person\u0027s NRIC in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"public class Nric {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"            \"NRICs should contain 7 digits, with 2 capital letters at the beginning and end\";","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alpha}\\\\d{7}\\\\p{Alpha}\";","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"    public final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"     * Constructs a {@code NRIC}.","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"     * @param nric A valid NRIC.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"    public Nric(String nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"        value \u003d nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"     * Returns true if a given string is a valid Nric.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"        return value;","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"        return value.equals(otherNric.value);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wj331":1,"yezkez10":59}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    private final Gender gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    private final Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    private final Ethnicity ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    private final ArrayList\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    public Person(Name name, Phone phone, Email email, Gender gender,","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"                  Age age, Ethnicity ethnic, Nric nric, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"        requireAllNonNull(name, phone, email, nric, address, tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        this.ethnic \u003d ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"    public Person(Name name, Phone phone, Email email, Gender gender, Age age, Ethnicity ethnic, Nric nric,","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"                  Address address, Set\u003cTag\u003e tags, ArrayList\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"        requireAllNonNull(name, phone, email, nric, address, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"        this.ethnic \u003d ethnic;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"    public Nric getNric() {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"yezkez10"},"content":"        return nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"        return this.gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"    public Age getAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"        return this.age;","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"    public Ethnicity getEthnic() {","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"        return this.ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"    public ArrayList\u003cAppointment\u003e getAppointments() {","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"        return appointments;","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"     * Adds an appointment to this Person","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"     * @param toAdd Appointment to be added","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"simbayippy"},"content":"    public void addAppointment(Appointment toAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"simbayippy"},"content":"        this.appointments.add(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"     * @param index Index of the appointment to delete","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"     * @return An ArrayList without the deleted appointment","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"    public Appointment deleteAppointment(int index) {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment appt \u003d appointments.get(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"        this.appointments.remove(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"        return appt;","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"simbayippy"},"content":"     * Edits the appointment at the input index with the updated Appointment","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"simbayippy"},"content":"     * @param index Index of the appointment to edit","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"simbayippy"},"content":"     * @param updatedAppointment the updated Appointment","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"simbayippy"},"content":"    public void editAppointment(int index, Appointment updatedAppointment) {","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"simbayippy"},"content":"        this.appointments.set(index, updatedAppointment);","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"simbayippy"},"content":"     * Returns true if both patients have the same Appointments.","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"simbayippy"},"content":"     * @param otherPerson the other patient to check","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"simbayippy"},"content":"     * @return if both patients have the same appointment","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"simbayippy"},"content":"    public boolean haveSameAppointments(Person otherPerson) {","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"simbayippy"},"content":"        return this.appointments.equals(otherPerson.getAppointments());","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"simbayippy"},"content":"     * Returns true if patient already has this sa,e Appointment","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"simbayippy"},"content":"     * @param otherAppointment Appointment to check if it exists","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"simbayippy"},"content":"     * @return if patient has this Appointment","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"simbayippy"},"content":"    public boolean hasAppointment(Appointment otherAppointment) {","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"simbayippy"},"content":"        return this.appointments.contains(otherAppointment);","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"simbayippy"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToClone}","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"simbayippy"},"content":"     * Needed for edit Appointment.","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"simbayippy"},"content":"    public static Person createClone(Person personToClone) {","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"simbayippy"},"content":"        assert personToClone !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"simbayippy"},"content":"        Name cloneName \u003d personToClone.getName();","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"simbayippy"},"content":"        Phone clonePhone \u003d personToClone.getPhone();","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"simbayippy"},"content":"        Email cloneEmail \u003d personToClone.getEmail();","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"simbayippy"},"content":"        Nric cloneNric \u003d personToClone.getNric();","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"simbayippy"},"content":"        Address cloneAddress \u003d personToClone.getAddress();","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"simbayippy"},"content":"        Set\u003cTag\u003e cloneTags \u003d new HashSet\u003c\u003e(personToClone.getTags());","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"simbayippy"},"content":"        ArrayList\u003cAppointment\u003e cloneAppointments \u003d new ArrayList\u003c\u003e(personToClone.getAppointments());","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"simbayippy"},"content":"        return new Person(cloneName, clonePhone, cloneEmail, cloneNric, cloneAddress, cloneTags, cloneAppointments);","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"yezkez10"},"content":"     * Returns true if both persons have the same name, phone number and nric fields.","lastModifiedDate":"2023-10-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":205,"author":{"gitId":"yezkez10"},"content":"                //\u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-10-11"},{"lineNumber":206,"author":{"gitId":"yezkez10"},"content":"                \u0026\u0026 nric.equals(otherPerson.nric);","lastModifiedDate":"2023-10-11"},{"lineNumber":207,"author":{"gitId":"yezkez10"},"content":"                //\u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-10-11"},{"lineNumber":208,"author":{"gitId":"yezkez10"},"content":"                //\u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-10-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":214,"author":{"gitId":"wj331"},"content":"        return Objects.hash(name, phone, email, gender, age, ethnic, nric, address, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":223,"author":{"gitId":"wj331"},"content":"                .add(\"gender\", gender)","lastModifiedDate":"2023-10-15"},{"lineNumber":224,"author":{"gitId":"wj331"},"content":"                .add(\"age\", age)","lastModifiedDate":"2023-10-15"},{"lineNumber":225,"author":{"gitId":"wj331"},"content":"                .add(\"ethnic\", ethnic)","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"yezkez10"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2023-10-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":229,"author":{"gitId":"simbayippy"},"content":"                .add(\"appointments\", appointments)","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"simbayippy":57,"wj331":22,"yezkez10":13,"-":120,"Bryan-Goh":21}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"                    new Gender(\"M\"), new Age(21), new Ethnicity(\"Chinese\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T1341367E\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"                    new Gender(\"F\"), new Age(16), new Ethnicity(\"Chinese\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T1231437E\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"                    new Gender(\"F\"), new Age(60), new Ethnicity(\"Eurasian\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T5443267E\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"                    new Gender(\"M\"), new Age(55), new Ethnicity(\"Chinese\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T1290127E\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"                    new Gender(\"M\"), new Age(42), new Ethnicity(\"Malay\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T1432567E\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"                    new Gender(\"M\"), new Age(33), new Ethnicity(\"Indian\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T1236312E\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"    public static Set\u003cAppointment\u003e getAppointmentSet(String... strings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"        if (strings.length % 2 !\u003d 0) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"            throw new IllegalArgumentException(\"Arguments must be provided in pairs (details, LocalDateTime).\");","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"        Set\u003cAppointment\u003e appointments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"        for (int i \u003d 0; i \u003c strings.length; i +\u003d 2) {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"            String details \u003d strings[i];","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(strings[i + 1]); // Parse the string to LocalDateTime","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"            appointments.add(new Appointment(details, dateTime));","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"        return appointments;","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"simbayippy":19,"wj331":16,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"    private final String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"description\") String description,","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"                                  @JsonProperty(\"dateTime\") String dateTime) {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"        dateTime \u003d source.getDateTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"    @JsonProperty(\"description\")","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"        return description;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"    @JsonProperty(\"dateTime\")","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"        return new Appointment(description, dateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"simbayippy":51,"wj331":5}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    private final String gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    private final int age;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    private final String ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"    private final String nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"            @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"            @JsonProperty(\"age\") int age,","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"            @JsonProperty(\"ethnic\") String ethnic,","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"            @JsonProperty(\"nric\") String nric,","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"            @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"            @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        this.ethnic \u003d ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"        if (appointments !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"            this.appointments.addAll(appointments);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"     * CONVERTS TO JSON !!","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"        gender \u003d source.getGender().gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"        age \u003d source.getAge().age;","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"        ethnic \u003d source.getEthnic().ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"yezkez10"},"content":"        nric \u003d source.getNric().value;","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"        appointments.addAll(source.getAppointments().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"                .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"simbayippy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"simbayippy"},"content":"        final List\u003cAppointment\u003e personAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"simbayippy"},"content":"        for (JsonAdaptedAppointment appointment : appointments) {","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"simbayippy"},"content":"            personAppointments.add(appointment.toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"wj331"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"wj331"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"wj331"},"content":"        final Age modelAge \u003d new Age(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"wj331"},"content":"        if (ethnic \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"wj331"},"content":"                    Ethnicity.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"wj331"},"content":"        if (!Ethnicity.isValidEthnic(ethnic)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(Ethnicity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"wj331"},"content":"        final Ethnicity modelEthnic \u003d new Ethnicity(ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"yezkez10"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"yezkez10"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"yezkez10"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"yezkez10"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"yezkez10"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"wj331"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"wj331"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelGender,","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"wj331"},"content":"                modelAge, modelEthnic, modelNric, modelAddress, modelTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"simbayippy":17,"wj331":44,"yezkez10":12,"-":104}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    private Label gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    private Label age;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    private Label ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"    private Label nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"        gender.setText(person.getGender().gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        age.setText(String.valueOf(person.getAge().age));","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        ethnic.setText(person.getEthnic().ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"        nric.setText(person.getNric().value);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wj331":8,"yezkez10":3,"-":60}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    public static final String VALID_GENDER_AMY \u003d \"F\";","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    public static final int VALID_AGE_AMY \u003d 10;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    public static final String VALID_ETHNIC_AMY \u003d \"Chinese\";","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    public static final String VALID_NRIC_AMY \u003d \"T1234567E\";","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    public static final String VALID_NRIC_BOB \u003d \"T1234567E\";","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    public static final String VALID_GENDER_BOB \u003d \"M\";","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"    public static final int VALID_AGE_BOB \u003d 42;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"    public static final String VALID_ETHNIC_BOB \u003d \"Chinese\";","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"    public static final String VALID_APPOINTMENT_DESCRIPTION \u003d \"description of appointment\";","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"    public static final String VALID_APPOINTMENT_DATE \u003d \"01-01-2023 00:00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"simbayippy":2,"wj331":8,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"public class DeleteAppointmentCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    public void execute_deleteAppointmentSuccessful() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"        Person validPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"        LocalDateTime time1 \u003d ParserUtil.parseDateTime(\"02-01-2024 12:00\");","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"        LocalDateTime time2 \u003d ParserUtil.parseDateTime(\"02-01-2025 12:00\");","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"        LocalDateTime time3 \u003d ParserUtil.parseDateTime(\"02-01-2026 12:00\");","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"        LocalDateTime time4 \u003d ParserUtil.parseDateTime(\"02-01-2027 12:00\");","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment one \u003d new Appointment(\"one\", time1);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment two \u003d new Appointment(\"two\", time2);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment three \u003d new Appointment(\"three\", time3);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment four \u003d new Appointment(\"4\", time4);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment five \u003d new Appointment(\"5\", time4);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"        validPerson.addAppointment(one);","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        validPerson.addAppointment(two);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        validPerson.addAppointment(three);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"        validPerson.addAppointment(four);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        validPerson.addAppointment(five);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        DeleteAppointmentCommand command \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        String expectedString \u003d String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS, two,","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"                Messages.format(validPerson));","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        assertEquals(new CommandResult(expectedString), command.execute(model));","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.print(validPerson.getAppointments().toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Bryan-Goh":48}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wj331":2,"-":118}},{"path":"src/test/java/seedu/address/logic/commands/EditAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DESCRIPTION;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"public class EditAppointmentCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"    public void execute_editAppointmentSuccessful() throws ParseException, CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"        Person validPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime time1 \u003d ParserUtil.parseDateTime(\"02-01-2024 12:00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime time2 \u003d ParserUtil.parseDateTime(\"02-01-2025 12:00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"        Appointment initialAdd \u003d new Appointment(\"one\", time1);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"        Appointment toEditWith \u003d new Appointment(\"two\", time2);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"        // add initial appointment to patient","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"        validPerson.addAppointment(initialAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder(toEditWith).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"                INDEX_FIRST_APPOINTMENT , descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"                toEditWith, Messages.format(validPerson));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"        assertEquals(new CommandResult(expectedMessage), editAppointmentCommand.execute(model));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"    public void execute_someFieldsSpecified_success() throws ParseException, CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"        Person validPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime time1 \u003d ParserUtil.parseDateTime(\"02-01-2024 12:00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"        Appointment initialAdd \u003d new Appointment(\"one\", time1);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"        validPerson.addAppointment(initialAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"                .withDescription(VALID_APPOINTMENT_DESCRIPTION).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"                INDEX_FIRST_APPOINTMENT , descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"        Appointment edited \u003d createEditedAppointment(initialAdd, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"                edited, Messages.format(validPerson));","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"        assertEquals(new CommandResult(expectedMessage), editAppointmentCommand.execute(model));","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"    //TODO","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"    //    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"    //    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"    //","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"    //    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"    public void execute_noFieldSpecified_failure() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"        Person validPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime time1 \u003d ParserUtil.parseDateTime(\"02-01-2024 12:00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"        Appointment initialAdd \u003d new Appointment(\"one\", time1);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"        validPerson.addAppointment(initialAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"simbayippy"},"content":"        Appointment edited \u003d createEditedAppointment(initialAdd, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"simbayippy"},"content":"                INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"simbayippy"},"content":"        // testcase returns MESSAGE_DUPLICATE_APPOINTMENT as without proper input -\u003e takes .orElse() (original input)","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"simbayippy"},"content":"        // thus, tests with MESSAGE_DUPLICATE_APPOINTMENT.","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"simbayippy"},"content":"        assertCommandFailure(editAppointmentCommand, model, editAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"simbayippy"},"content":"    public void execute_duplicateAppointment_failure() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"simbayippy"},"content":"        Person validPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime time1 \u003d ParserUtil.parseDateTime(\"02-01-2024 12:00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"simbayippy"},"content":"        Appointment initialAdd \u003d new Appointment(\"one\", time1);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"simbayippy"},"content":"        validPerson.addAppointment(initialAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"simbayippy"},"content":"        // edited person has SAME description and date","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder().withDescription(\"one\")","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"simbayippy"},"content":"                .withDateTime(\"02-01-2024 12:00\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"simbayippy"},"content":"                INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"simbayippy"},"content":"        assertCommandFailure(editAppointmentCommand, model, editAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"simbayippy"},"content":"    public void execute_invalidPatientIndex_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"simbayippy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"simbayippy"},"content":"                .withDescription(VALID_APPOINTMENT_DESCRIPTION)","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"simbayippy"},"content":"                .withDateTime(VALID_APPOINTMENT_DATE).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"simbayippy"},"content":"                INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"simbayippy"},"content":"        assertCommandFailure(editAppointmentCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"simbayippy"},"content":"    private static Appointment createEditedAppointment(Appointment apptToEdit, EditAppointmentDescriptor editApptDesc) {","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"simbayippy"},"content":"        assert apptToEdit !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"simbayippy"},"content":"        String updatedDescription \u003d editApptDesc.getDescription().orElse(apptToEdit.getDescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime updatedDateTime \u003d editApptDesc.getDateTime().orElse(apptToEdit.getDateTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"simbayippy"},"content":"        return new Appointment(updatedDescription, updatedDateTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"simbayippy":135}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", nric\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"                + editPersonDescriptor.getNric().orElse(null) + \", address\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":70,"Bryan-Goh":2}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_PATIENT_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.logic.Messages.MESSAGE_PATIENTS_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"        String expectedMessage \u003d MESSAGE_NO_PATIENT_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tohpinren":4,"-":88}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"    public void parseCommand_delete_appointment() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"        DeleteAppointmentCommand command \u003d (DeleteAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"                DeleteAppointmentCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"                + PREFIX_APPOINTMENT + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"        assertEquals(new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":101,"Bryan-Goh":11}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"public class DeleteAppointmentCommandParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    private DeleteAppointmentCommandParser parser \u003d new DeleteAppointmentCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    public void parse_validArgs_returnsDeleteAppointmentCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"        assertParseSuccess(parser, \"1\" + \" \" + PREFIX_APPOINTMENT + \"1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"                new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"        assertParseFailure(parser, \"a\" + \" \" + PREFIX_APPOINTMENT + \"1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_APPOINTMENT + \"a\",","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"        assertParseFailure(parser, \"\" + \" \" + PREFIX_APPOINTMENT + \"\",","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Bryan-Goh":30}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    private static final String INVALID_GENDER \u003d \"Female\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    private static final int INVALID_AGE \u003d -5;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    private static final String INVALID_ETHNIC \u003d \"American\";","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"    private static final String INVALID_NRIC \u003d \"A1B2C3D4E\";","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"    private static final String[] INVALID_APPOINTMENT \u003d new String[]{\"hii\", \"2019 01 01\"};","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    private static final int VALID_AGE \u003d BENSON.getAge().age;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    private static final String VALID_ETHNIC \u003d BENSON.getEthnic().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"    private static final List\u003cJsonAdaptedAppointment\u003e VALID_APPOINTMENT \u003d BENSON.getAppointments().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"            .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"                VALID_AGE, VALID_ETHNIC, VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_GENDER, VALID_AGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"                VALID_ETHNIC, VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_GENDER, VALID_AGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"                VALID_ETHNIC, VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"                null, VALID_AGE, VALID_ETHNIC, VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"    public void toModelType_invalidAge_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, INVALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"    public void toModelType_invalidEthnic_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, INVALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"wj331"},"content":"    public void toModelType_nullEthnic_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"wj331"},"content":"                VALID_GENDER, VALID_AGE, null, VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"wj331"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"yezkez10"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"yezkez10"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"wj331"},"content":"                        INVALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"yezkez10"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"yezkez10"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"wj331"},"content":"                VALID_GENDER, VALID_AGE, VALID_ETHNIC, null, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"yezkez10"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, INVALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"wj331"},"content":"                VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"wj331"},"content":"                VALID_NRIC, null, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":186,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, invalidTags, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"simbayippy"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"simbayippy"},"content":"    public void toModelType_invalidAppointments_throwsIllegalValueException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"simbayippy"},"content":"        List\u003cJsonAdaptedAppointment\u003e invalidAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"simbayippy"},"content":"        invalidAppointments.add(new JsonAdaptedAppointment(INVALID_APPOINTMENT[0], INVALID_APPOINTMENT[1]));","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"simbayippy"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, invalidAppointments);","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"simbayippy":12,"wj331":72,"yezkez10":15,"-":102}},{"path":"src/test/java/seedu/address/testutil/EditAppointmentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"public class EditAppointmentDescriptorBuilder {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"    private EditAppointmentDescriptor descriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptorBuilder() {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code EditAppointmentDescriptor}\u0027s details","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"     * @param descriptor","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptorBuilder(EditAppointmentDescriptor descriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"        this.descriptor \u003d new EditAppointmentDescriptor(descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptorBuilder(Appointment appointment) {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"        descriptor.setDescription(appointment.getDescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"        descriptor.setDateTime(appointment.getDateTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptorBuilder withDescription(String desc) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"        descriptor.setDescription(desc);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptorBuilder withDateTime(String dateTime) {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"        descriptor.setDateTime(LocalDateTime.parse(dateTime, formatter));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptor build() {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"        return descriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"simbayippy":57}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    public static final String DEFAULT_GENDER \u003d \"M\";","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    public static final int DEFAULT_AGE \u003d 21;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    public static final String DEFAULT_ETHNIC \u003d \"Chinese\";","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0123456E\";","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    private Gender gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    private Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    private Ethnicity ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"    private Nric nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"    private Set\u003cAppointment\u003e appointments;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        ethnic \u003d new Ethnicity(DEFAULT_ETHNIC);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"        age \u003d personToCopy.getAge();","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"        ethnic \u003d personToCopy.getEthnic();","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"yezkez10"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"     * Parses the {@code appointments} into a {@code ArrayList\u003cAppointment\u003e}","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"     * and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"simbayippy"},"content":"    public PersonBuilder withAppointments(String ... appointments) {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"simbayippy"},"content":"        this.appointments \u003d SampleDataUtil.getAppointmentSet(appointments);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"simbayippy"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"     * Sets the {@code Age} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"    public PersonBuilder withAge(int age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"     * Sets the {@code Ethnic} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"wj331"},"content":"    public PersonBuilder withEthnic(String ethnic) {","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"wj331"},"content":"        this.ethnic \u003d new Ethnicity(ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"wj331"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":145,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"simbayippy"},"content":"     * Sets the {@code NRIC} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"yezkez10"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"yezkez10"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"yezkez10"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":154,"author":{"gitId":"wj331"},"content":"        return new Person(name, phone, email, gender, age, ethnic, nric, address, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"simbayippy":8,"wj331":41,"yezkez10":10,"-":96,"Bryan-Goh":2}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"    public static final Index INDEX_FIRST_APPOINTMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"    public static final Index INDEX_SECOND_APPOINTMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"    public static final Index INDEX_THIRD_APPOINTMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"simbayippy":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ETHNIC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ETHNIC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"            .withAge(12)","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Eurasian\")","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"            .withNric(\"T1234567E\")","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"            .withAge(42)","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Eurasian\")","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"            .withNric(\"T0000000Z\")","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"            .withAddress(\"123 NUS DRIVE\")","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"            .withAge(22)","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Others\")","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"            .withNric(\"T1234567E\").withAddress(\"wall street\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"            .withAge(25)","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Chinese\")","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"            .withNric(\"T1234567E\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"            .withAge(32)","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Eurasian\")","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"            .withNric(\"T1234567E\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"            .withAge(120)","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Malay\")","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"            .withNric(\"T1234567E\")","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"            .withAge(100)","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Indian\")","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"            .withNric(\"T1234567E\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"            .withAge(0)","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Chinese\")","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"            .withNric(\"T1234567E\").withAddress(\"little india\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"            .withAge(12)","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Eurasian\")","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"            .withNric(\"T1234567E\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"            .withGender(VALID_GENDER_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"            .withAge(VALID_AGE_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"            .withEthnic(VALID_ETHNIC_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"            .withNric(VALID_NRIC_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"            .withGender(VALID_GENDER_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"            .withAge(VALID_AGE_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"            .withEthnic(VALID_ETHNIC_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"            .withNric(VALID_NRIC_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"simbayippy":5,"wj331":61,"-":64,"Bryan-Goh":1}}]
